{"ast":null,"code":"module.exports = isTypedArray;\nisTypedArray.strict = isStrictTypedArray;\nisTypedArray.loose = isLooseTypedArray;\nvar toString = Object.prototype.toString;\nvar names = {\n  '[object Int8Array]': true,\n  '[object Int16Array]': true,\n  '[object Int32Array]': true,\n  '[object Uint8Array]': true,\n  '[object Uint8ClampedArray]': true,\n  '[object Uint16Array]': true,\n  '[object Uint32Array]': true,\n  '[object Float32Array]': true,\n  '[object Float64Array]': true\n};\n\nfunction isTypedArray(arr) {\n  return isStrictTypedArray(arr) || isLooseTypedArray(arr);\n}\n\nfunction isStrictTypedArray(arr) {\n  return arr instanceof Int8Array || arr instanceof Int16Array || arr instanceof Int32Array || arr instanceof Uint8Array || arr instanceof Uint8ClampedArray || arr instanceof Uint16Array || arr instanceof Uint32Array || arr instanceof Float32Array || arr instanceof Float64Array;\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)];\n}","map":{"version":3,"names":["module","exports","isTypedArray","strict","isStrictTypedArray","loose","isLooseTypedArray","toString","Object","prototype","names","arr","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","Float64Array","call"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/is-typedarray/index.js"],"sourcesContent":["module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAsBC,YAAtB;AACAA,YAAY,CAACC,MAAb,GAAsBC,kBAAtB;AACAF,YAAY,CAACG,KAAb,GAAsBC,iBAAtB;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBF,QAAhC;AACA,IAAIG,KAAK,GAAG;EACR,sBAAsB,IADd;EAER,uBAAuB,IAFf;EAGR,uBAAuB,IAHf;EAIR,uBAAuB,IAJf;EAKR,8BAA8B,IALtB;EAMR,wBAAwB,IANhB;EAOR,wBAAwB,IAPhB;EAQR,yBAAyB,IARjB;EASR,yBAAyB;AATjB,CAAZ;;AAYA,SAASR,YAAT,CAAsBS,GAAtB,EAA2B;EACzB,OACKP,kBAAkB,CAACO,GAAD,CAAlB,IACAL,iBAAiB,CAACK,GAAD,CAFtB;AAID;;AAED,SAASP,kBAAT,CAA4BO,GAA5B,EAAiC;EAC/B,OACKA,GAAG,YAAYC,SAAf,IACAD,GAAG,YAAYE,UADf,IAEAF,GAAG,YAAYG,UAFf,IAGAH,GAAG,YAAYI,UAHf,IAIAJ,GAAG,YAAYK,iBAJf,IAKAL,GAAG,YAAYM,WALf,IAMAN,GAAG,YAAYO,WANf,IAOAP,GAAG,YAAYQ,YAPf,IAQAR,GAAG,YAAYS,YATpB;AAWD;;AAED,SAASd,iBAAT,CAA2BK,GAA3B,EAAgC;EAC9B,OAAOD,KAAK,CAACH,QAAQ,CAACc,IAAT,CAAcV,GAAd,CAAD,CAAZ;AACD"},"metadata":{},"sourceType":"script"}