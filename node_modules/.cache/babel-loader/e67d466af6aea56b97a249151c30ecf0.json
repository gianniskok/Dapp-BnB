{"ast":null,"code":"'use strict';\n\nconst configure = require('./lib/configure');\n\nconst errCode = require('err-code');\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n\n  return start;\n});","map":{"version":3,"names":["configure","require","errCode","module","exports","api","start","options","Error"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/start.js"],"sourcesContent":["'use strict'\n\nconst configure = require('./lib/configure')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,KAAK,GAAG,kBAAwB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACpC,MAAML,OAAO,CAAC,IAAIM,KAAJ,CAAU,iBAAV,CAAD,EAA+B,qBAA/B,CAAb;EACD,CAFD;;EAIA,OAAOF,KAAP;AACD,CATyB,CAA1B"},"metadata":{},"sourceType":"script"}