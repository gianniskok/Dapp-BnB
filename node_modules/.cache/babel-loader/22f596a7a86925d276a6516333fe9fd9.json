{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst errCode = require('err-code');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n\n  return info;\n});","map":{"version":3,"names":["configure","require","errCode","module","exports","api","info","name","options","Error"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/key/info.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,IAAI,GAAG,gBAAOC,IAAP,EAA8B;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACzC,MAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAU,iBAAV,CAAD,EAA+B,qBAA/B,CAAb;EACD,CAFD;;EAIA,OAAOH,IAAP;AACD,CATyB,CAA1B"},"metadata":{},"sourceType":"script"}