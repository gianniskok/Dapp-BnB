{"ast":null,"code":"'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'number',\n    macro: function (schema, parentSchema) {\n      var min = schema[0],\n          max = schema[1],\n          exclusive = parentSchema.exclusiveRange;\n      validateRangeSchema(min, max, exclusive);\n      return exclusive === true ? {\n        exclusiveMinimum: min,\n        exclusiveMaximum: max\n      } : {\n        minimum: min,\n        maximum: max\n      };\n    },\n    metaSchema: {\n      type: 'array',\n      minItems: 2,\n      maxItems: 2,\n      items: {\n        type: 'number'\n      }\n    }\n  };\n  ajv.addKeyword('range', defFunc.definition);\n  ajv.addKeyword('exclusiveRange');\n  return ajv;\n\n  function validateRangeSchema(min, max, exclusive) {\n    if (exclusive !== undefined && typeof exclusive != 'boolean') throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');\n    if (min > max || exclusive && min == max) throw new Error('There are no numbers in range');\n  }\n};","map":{"version":3,"names":["module","exports","defFunc","ajv","definition","type","macro","schema","parentSchema","min","max","exclusive","exclusiveRange","validateRangeSchema","exclusiveMinimum","exclusiveMaximum","minimum","maximum","metaSchema","minItems","maxItems","items","addKeyword","undefined","Error"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ajv-keywords/keywords/range.js"],"sourcesContent":["'use strict';\n\nmodule.exports = function defFunc(ajv) {\n  defFunc.definition = {\n    type: 'number',\n    macro: function (schema, parentSchema) {\n      var min = schema[0]\n        , max = schema[1]\n        , exclusive = parentSchema.exclusiveRange;\n\n      validateRangeSchema(min, max, exclusive);\n\n      return exclusive === true\n              ? {exclusiveMinimum: min, exclusiveMaximum: max}\n              : {minimum: min, maximum: max};\n    },\n    metaSchema: {\n      type: 'array',\n      minItems: 2,\n      maxItems: 2,\n      items: { type: 'number' }\n    }\n  };\n\n  ajv.addKeyword('range', defFunc.definition);\n  ajv.addKeyword('exclusiveRange');\n  return ajv;\n\n  function validateRangeSchema(min, max, exclusive) {\n    if (exclusive !== undefined && typeof exclusive != 'boolean')\n      throw new Error('Invalid schema for exclusiveRange keyword, should be boolean');\n\n    if (min > max || (exclusive && min == max))\n      throw new Error('There are no numbers in range');\n  }\n};\n"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACrCD,OAAO,CAACE,UAAR,GAAqB;IACnBC,IAAI,EAAE,QADa;IAEnBC,KAAK,EAAE,UAAUC,MAAV,EAAkBC,YAAlB,EAAgC;MACrC,IAAIC,GAAG,GAAGF,MAAM,CAAC,CAAD,CAAhB;MAAA,IACIG,GAAG,GAAGH,MAAM,CAAC,CAAD,CADhB;MAAA,IAEII,SAAS,GAAGH,YAAY,CAACI,cAF7B;MAIAC,mBAAmB,CAACJ,GAAD,EAAMC,GAAN,EAAWC,SAAX,CAAnB;MAEA,OAAOA,SAAS,KAAK,IAAd,GACG;QAACG,gBAAgB,EAAEL,GAAnB;QAAwBM,gBAAgB,EAAEL;MAA1C,CADH,GAEG;QAACM,OAAO,EAAEP,GAAV;QAAeQ,OAAO,EAAEP;MAAxB,CAFV;IAGD,CAZkB;IAanBQ,UAAU,EAAE;MACVb,IAAI,EAAE,OADI;MAEVc,QAAQ,EAAE,CAFA;MAGVC,QAAQ,EAAE,CAHA;MAIVC,KAAK,EAAE;QAAEhB,IAAI,EAAE;MAAR;IAJG;EAbO,CAArB;EAqBAF,GAAG,CAACmB,UAAJ,CAAe,OAAf,EAAwBpB,OAAO,CAACE,UAAhC;EACAD,GAAG,CAACmB,UAAJ,CAAe,gBAAf;EACA,OAAOnB,GAAP;;EAEA,SAASU,mBAAT,CAA6BJ,GAA7B,EAAkCC,GAAlC,EAAuCC,SAAvC,EAAkD;IAChD,IAAIA,SAAS,KAAKY,SAAd,IAA2B,OAAOZ,SAAP,IAAoB,SAAnD,EACE,MAAM,IAAIa,KAAJ,CAAU,8DAAV,CAAN;IAEF,IAAIf,GAAG,GAAGC,GAAN,IAAcC,SAAS,IAAIF,GAAG,IAAIC,GAAtC,EACE,MAAM,IAAIc,KAAJ,CAAU,+BAAV,CAAN;EACH;AACF,CAjCD"},"metadata":{},"sourceType":"script"}