{"ast":null,"code":"var fs = require('fs');\n\nvar polyfills = require('./polyfills.js');\n\nvar legacy = require('./legacy-streams.js');\n\nvar clone = require('./clone.js');\n\nvar util = require('util');\n/* istanbul ignore next - node 0.x polyfill */\n\n\nvar gracefulQueue;\nvar previousSymbol;\n/* istanbul ignore else - node 0.x polyfill */\n\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue'); // This is used in testing by future versions\n\n  previousSymbol = Symbol.for('graceful-fs.previous');\n} else {\n  gracefulQueue = '___graceful-fs.queue';\n  previousSymbol = '___graceful-fs.previous';\n}\n\nfunction noop() {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function () {\n      return queue;\n    }\n  });\n}\n\nvar debug = noop;\nif (util.debuglog) debug = util.debuglog('gfs4');else if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) debug = function () {\n  var m = util.format.apply(util, arguments);\n  m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ');\n  console.error(m);\n}; // Once time initialization\n\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || [];\n  publishQueue(fs, queue); // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n\n  fs.close = function (fs$close) {\n    function close(fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue();\n        }\n\n        if (typeof cb === 'function') cb.apply(this, arguments);\n      });\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    });\n    return close;\n  }(fs.close);\n\n  fs.closeSync = function (fs$closeSync) {\n    function closeSync(fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments);\n      resetQueue();\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    });\n    return closeSync;\n  }(fs.closeSync);\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function () {\n      debug(fs[gracefulQueue]);\n\n      require('assert').equal(fs[gracefulQueue].length, 0);\n    });\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs));\n\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n  module.exports = patch(fs);\n  fs.__patched = true;\n}\n\nfunction patch(fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs);\n  fs.gracefulify = patch;\n  fs.createReadStream = createReadStream;\n  fs.createWriteStream = createWriteStream;\n  var fs$readFile = fs.readFile;\n  fs.readFile = readFile;\n\n  function readFile(path, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$readFile(path, options, cb);\n\n    function go$readFile(path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n\n  var fs$writeFile = fs.writeFile;\n  fs.writeFile = writeFile;\n\n  function writeFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$writeFile(path, data, options, cb);\n\n    function go$writeFile(path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n\n  var fs$appendFile = fs.appendFile;\n  if (fs$appendFile) fs.appendFile = appendFile;\n\n  function appendFile(path, data, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    return go$appendFile(path, data, options, cb);\n\n    function go$appendFile(path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n\n  var fs$copyFile = fs.copyFile;\n  if (fs$copyFile) fs.copyFile = copyFile;\n\n  function copyFile(src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags;\n      flags = 0;\n    }\n\n    return go$copyFile(src, dest, flags, cb);\n\n    function go$copyFile(src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n\n  var fs$readdir = fs.readdir;\n  fs.readdir = readdir;\n  var noReaddirOptionVersions = /^v[0-5]\\./;\n\n  function readdir(path, options, cb) {\n    if (typeof options === 'function') cb = options, options = null;\n    var go$readdir = noReaddirOptionVersions.test(process.version) ? function go$readdir(path, options, cb, startTime) {\n      return fs$readdir(path, fs$readdirCallback(path, options, cb, startTime));\n    } : function go$readdir(path, options, cb, startTime) {\n      return fs$readdir(path, options, fs$readdirCallback(path, options, cb, startTime));\n    };\n    return go$readdir(path, options, cb);\n\n    function fs$readdirCallback(path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$readdir, [path, options, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (files && files.sort) files.sort();\n          if (typeof cb === 'function') cb.call(this, err, files);\n        }\n      };\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs);\n    ReadStream = legStreams.ReadStream;\n    WriteStream = legStreams.WriteStream;\n  }\n\n  var fs$ReadStream = fs.ReadStream;\n\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype);\n    ReadStream.prototype.open = ReadStream$open;\n  }\n\n  var fs$WriteStream = fs.WriteStream;\n\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype);\n    WriteStream.prototype.open = WriteStream$open;\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream;\n    },\n    set: function (val) {\n      ReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream;\n    },\n    set: function (val) {\n      WriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  }); // legacy names\n\n  var FileReadStream = ReadStream;\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream;\n    },\n    set: function (val) {\n      FileReadStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  var FileWriteStream = WriteStream;\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream;\n    },\n    set: function (val) {\n      FileWriteStream = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  function ReadStream(path, options) {\n    if (this instanceof ReadStream) return fs$ReadStream.apply(this, arguments), this;else return ReadStream.apply(Object.create(ReadStream.prototype), arguments);\n  }\n\n  function ReadStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose) that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n        that.read();\n      }\n    });\n  }\n\n  function WriteStream(path, options) {\n    if (this instanceof WriteStream) return fs$WriteStream.apply(this, arguments), this;else return WriteStream.apply(Object.create(WriteStream.prototype), arguments);\n  }\n\n  function WriteStream$open() {\n    var that = this;\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy();\n        that.emit('error', err);\n      } else {\n        that.fd = fd;\n        that.emit('open', fd);\n      }\n    });\n  }\n\n  function createReadStream(path, options) {\n    return new fs.ReadStream(path, options);\n  }\n\n  function createWriteStream(path, options) {\n    return new fs.WriteStream(path, options);\n  }\n\n  var fs$open = fs.open;\n  fs.open = open;\n\n  function open(path, flags, mode, cb) {\n    if (typeof mode === 'function') cb = mode, mode = null;\n    return go$open(path, flags, mode, cb);\n\n    function go$open(path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE')) enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()]);else {\n          if (typeof cb === 'function') cb.apply(this, arguments);\n        }\n      });\n    }\n  }\n\n  return fs;\n}\n\nfunction enqueue(elem) {\n  debug('ENQUEUE', elem[0].name, elem[1]);\n  fs[gracefulQueue].push(elem);\n  retry();\n} // keep track of the timeout between retry() calls\n\n\nvar retryTimer; // reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\n\nfunction resetQueue() {\n  var now = Date.now();\n\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now; // startTime\n\n      fs[gracefulQueue][i][4] = now; // lastTime\n    }\n  } // call retry to make sure we're actively processing the queue\n\n\n  retry();\n}\n\nfunction retry() {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer);\n  retryTimer = undefined;\n  if (fs[gracefulQueue].length === 0) return;\n  var elem = fs[gracefulQueue].shift();\n  var fn = elem[0];\n  var args = elem[1]; // these items may be unset if they were added by an older graceful-fs\n\n  var err = elem[2];\n  var startTime = elem[3];\n  var lastTime = elem[4]; // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args);\n    fn.apply(null, args);\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args);\n    var cb = args.pop();\n    if (typeof cb === 'function') cb.call(null, err);\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime; // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n\n    var sinceStart = Math.max(lastTime - startTime, 1); // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n\n    var desiredDelay = Math.min(sinceStart * 1.2, 100); // it's been long enough since the last retry, do it again\n\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args);\n      fn.apply(null, args.concat([startTime]));\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem);\n    }\n  } // schedule our next run if one isn't already scheduled\n\n\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0);\n  }\n}","map":{"version":3,"names":["fs","require","polyfills","legacy","clone","util","gracefulQueue","previousSymbol","Symbol","for","noop","publishQueue","context","queue","Object","defineProperty","get","debug","debuglog","test","process","env","NODE_DEBUG","m","format","apply","arguments","split","join","console","error","global","close","fs$close","fd","cb","call","err","resetQueue","value","closeSync","fs$closeSync","on","equal","length","module","exports","patch","TEST_GRACEFUL_FS_GLOBAL_PATCH","__patched","gracefulify","createReadStream","createWriteStream","fs$readFile","readFile","path","options","go$readFile","startTime","code","enqueue","Date","now","fs$writeFile","writeFile","data","go$writeFile","fs$appendFile","appendFile","go$appendFile","fs$copyFile","copyFile","src","dest","flags","go$copyFile","fs$readdir","readdir","noReaddirOptionVersions","go$readdir","version","fs$readdirCallback","files","sort","substr","legStreams","ReadStream","WriteStream","fs$ReadStream","prototype","create","open","ReadStream$open","fs$WriteStream","WriteStream$open","set","val","enumerable","configurable","FileReadStream","FileWriteStream","that","mode","autoClose","destroy","emit","read","fs$open","go$open","elem","name","push","retry","retryTimer","i","clearTimeout","undefined","shift","fn","args","lastTime","pop","sinceAttempt","sinceStart","Math","max","desiredDelay","min","concat","setTimeout"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/graceful-fs/graceful-fs.js"],"sourcesContent":["var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      resetQueue()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return go$copyFile(src, dest, flags, cb)\n\n    function go$copyFile (src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  var noReaddirOptionVersions = /^v[0-5]\\./\n  function readdir (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    var go$readdir = noReaddirOptionVersions.test(process.version)\n      ? function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n      : function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, options, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n\n    return go$readdir(path, options, cb)\n\n    function fs$readdirCallback (path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([\n            go$readdir,\n            [path, options, cb],\n            err,\n            startTime || Date.now(),\n            Date.now()\n          ])\n        else {\n          if (files && files.sort)\n            files.sort()\n\n          if (typeof cb === 'function')\n            cb.call(this, err, files)\n        }\n      }\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n  retry()\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue () {\n  var now = Date.now()\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now // startTime\n      fs[gracefulQueue][i][4] = now // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry()\n}\n\nfunction retry () {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer)\n  retryTimer = undefined\n\n  if (fs[gracefulQueue].length === 0)\n    return\n\n  var elem = fs[gracefulQueue].shift()\n  var fn = elem[0]\n  var args = elem[1]\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2]\n  var startTime = elem[3]\n  var lastTime = elem[4]\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args)\n    fn.apply(null, args)\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args)\n    var cb = args.pop()\n    if (typeof cb === 'function')\n      cb.call(null, err)\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1)\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100)\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args)\n      fn.apply(null, args.concat([startTime]))\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem)\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}