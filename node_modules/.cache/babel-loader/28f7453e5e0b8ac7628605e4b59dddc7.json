{"ast":null,"code":"'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n\n  var BASE_MAP = new Uint8Array(256);\n\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n\n    BASE_MAP[xc] = i;\n  }\n\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n\n  function encode(source) {\n    if (source instanceof Uint8Array) ;else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n\n    if (source.length === 0) {\n      return '';\n    }\n\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      pbegin++;\n    }\n\n    var it2 = size - length;\n\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n\n    var str = LEADER.repeat(zeroes);\n\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n\n    return str;\n  }\n\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n\n    var psz = 0;\n\n    if (source[psz] === ' ') {\n      return;\n    }\n\n    var zeroes = 0;\n    var length = 0;\n\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n\n      if (carry === 255) {\n        return;\n      }\n\n      var i = 0;\n\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n\n      length = i;\n      psz++;\n    }\n\n    if (source[psz] === ' ') {\n      return;\n    }\n\n    var it4 = size - length;\n\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n\n    return vch;\n  }\n\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n\n    if (buffer) {\n      return buffer;\n    }\n\n    throw new Error(`Non-${name} character`);\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\n\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nmodule.exports = _brrp__multiformats_scope_baseX;","map":{"version":3,"names":["base","ALPHABET","name","length","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","encode","source","ArrayBuffer","isView","buffer","byteOffset","byteLength","Array","isArray","from","zeroes","pbegin","pend","size","b58","carry","it1","Error","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","decode","string","src","_brrp__multiformats_scope_baseX","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/multiformats/cjs/vendor/base-x.js"],"sourcesContent":["'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n\nmodule.exports = _brrp__multiformats_scope_baseX;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}