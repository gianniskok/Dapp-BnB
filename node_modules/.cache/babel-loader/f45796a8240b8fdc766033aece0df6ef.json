{"ast":null,"code":"const fs = require(\"fs\");\n\nconst path = require(\"path\");\n\nconst mkdirp = require(\"mkdirp\");\n\nconst {\n  Tracer\n} = require(\"chrome-trace-event\");\n\nconst validateOptions = require(\"schema-utils\");\n\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\n\nlet inspector = undefined;\n\ntry {\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  inspector = require(\"inspector\");\n} catch (e) {\n  console.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n  constructor(inspector) {\n    this.session = undefined;\n    this.inspector = inspector;\n  }\n\n  hasSession() {\n    return this.session !== undefined;\n  }\n\n  startProfiling() {\n    if (this.inspector === undefined) {\n      return Promise.resolve();\n    }\n\n    try {\n      this.session = new inspector.Session();\n      this.session.connect();\n    } catch (_) {\n      this.session = undefined;\n      return Promise.resolve();\n    }\n\n    return Promise.all([this.sendCommand(\"Profiler.setSamplingInterval\", {\n      interval: 100\n    }), this.sendCommand(\"Profiler.enable\"), this.sendCommand(\"Profiler.start\")]);\n  }\n\n  sendCommand(method, params) {\n    if (this.hasSession()) {\n      return new Promise((res, rej) => {\n        return this.session.post(method, params, (err, params) => {\n          if (err !== null) {\n            rej(err);\n          } else {\n            res(params);\n          }\n        });\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  destroy() {\n    if (this.hasSession()) {\n      this.session.disconnect();\n    }\n\n    return Promise.resolve();\n  }\n\n  stopProfiling() {\n    return this.sendCommand(\"Profiler.stop\");\n  }\n\n}\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\n\n\nconst createTrace = outputPath => {\n  const trace = new Tracer({\n    noStream: true\n  });\n  const profiler = new Profiler(inspector);\n\n  if (/\\/|\\\\/.test(outputPath)) {\n    const dirPath = path.dirname(outputPath);\n    mkdirp.sync(dirPath);\n  }\n\n  const fsStream = fs.createWriteStream(outputPath);\n  let counter = 0;\n  trace.pipe(fsStream); // These are critical events that need to be inserted so that tools like\n  // chrome dev tools can load the profile.\n\n  trace.instantEvent({\n    name: \"TracingStartedInPage\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\",\n        page: \"0xfff\",\n        frames: [{\n          frame: \"0xfff\",\n          url: \"webpack\",\n          name: \"\"\n        }]\n      }\n    }\n  });\n  trace.instantEvent({\n    name: \"TracingStartedInBrowser\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\"\n      }\n    }\n  });\n  return {\n    trace,\n    counter,\n    profiler,\n    end: callback => {\n      // Wait until the write stream finishes.\n      fsStream.on(\"finish\", () => {\n        callback();\n      }); // Tear down the readable trace stream.\n\n      trace.push(null);\n    }\n  };\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n  /**\n   * @param {ProfilingPluginOptions=} opts options object\n   */\n  constructor(opts) {\n    validateOptions(schema, opts || {}, \"Profiling plugin\");\n    opts = opts || {};\n    this.outputPath = opts.outputPath || \"events.json\";\n  }\n\n  apply(compiler) {\n    const tracer = createTrace(this.outputPath);\n    tracer.profiler.startProfiling(); // Compiler Hooks\n\n    Object.keys(compiler.hooks).forEach(hookName => {\n      compiler.hooks[hookName].intercept(makeInterceptorFor(\"Compiler\", tracer)(hookName));\n    });\n    Object.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n      compiler.resolverFactory.hooks[hookName].intercept(makeInterceptorFor(\"Resolver\", tracer)(hookName));\n    });\n    compiler.hooks.compilation.tap(pluginName, (compilation, _ref) => {\n      let {\n        normalModuleFactory,\n        contextModuleFactory\n      } = _ref;\n      interceptAllHooksFor(compilation, tracer, \"Compilation\");\n      interceptAllHooksFor(normalModuleFactory, tracer, \"Normal Module Factory\");\n      interceptAllHooksFor(contextModuleFactory, tracer, \"Context Module Factory\");\n      interceptAllParserHooks(normalModuleFactory, tracer);\n      interceptTemplateInstancesFrom(compilation, tracer);\n    }); // We need to write out the CPU profile when we are all done.\n\n    compiler.hooks.done.tapAsync({\n      name: pluginName,\n      stage: Infinity\n    }, (stats, callback) => {\n      tracer.profiler.stopProfiling().then(parsedResults => {\n        if (parsedResults === undefined) {\n          tracer.profiler.destroy();\n          tracer.trace.flush();\n          tracer.end(callback);\n          return;\n        }\n\n        const cpuStartTime = parsedResults.profile.startTime;\n        const cpuEndTime = parsedResults.profile.endTime;\n        tracer.trace.completeEvent({\n          name: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n          id: ++tracer.counter,\n          cat: [\"toplevel\"],\n          ts: cpuStartTime,\n          args: {\n            src_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n            src_func: \"Accept\"\n          }\n        });\n        tracer.trace.completeEvent({\n          name: \"EvaluateScript\",\n          id: ++tracer.counter,\n          cat: [\"devtools.timeline\"],\n          ts: cpuStartTime,\n          dur: cpuEndTime - cpuStartTime,\n          args: {\n            data: {\n              url: \"webpack\",\n              lineNumber: 1,\n              columnNumber: 1,\n              frame: \"0xFFF\"\n            }\n          }\n        });\n        tracer.trace.instantEvent({\n          name: \"CpuProfile\",\n          id: ++tracer.counter,\n          cat: [\"disabled-by-default-devtools.timeline\"],\n          ts: cpuEndTime,\n          args: {\n            data: {\n              cpuProfile: parsedResults.profile\n            }\n          }\n        });\n        tracer.profiler.destroy();\n        tracer.trace.flush();\n        tracer.end(callback);\n      });\n    });\n  }\n\n}\n\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n  const {\n    mainTemplate,\n    chunkTemplate,\n    hotUpdateChunkTemplate,\n    moduleTemplates\n  } = compilation;\n  const {\n    javascript,\n    webassembly\n  } = moduleTemplates;\n  [{\n    instance: mainTemplate,\n    name: \"MainTemplate\"\n  }, {\n    instance: chunkTemplate,\n    name: \"ChunkTemplate\"\n  }, {\n    instance: hotUpdateChunkTemplate,\n    name: \"HotUpdateChunkTemplate\"\n  }, {\n    instance: javascript,\n    name: \"JavaScriptModuleTemplate\"\n  }, {\n    instance: webassembly,\n    name: \"WebAssemblyModuleTemplate\"\n  }].forEach(templateObject => {\n    Object.keys(templateObject.instance.hooks).forEach(hookName => {\n      templateObject.instance.hooks[hookName].intercept(makeInterceptorFor(templateObject.name, tracer)(hookName));\n    });\n  });\n};\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n  if (Reflect.has(instance, \"hooks\")) {\n    Object.keys(instance.hooks).forEach(hookName => {\n      instance.hooks[hookName].intercept(makeInterceptorFor(logLabel, tracer)(hookName));\n    });\n  }\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n  const moduleTypes = [\"javascript/auto\", \"javascript/dynamic\", \"javascript/esm\", \"json\", \"webassembly/experimental\"];\n  moduleTypes.forEach(moduleType => {\n    moduleFactory.hooks.parser.for(moduleType).tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n      interceptAllHooksFor(parser, tracer, \"Parser\");\n    });\n  });\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n  register: _ref2 => {\n    let {\n      name,\n      type,\n      context,\n      fn\n    } = _ref2;\n    const newFn = makeNewProfiledTapFn(hookName, tracer, {\n      name,\n      type,\n      fn\n    });\n    return {\n      name,\n      type,\n      context,\n      fn: newFn\n    };\n  }\n}); // TODO improve typing\n\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\n\n\nconst makeNewProfiledTapFn = (hookName, tracer, _ref3) => {\n  let {\n    name,\n    type,\n    fn\n  } = _ref3;\n  const defaultCategory = [\"blink.user_timing\"];\n\n  switch (type) {\n    case \"promise\":\n      return function () {\n        const id = ++tracer.counter;\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        const promise =\n        /** @type {Promise<*>} */\n        fn(...arguments);\n        return promise.then(r => {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          return r;\n        });\n      };\n\n    case \"async\":\n      return function () {\n        const id = ++tracer.counter;\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        const callback = args.pop();\n        fn(...args, function () {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          callback(...arguments);\n        });\n      };\n\n    case \"sync\":\n      return function () {\n        const id = ++tracer.counter; // Do not instrument ourself due to the CPU\n        // profile needing to be the last event in the trace.\n\n        if (name === pluginName) {\n          return fn(...arguments);\n        }\n\n        tracer.trace.begin({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        let r;\n\n        try {\n          r = fn(...arguments);\n        } catch (error) {\n          tracer.trace.end({\n            name,\n            id,\n            cat: defaultCategory\n          });\n          throw error;\n        }\n\n        tracer.trace.end({\n          name,\n          id,\n          cat: defaultCategory\n        });\n        return r;\n      };\n\n    default:\n      break;\n  }\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;","map":{"version":3,"names":["fs","require","path","mkdirp","Tracer","validateOptions","schema","inspector","undefined","e","console","log","Profiler","constructor","session","hasSession","startProfiling","Promise","resolve","Session","connect","_","all","sendCommand","interval","method","params","res","rej","post","err","destroy","disconnect","stopProfiling","createTrace","outputPath","trace","noStream","profiler","test","dirPath","dirname","sync","fsStream","createWriteStream","counter","pipe","instantEvent","name","id","cat","args","data","sessionId","page","frames","frame","url","end","callback","on","push","pluginName","ProfilingPlugin","opts","apply","compiler","tracer","Object","keys","hooks","forEach","hookName","intercept","makeInterceptorFor","resolverFactory","compilation","tap","normalModuleFactory","contextModuleFactory","interceptAllHooksFor","interceptAllParserHooks","interceptTemplateInstancesFrom","done","tapAsync","stage","Infinity","stats","then","parsedResults","flush","cpuStartTime","profile","startTime","cpuEndTime","endTime","completeEvent","ts","src_file","src_func","dur","lineNumber","columnNumber","cpuProfile","mainTemplate","chunkTemplate","hotUpdateChunkTemplate","moduleTemplates","javascript","webassembly","instance","templateObject","logLabel","Reflect","has","moduleFactory","moduleTypes","moduleType","parser","for","parserOpts","register","type","context","fn","newFn","makeNewProfiledTapFn","defaultCategory","begin","promise","r","pop","error","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/debug/ProfilingPlugin.js"],"sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst { Tracer } = require(\"chrome-trace-event\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nlet inspector = undefined;\n\ntry {\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tinspector = require(\"inspector\");\n} catch (e) {\n\tconsole.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n\tconstructor(inspector) {\n\t\tthis.session = undefined;\n\t\tthis.inspector = inspector;\n\t}\n\n\thasSession() {\n\t\treturn this.session !== undefined;\n\t}\n\n\tstartProfiling() {\n\t\tif (this.inspector === undefined) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\ttry {\n\t\t\tthis.session = new inspector.Session();\n\t\t\tthis.session.connect();\n\t\t} catch (_) {\n\t\t\tthis.session = undefined;\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.sendCommand(\"Profiler.setSamplingInterval\", {\n\t\t\t\tinterval: 100\n\t\t\t}),\n\t\t\tthis.sendCommand(\"Profiler.enable\"),\n\t\t\tthis.sendCommand(\"Profiler.start\")\n\t\t]);\n\t}\n\n\tsendCommand(method, params) {\n\t\tif (this.hasSession()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\treturn this.session.post(method, params, (err, params) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(params);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this.hasSession()) {\n\t\t\tthis.session.disconnect();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstopProfiling() {\n\t\treturn this.sendCommand(\"Profiler.stop\");\n\t}\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = outputPath => {\n\tconst trace = new Tracer({\n\t\tnoStream: true\n\t});\n\tconst profiler = new Profiler(inspector);\n\tif (/\\/|\\\\/.test(outputPath)) {\n\t\tconst dirPath = path.dirname(outputPath);\n\t\tmkdirp.sync(dirPath);\n\t}\n\tconst fsStream = fs.createWriteStream(outputPath);\n\n\tlet counter = 0;\n\n\ttrace.pipe(fsStream);\n\t// These are critical events that need to be inserted so that tools like\n\t// chrome dev tools can load the profile.\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInPage\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\",\n\t\t\t\tpage: \"0xfff\",\n\t\t\t\tframes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tframe: \"0xfff\",\n\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\tname: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInBrowser\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\"\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttrace,\n\t\tcounter,\n\t\tprofiler,\n\t\tend: callback => {\n\t\t\t// Wait until the write stream finishes.\n\t\t\tfsStream.on(\"finish\", () => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\t// Tear down the readable trace stream.\n\t\t\ttrace.push(null);\n\t\t}\n\t};\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n\t/**\n\t * @param {ProfilingPluginOptions=} opts options object\n\t */\n\tconstructor(opts) {\n\t\tvalidateOptions(schema, opts || {}, \"Profiling plugin\");\n\t\topts = opts || {};\n\t\tthis.outputPath = opts.outputPath || \"events.json\";\n\t}\n\n\tapply(compiler) {\n\t\tconst tracer = createTrace(this.outputPath);\n\t\ttracer.profiler.startProfiling();\n\n\t\t// Compiler Hooks\n\t\tObject.keys(compiler.hooks).forEach(hookName => {\n\t\t\tcompiler.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Compiler\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tObject.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n\t\t\tcompiler.resolverFactory.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Resolver\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tpluginName,\n\t\t\t(compilation, { normalModuleFactory, contextModuleFactory }) => {\n\t\t\t\tinterceptAllHooksFor(compilation, tracer, \"Compilation\");\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tnormalModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Normal Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tcontextModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Context Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllParserHooks(normalModuleFactory, tracer);\n\t\t\t\tinterceptTemplateInstancesFrom(compilation, tracer);\n\t\t\t}\n\t\t);\n\n\t\t// We need to write out the CPU profile when we are all done.\n\t\tcompiler.hooks.done.tapAsync(\n\t\t\t{\n\t\t\t\tname: pluginName,\n\t\t\t\tstage: Infinity\n\t\t\t},\n\t\t\t(stats, callback) => {\n\t\t\t\ttracer.profiler.stopProfiling().then(parsedResults => {\n\t\t\t\t\tif (parsedResults === undefined) {\n\t\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\t\ttracer.end(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cpuStartTime = parsedResults.profile.startTime;\n\t\t\t\t\tconst cpuEndTime = parsedResults.profile.endTime;\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"toplevel\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tsrc_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n\t\t\t\t\t\t\tsrc_func: \"Accept\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"EvaluateScript\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"devtools.timeline\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\tdur: cpuEndTime - cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\t\t\tcolumnNumber: 1,\n\t\t\t\t\t\t\t\tframe: \"0xFFF\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.instantEvent({\n\t\t\t\t\t\tname: \"CpuProfile\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\t\t\t\t\tts: cpuEndTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tcpuProfile: parsedResults.profile\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\ttracer.end(callback);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n\tconst {\n\t\tmainTemplate,\n\t\tchunkTemplate,\n\t\thotUpdateChunkTemplate,\n\t\tmoduleTemplates\n\t} = compilation;\n\n\tconst { javascript, webassembly } = moduleTemplates;\n\n\t[\n\t\t{\n\t\t\tinstance: mainTemplate,\n\t\t\tname: \"MainTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: chunkTemplate,\n\t\t\tname: \"ChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: hotUpdateChunkTemplate,\n\t\t\tname: \"HotUpdateChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: javascript,\n\t\t\tname: \"JavaScriptModuleTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: webassembly,\n\t\t\tname: \"WebAssemblyModuleTemplate\"\n\t\t}\n\t].forEach(templateObject => {\n\t\tObject.keys(templateObject.instance.hooks).forEach(hookName => {\n\t\t\ttemplateObject.instance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(templateObject.name, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n\tif (Reflect.has(instance, \"hooks\")) {\n\t\tObject.keys(instance.hooks).forEach(hookName => {\n\t\t\tinstance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(logLabel, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t}\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n\tconst moduleTypes = [\n\t\t\"javascript/auto\",\n\t\t\"javascript/dynamic\",\n\t\t\"javascript/esm\",\n\t\t\"json\",\n\t\t\"webassembly/experimental\"\n\t];\n\n\tmoduleTypes.forEach(moduleType => {\n\t\tmoduleFactory.hooks.parser\n\t\t\t.for(moduleType)\n\t\t\t.tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n\t\t\t\tinterceptAllHooksFor(parser, tracer, \"Parser\");\n\t\t\t});\n\t});\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n\tregister: ({ name, type, context, fn }) => {\n\t\tconst newFn = makeNewProfiledTapFn(hookName, tracer, {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tfn\n\t\t});\n\t\treturn {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tcontext,\n\t\t\tfn: newFn\n\t\t};\n\t}\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, { name, type, fn }) => {\n\tconst defaultCategory = [\"blink.user_timing\"];\n\n\tswitch (type) {\n\t\tcase \"promise\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst promise = /** @type {Promise<*>} */ (fn(...args));\n\t\t\t\treturn promise.then(r => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"async\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst callback = args.pop();\n\t\t\t\tfn(...args, (...r) => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tcallback(...r);\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"sync\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\t// Do not instrument ourself due to the CPU\n\t\t\t\t// profile needing to be the last event in the trace.\n\t\t\t\tif (name === pluginName) {\n\t\t\t\t\treturn fn(...args);\n\t\t\t\t}\n\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tlet r;\n\t\t\t\ttry {\n\t\t\t\t\tr = fn(...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\ttracer.trace.end({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t};\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}