{"ast":null,"code":"'use strict';\n\nvar use = require('use');\n\nvar define = require('define-property');\n\nvar debug = require('debug')('snapdragon:compiler');\n\nvar utils = require('./utils');\n/**\n * Create a new `Compiler` with the given `options`.\n * @param {Object} `options`\n */\n\n\nfunction Compiler(options, state) {\n  debug('initializing', __filename);\n  this.options = utils.extend({\n    source: 'string'\n  }, options);\n  this.state = state || {};\n  this.compilers = {};\n  this.output = '';\n  this.set('eos', function (node) {\n    return this.emit(node.val, node);\n  });\n  this.set('noop', function (node) {\n    return this.emit(node.val, node);\n  });\n  this.set('bos', function (node) {\n    return this.emit(node.val, node);\n  });\n  use(this);\n}\n/**\n * Prototype methods\n */\n\n\nCompiler.prototype = {\n  /**\n   * Throw an error message with details including the cursor position.\n   * @param {String} `msg` Message to use in the Error.\n   */\n  error: function (msg, node) {\n    var pos = node.position || {\n      start: {\n        column: 0\n      }\n    };\n    var message = this.options.source + ' column:' + pos.start.column + ': ' + msg;\n    var err = new Error(message);\n    err.reason = msg;\n    err.column = pos.start.column;\n    err.source = this.pattern;\n\n    if (this.options.silent) {\n      this.errors.push(err);\n    } else {\n      throw err;\n    }\n  },\n\n  /**\n   * Define a non-enumberable property on the `Compiler` instance.\n   *\n   * ```js\n   * compiler.define('foo', 'bar');\n   * ```\n   * @name .define\n   * @param {String} `key` propery name\n   * @param {any} `val` property value\n   * @return {Object} Returns the Compiler instance for chaining.\n   * @api public\n   */\n  define: function (key, val) {\n    define(this, key, val);\n    return this;\n  },\n\n  /**\n   * Emit `node.val`\n   */\n  emit: function (str, node) {\n    this.output += str;\n    return str;\n  },\n\n  /**\n   * Add a compiler `fn` with the given `name`\n   */\n  set: function (name, fn) {\n    this.compilers[name] = fn;\n    return this;\n  },\n\n  /**\n   * Get compiler `name`.\n   */\n  get: function (name) {\n    return this.compilers[name];\n  },\n\n  /**\n   * Get the previous AST node.\n   */\n  prev: function (n) {\n    return this.ast.nodes[this.idx - (n || 1)] || {\n      type: 'bos',\n      val: ''\n    };\n  },\n\n  /**\n   * Get the next AST node.\n   */\n  next: function (n) {\n    return this.ast.nodes[this.idx + (n || 1)] || {\n      type: 'eos',\n      val: ''\n    };\n  },\n\n  /**\n   * Visit `node`.\n   */\n  visit: function (node, nodes, i) {\n    var fn = this.compilers[node.type];\n    this.idx = i;\n\n    if (typeof fn !== 'function') {\n      throw this.error('compiler \"' + node.type + '\" is not registered', node);\n    }\n\n    return fn.call(this, node, nodes, i);\n  },\n\n  /**\n   * Map visit over array of `nodes`.\n   */\n  mapVisit: function (nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('expected an array');\n    }\n\n    var len = nodes.length;\n    var idx = -1;\n\n    while (++idx < len) {\n      this.visit(nodes[idx], nodes, idx);\n    }\n\n    return this;\n  },\n\n  /**\n   * Compile `ast`.\n   */\n  compile: function (ast, options) {\n    var opts = utils.extend({}, this.options, options);\n    this.ast = ast;\n    this.parsingErrors = this.ast.errors;\n    this.output = ''; // source map support\n\n    if (opts.sourcemap) {\n      var sourcemaps = require('./source-maps');\n\n      sourcemaps(this);\n      this.mapVisit(this.ast.nodes);\n      this.applySourceMaps();\n      this.map = opts.sourcemap === 'generator' ? this.map : this.map.toJSON();\n      return this;\n    }\n\n    this.mapVisit(this.ast.nodes);\n    return this;\n  }\n};\n/**\n * Expose `Compiler`\n */\n\nmodule.exports = Compiler;","map":{"version":3,"names":["use","require","define","debug","utils","Compiler","options","state","__filename","extend","source","compilers","output","set","node","emit","val","prototype","error","msg","pos","position","start","column","message","err","Error","reason","pattern","silent","errors","push","key","str","name","fn","get","prev","n","ast","nodes","idx","type","next","visit","i","call","mapVisit","Array","isArray","TypeError","len","length","compile","opts","parsingErrors","sourcemap","sourcemaps","applySourceMaps","map","toJSON","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/snapdragon/lib/compiler.js"],"sourcesContent":["'use strict';\n\nvar use = require('use');\nvar define = require('define-property');\nvar debug = require('debug')('snapdragon:compiler');\nvar utils = require('./utils');\n\n/**\n * Create a new `Compiler` with the given `options`.\n * @param {Object} `options`\n */\n\nfunction Compiler(options, state) {\n  debug('initializing', __filename);\n  this.options = utils.extend({source: 'string'}, options);\n  this.state = state || {};\n  this.compilers = {};\n  this.output = '';\n  this.set('eos', function(node) {\n    return this.emit(node.val, node);\n  });\n  this.set('noop', function(node) {\n    return this.emit(node.val, node);\n  });\n  this.set('bos', function(node) {\n    return this.emit(node.val, node);\n  });\n  use(this);\n}\n\n/**\n * Prototype methods\n */\n\nCompiler.prototype = {\n\n  /**\n   * Throw an error message with details including the cursor position.\n   * @param {String} `msg` Message to use in the Error.\n   */\n\n  error: function(msg, node) {\n    var pos = node.position || {start: {column: 0}};\n    var message = this.options.source + ' column:' + pos.start.column + ': ' + msg;\n\n    var err = new Error(message);\n    err.reason = msg;\n    err.column = pos.start.column;\n    err.source = this.pattern;\n\n    if (this.options.silent) {\n      this.errors.push(err);\n    } else {\n      throw err;\n    }\n  },\n\n  /**\n   * Define a non-enumberable property on the `Compiler` instance.\n   *\n   * ```js\n   * compiler.define('foo', 'bar');\n   * ```\n   * @name .define\n   * @param {String} `key` propery name\n   * @param {any} `val` property value\n   * @return {Object} Returns the Compiler instance for chaining.\n   * @api public\n   */\n\n  define: function(key, val) {\n    define(this, key, val);\n    return this;\n  },\n\n  /**\n   * Emit `node.val`\n   */\n\n  emit: function(str, node) {\n    this.output += str;\n    return str;\n  },\n\n  /**\n   * Add a compiler `fn` with the given `name`\n   */\n\n  set: function(name, fn) {\n    this.compilers[name] = fn;\n    return this;\n  },\n\n  /**\n   * Get compiler `name`.\n   */\n\n  get: function(name) {\n    return this.compilers[name];\n  },\n\n  /**\n   * Get the previous AST node.\n   */\n\n  prev: function(n) {\n    return this.ast.nodes[this.idx - (n || 1)] || { type: 'bos', val: '' };\n  },\n\n  /**\n   * Get the next AST node.\n   */\n\n  next: function(n) {\n    return this.ast.nodes[this.idx + (n || 1)] || { type: 'eos', val: '' };\n  },\n\n  /**\n   * Visit `node`.\n   */\n\n  visit: function(node, nodes, i) {\n    var fn = this.compilers[node.type];\n    this.idx = i;\n\n    if (typeof fn !== 'function') {\n      throw this.error('compiler \"' + node.type + '\" is not registered', node);\n    }\n    return fn.call(this, node, nodes, i);\n  },\n\n  /**\n   * Map visit over array of `nodes`.\n   */\n\n  mapVisit: function(nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('expected an array');\n    }\n    var len = nodes.length;\n    var idx = -1;\n    while (++idx < len) {\n      this.visit(nodes[idx], nodes, idx);\n    }\n    return this;\n  },\n\n  /**\n   * Compile `ast`.\n   */\n\n  compile: function(ast, options) {\n    var opts = utils.extend({}, this.options, options);\n    this.ast = ast;\n    this.parsingErrors = this.ast.errors;\n    this.output = '';\n\n    // source map support\n    if (opts.sourcemap) {\n      var sourcemaps = require('./source-maps');\n      sourcemaps(this);\n      this.mapVisit(this.ast.nodes);\n      this.applySourceMaps();\n      this.map = opts.sourcemap === 'generator' ? this.map : this.map.toJSON();\n      return this;\n    }\n\n    this.mapVisit(this.ast.nodes);\n    return this;\n  }\n};\n\n/**\n * Expose `Compiler`\n */\n\nmodule.exports = Compiler;\n"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAP,CAAiB,qBAAjB,CAAZ;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;AACA;;;AAEA,SAASI,QAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkC;EAChCJ,KAAK,CAAC,cAAD,EAAiBK,UAAjB,CAAL;EACA,KAAKF,OAAL,GAAeF,KAAK,CAACK,MAAN,CAAa;IAACC,MAAM,EAAE;EAAT,CAAb,EAAiCJ,OAAjC,CAAf;EACA,KAAKC,KAAL,GAAaA,KAAK,IAAI,EAAtB;EACA,KAAKI,SAAL,GAAiB,EAAjB;EACA,KAAKC,MAAL,GAAc,EAAd;EACA,KAAKC,GAAL,CAAS,KAAT,EAAgB,UAASC,IAAT,EAAe;IAC7B,OAAO,KAAKC,IAAL,CAAUD,IAAI,CAACE,GAAf,EAAoBF,IAApB,CAAP;EACD,CAFD;EAGA,KAAKD,GAAL,CAAS,MAAT,EAAiB,UAASC,IAAT,EAAe;IAC9B,OAAO,KAAKC,IAAL,CAAUD,IAAI,CAACE,GAAf,EAAoBF,IAApB,CAAP;EACD,CAFD;EAGA,KAAKD,GAAL,CAAS,KAAT,EAAgB,UAASC,IAAT,EAAe;IAC7B,OAAO,KAAKC,IAAL,CAAUD,IAAI,CAACE,GAAf,EAAoBF,IAApB,CAAP;EACD,CAFD;EAGAd,GAAG,CAAC,IAAD,CAAH;AACD;AAED;AACA;AACA;;;AAEAK,QAAQ,CAACY,SAAT,GAAqB;EAEnB;AACF;AACA;AACA;EAEEC,KAAK,EAAE,UAASC,GAAT,EAAcL,IAAd,EAAoB;IACzB,IAAIM,GAAG,GAAGN,IAAI,CAACO,QAAL,IAAiB;MAACC,KAAK,EAAE;QAACC,MAAM,EAAE;MAAT;IAAR,CAA3B;IACA,IAAIC,OAAO,GAAG,KAAKlB,OAAL,CAAaI,MAAb,GAAsB,UAAtB,GAAmCU,GAAG,CAACE,KAAJ,CAAUC,MAA7C,GAAsD,IAAtD,GAA6DJ,GAA3E;IAEA,IAAIM,GAAG,GAAG,IAAIC,KAAJ,CAAUF,OAAV,CAAV;IACAC,GAAG,CAACE,MAAJ,GAAaR,GAAb;IACAM,GAAG,CAACF,MAAJ,GAAaH,GAAG,CAACE,KAAJ,CAAUC,MAAvB;IACAE,GAAG,CAACf,MAAJ,GAAa,KAAKkB,OAAlB;;IAEA,IAAI,KAAKtB,OAAL,CAAauB,MAAjB,EAAyB;MACvB,KAAKC,MAAL,CAAYC,IAAZ,CAAiBN,GAAjB;IACD,CAFD,MAEO;MACL,MAAMA,GAAN;IACD;EACF,CArBkB;;EAuBnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEEvB,MAAM,EAAE,UAAS8B,GAAT,EAAchB,GAAd,EAAmB;IACzBd,MAAM,CAAC,IAAD,EAAO8B,GAAP,EAAYhB,GAAZ,CAAN;IACA,OAAO,IAAP;EACD,CAvCkB;;EAyCnB;AACF;AACA;EAEED,IAAI,EAAE,UAASkB,GAAT,EAAcnB,IAAd,EAAoB;IACxB,KAAKF,MAAL,IAAeqB,GAAf;IACA,OAAOA,GAAP;EACD,CAhDkB;;EAkDnB;AACF;AACA;EAEEpB,GAAG,EAAE,UAASqB,IAAT,EAAeC,EAAf,EAAmB;IACtB,KAAKxB,SAAL,CAAeuB,IAAf,IAAuBC,EAAvB;IACA,OAAO,IAAP;EACD,CAzDkB;;EA2DnB;AACF;AACA;EAEEC,GAAG,EAAE,UAASF,IAAT,EAAe;IAClB,OAAO,KAAKvB,SAAL,CAAeuB,IAAf,CAAP;EACD,CAjEkB;;EAmEnB;AACF;AACA;EAEEG,IAAI,EAAE,UAASC,CAAT,EAAY;IAChB,OAAO,KAAKC,GAAL,CAASC,KAAT,CAAe,KAAKC,GAAL,IAAYH,CAAC,IAAI,CAAjB,CAAf,KAAuC;MAAEI,IAAI,EAAE,KAAR;MAAe1B,GAAG,EAAE;IAApB,CAA9C;EACD,CAzEkB;;EA2EnB;AACF;AACA;EAEE2B,IAAI,EAAE,UAASL,CAAT,EAAY;IAChB,OAAO,KAAKC,GAAL,CAASC,KAAT,CAAe,KAAKC,GAAL,IAAYH,CAAC,IAAI,CAAjB,CAAf,KAAuC;MAAEI,IAAI,EAAE,KAAR;MAAe1B,GAAG,EAAE;IAApB,CAA9C;EACD,CAjFkB;;EAmFnB;AACF;AACA;EAEE4B,KAAK,EAAE,UAAS9B,IAAT,EAAe0B,KAAf,EAAsBK,CAAtB,EAAyB;IAC9B,IAAIV,EAAE,GAAG,KAAKxB,SAAL,CAAeG,IAAI,CAAC4B,IAApB,CAAT;IACA,KAAKD,GAAL,GAAWI,CAAX;;IAEA,IAAI,OAAOV,EAAP,KAAc,UAAlB,EAA8B;MAC5B,MAAM,KAAKjB,KAAL,CAAW,eAAeJ,IAAI,CAAC4B,IAApB,GAA2B,qBAAtC,EAA6D5B,IAA7D,CAAN;IACD;;IACD,OAAOqB,EAAE,CAACW,IAAH,CAAQ,IAAR,EAAchC,IAAd,EAAoB0B,KAApB,EAA2BK,CAA3B,CAAP;EACD,CA/FkB;;EAiGnB;AACF;AACA;EAEEE,QAAQ,EAAE,UAASP,KAAT,EAAgB;IACxB,IAAI,CAACQ,KAAK,CAACC,OAAN,CAAcT,KAAd,CAAL,EAA2B;MACzB,MAAM,IAAIU,SAAJ,CAAc,mBAAd,CAAN;IACD;;IACD,IAAIC,GAAG,GAAGX,KAAK,CAACY,MAAhB;IACA,IAAIX,GAAG,GAAG,CAAC,CAAX;;IACA,OAAO,EAAEA,GAAF,GAAQU,GAAf,EAAoB;MAClB,KAAKP,KAAL,CAAWJ,KAAK,CAACC,GAAD,CAAhB,EAAuBD,KAAvB,EAA8BC,GAA9B;IACD;;IACD,OAAO,IAAP;EACD,CA/GkB;;EAiHnB;AACF;AACA;EAEEY,OAAO,EAAE,UAASd,GAAT,EAAcjC,OAAd,EAAuB;IAC9B,IAAIgD,IAAI,GAAGlD,KAAK,CAACK,MAAN,CAAa,EAAb,EAAiB,KAAKH,OAAtB,EAA+BA,OAA/B,CAAX;IACA,KAAKiC,GAAL,GAAWA,GAAX;IACA,KAAKgB,aAAL,GAAqB,KAAKhB,GAAL,CAAST,MAA9B;IACA,KAAKlB,MAAL,GAAc,EAAd,CAJ8B,CAM9B;;IACA,IAAI0C,IAAI,CAACE,SAAT,EAAoB;MAClB,IAAIC,UAAU,GAAGxD,OAAO,CAAC,eAAD,CAAxB;;MACAwD,UAAU,CAAC,IAAD,CAAV;MACA,KAAKV,QAAL,CAAc,KAAKR,GAAL,CAASC,KAAvB;MACA,KAAKkB,eAAL;MACA,KAAKC,GAAL,GAAWL,IAAI,CAACE,SAAL,KAAmB,WAAnB,GAAiC,KAAKG,GAAtC,GAA4C,KAAKA,GAAL,CAASC,MAAT,EAAvD;MACA,OAAO,IAAP;IACD;;IAED,KAAKb,QAAL,CAAc,KAAKR,GAAL,CAASC,KAAvB;IACA,OAAO,IAAP;EACD;AAvIkB,CAArB;AA0IA;AACA;AACA;;AAEAqB,MAAM,CAACC,OAAP,GAAiBzD,QAAjB"},"metadata":{},"sourceType":"script"}