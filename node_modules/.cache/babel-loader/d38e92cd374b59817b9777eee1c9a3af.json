{"ast":null,"code":"const domain = \"walletconnect.org\";\nconst alphanumerical = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nconst bridges = alphanumerical.split(\"\").map(char => `https://${char}.bridge.walletconnect.org`);\nexport function extractHostname(url) {\n  let hostname = url.indexOf(\"//\") > -1 ? url.split(\"/\")[2] : url.split(\"/\")[0];\n  hostname = hostname.split(\":\")[0];\n  hostname = hostname.split(\"?\")[0];\n  return hostname;\n}\nexport function extractRootDomain(url) {\n  return extractHostname(url).split(\".\").slice(-2).join(\".\");\n}\nexport function randomBridgeIndex() {\n  return Math.floor(Math.random() * bridges.length);\n}\nexport function selectRandomBridgeUrl() {\n  return bridges[randomBridgeIndex()];\n}\nexport function shouldSelectRandomly(url) {\n  return extractRootDomain(url) === domain;\n}\nexport function getBridgeUrl(url) {\n  if (shouldSelectRandomly(url)) {\n    return selectRandomBridgeUrl();\n  }\n\n  return url;\n}","map":{"version":3,"mappings":"AAAA,MAAMA,MAAM,GAAG,mBAAf;AAEA,MAAMC,cAAc,GAAG,sCAAvB;AAEA,MAAMC,OAAO,GAAGD,cAAc,CAACE,KAAf,CAAqB,EAArB,EAAyBC,GAAzB,CAA6BC,IAAI,IAAI,WAAWA,IAAI,2BAApD,CAAhB;AAEA,OAAM,SAAUC,eAAV,CAA0BC,GAA1B,EAAqC;EAEzC,IAAIC,QAAQ,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,IAAoB,CAAC,CAArB,GAAyBF,GAAG,CAACJ,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAzB,GAA6CI,GAAG,CAACJ,KAAJ,CAAU,GAAV,EAAe,CAAf,CAA5D;EAEAK,QAAQ,GAAGA,QAAQ,CAACL,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;EAEAK,QAAQ,GAAGA,QAAQ,CAACL,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;EACA,OAAOK,QAAP;AACD;AAED,OAAM,SAAUE,iBAAV,CAA4BH,GAA5B,EAAuC;EAC3C,OAAOD,eAAe,CAACC,GAAD,CAAf,CACJJ,KADI,CACE,GADF,EAEJQ,KAFI,CAEE,CAAC,CAFH,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID;AAED,OAAM,SAAUC,iBAAV,GAA2B;EAC/B,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,OAAO,CAACe,MAAnC,CAAP;AACD;AAED,OAAM,SAAUC,qBAAV,GAA+B;EACnC,OAAOhB,OAAO,CAACW,iBAAiB,EAAlB,CAAd;AACD;AAED,OAAM,SAAUM,oBAAV,CAA+BZ,GAA/B,EAA0C;EAC9C,OAAOG,iBAAiB,CAACH,GAAD,CAAjB,KAA2BP,MAAlC;AACD;AAED,OAAM,SAAUoB,YAAV,CAAuBb,GAAvB,EAAkC;EACtC,IAAIY,oBAAoB,CAACZ,GAAD,CAAxB,EAA+B;IAC7B,OAAOW,qBAAqB,EAA5B;EACD;;EACD,OAAOX,GAAP;AACD","names":["domain","alphanumerical","bridges","split","map","char","extractHostname","url","hostname","indexOf","extractRootDomain","slice","join","randomBridgeIndex","Math","floor","random","length","selectRandomBridgeUrl","shouldSelectRandomly","getBridgeUrl"],"sourceRoot":"","sources":["../../src/url.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}