{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass MultiWatching {\n  constructor(watchings, compiler) {\n    this.watchings = watchings;\n    this.compiler = compiler;\n  }\n\n  invalidate() {\n    for (const watching of this.watchings) {\n      watching.invalidate();\n    }\n  }\n\n  suspend() {\n    for (const watching of this.watchings) {\n      watching.suspend();\n    }\n  }\n\n  resume() {\n    for (const watching of this.watchings) {\n      watching.resume();\n    }\n  }\n\n  close(callback) {\n    asyncLib.forEach(this.watchings, (watching, finishedCallback) => {\n      watching.close(finishedCallback);\n    }, err => {\n      this.compiler.hooks.watchClose.call();\n\n      if (typeof callback === \"function\") {\n        this.compiler.running = false;\n        callback(err);\n      }\n    });\n  }\n\n}\n\nmodule.exports = MultiWatching;","map":{"version":3,"names":["asyncLib","require","MultiWatching","constructor","watchings","compiler","invalidate","watching","suspend","resume","close","callback","forEach","finishedCallback","err","hooks","watchClose","call","running","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/MultiWatching.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\n\nclass MultiWatching {\n\tconstructor(watchings, compiler) {\n\t\tthis.watchings = watchings;\n\t\tthis.compiler = compiler;\n\t}\n\n\tinvalidate() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.invalidate();\n\t\t}\n\t}\n\n\tsuspend() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.suspend();\n\t\t}\n\t}\n\n\tresume() {\n\t\tfor (const watching of this.watchings) {\n\t\t\twatching.resume();\n\t\t}\n\t}\n\n\tclose(callback) {\n\t\tasyncLib.forEach(\n\t\t\tthis.watchings,\n\t\t\t(watching, finishedCallback) => {\n\t\t\t\twatching.close(finishedCallback);\n\t\t\t},\n\t\t\terr => {\n\t\t\t\tthis.compiler.hooks.watchClose.call();\n\t\t\t\tif (typeof callback === \"function\") {\n\t\t\t\t\tthis.compiler.running = false;\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = MultiWatching;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AAEA,MAAMC,aAAN,CAAoB;EACnBC,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsB;IAChC,KAAKD,SAAL,GAAiBA,SAAjB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;EACA;;EAEDC,UAAU,GAAG;IACZ,KAAK,MAAMC,QAAX,IAAuB,KAAKH,SAA5B,EAAuC;MACtCG,QAAQ,CAACD,UAAT;IACA;EACD;;EAEDE,OAAO,GAAG;IACT,KAAK,MAAMD,QAAX,IAAuB,KAAKH,SAA5B,EAAuC;MACtCG,QAAQ,CAACC,OAAT;IACA;EACD;;EAEDC,MAAM,GAAG;IACR,KAAK,MAAMF,QAAX,IAAuB,KAAKH,SAA5B,EAAuC;MACtCG,QAAQ,CAACE,MAAT;IACA;EACD;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACfX,QAAQ,CAACY,OAAT,CACC,KAAKR,SADN,EAEC,CAACG,QAAD,EAAWM,gBAAX,KAAgC;MAC/BN,QAAQ,CAACG,KAAT,CAAeG,gBAAf;IACA,CAJF,EAKCC,GAAG,IAAI;MACN,KAAKT,QAAL,CAAcU,KAAd,CAAoBC,UAApB,CAA+BC,IAA/B;;MACA,IAAI,OAAON,QAAP,KAAoB,UAAxB,EAAoC;QACnC,KAAKN,QAAL,CAAca,OAAd,GAAwB,KAAxB;QACAP,QAAQ,CAACG,GAAD,CAAR;MACA;IACD,CAXF;EAaA;;AAtCkB;;AAyCpBK,MAAM,CAACC,OAAP,GAAiBlB,aAAjB"},"metadata":{},"sourceType":"script"}