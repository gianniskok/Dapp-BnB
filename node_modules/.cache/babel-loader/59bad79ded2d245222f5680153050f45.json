{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let {\n      onError,\n      onResult,\n      resultReturns,\n      onDone\n    } = _ref;\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onResult: (i, result, next) => `if(${result} !== undefined) {\\n${onResult(result)};\\n} else {\\n${next()}}\\n`,\n      resultReturns,\n      onDone\n    });\n  }\n\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nclass AsyncSeriesBailHook extends Hook {\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nObject.defineProperties(AsyncSeriesBailHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncSeriesBailHook;","map":{"version":3,"names":["Hook","require","HookCodeFactory","AsyncSeriesBailHookCodeFactory","content","onError","onResult","resultReturns","onDone","callTapsSeries","i","err","next","doneBreak","result","factory","AsyncSeriesBailHook","compile","options","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/tapable/lib/AsyncSeriesBailHook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, resultReturns, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonResult: (i, result, next) =>\n\t\t\t\t`if(${result} !== undefined) {\\n${onResult(\n\t\t\t\t\tresult\n\t\t\t\t)};\\n} else {\\n${next()}}\\n`,\n\t\t\tresultReturns,\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesBailHookCodeFactory();\n\nclass AsyncSeriesBailHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncSeriesBailHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncSeriesBailHook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,8BAAN,SAA6CD,eAA7C,CAA6D;EAC5DE,OAAO,OAA+C;IAAA,IAA9C;MAAEC,OAAF;MAAWC,QAAX;MAAqBC,aAArB;MAAoCC;IAApC,CAA8C;IACrD,OAAO,KAAKC,cAAL,CAAoB;MAC1BJ,OAAO,EAAE,CAACK,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6BR,OAAO,CAACM,GAAD,CAAP,GAAeE,SAAS,CAAC,IAAD,CADpC;MAE1BP,QAAQ,EAAE,CAACI,CAAD,EAAII,MAAJ,EAAYF,IAAZ,KACR,MAAKE,MAAO,sBAAqBR,QAAQ,CACzCQ,MADyC,CAExC,gBAAeF,IAAI,EAAG,KALC;MAM1BL,aAN0B;MAO1BC;IAP0B,CAApB,CAAP;EASA;;AAX2D;;AAc7D,MAAMO,OAAO,GAAG,IAAIZ,8BAAJ,EAAhB;;AAEA,MAAMa,mBAAN,SAAkChB,IAAlC,CAAuC;EACtCiB,OAAO,CAACC,OAAD,EAAU;IAChBH,OAAO,CAACI,KAAR,CAAc,IAAd,EAAoBD,OAApB;IACA,OAAOH,OAAO,CAACK,MAAR,CAAeF,OAAf,CAAP;EACA;;AAJqC;;AAOvCG,MAAM,CAACC,gBAAP,CAAwBN,mBAAmB,CAACO,SAA5C,EAAuD;EACtDC,KAAK,EAAE;IAAEC,KAAK,EAAEC,SAAT;IAAoBC,YAAY,EAAE,IAAlC;IAAwCC,QAAQ,EAAE;EAAlD;AAD+C,CAAvD;AAIAC,MAAM,CAACC,OAAP,GAAiBd,mBAAjB"},"metadata":{},"sourceType":"script"}