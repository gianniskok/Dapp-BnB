{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  SyncBailHook\n} = require(\"tapable\");\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Template = require(\"./Template\");\n\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\n\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = class HotModuleReplacementPlugin {\n  constructor(options) {\n    this.options = options || {};\n    this.multiStep = this.options.multiStep;\n    this.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n    this.requestTimeout = this.options.requestTimeout || 10000;\n  }\n\n  apply(compiler) {\n    const multiStep = this.multiStep;\n    const fullBuildTimeout = this.fullBuildTimeout;\n    const requestTimeout = this.requestTimeout;\n    const hotUpdateChunkFilename = compiler.options.output.hotUpdateChunkFilename;\n    const hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n    compiler.hooks.additionalPass.tapAsync(\"HotModuleReplacementPlugin\", callback => {\n      if (multiStep) return setTimeout(callback, fullBuildTimeout);\n      return callback();\n    });\n\n    const addParserPlugins = (parser, parserOptions) => {\n      parser.hooks.expression.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, \"__webpack_require__.h()\"));\n      parser.hooks.evaluateTypeof.for(\"__webpack_hash__\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.evaluateToString(\"string\"));\n      parser.hooks.evaluateIdentifier.for(\"module.hot\").tap({\n        name: \"HotModuleReplacementPlugin\",\n        before: \"NodeStuffPlugin\"\n      }, expr => {\n        return ParserHelpers.evaluateToIdentifier(\"module.hot\", !!parser.state.compilation.hotUpdateChunkTemplate)(expr);\n      }); // TODO webpack 5: refactor this, no custom hooks\n\n      if (!parser.hooks.hotAcceptCallback) {\n        parser.hooks.hotAcceptCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n\n      if (!parser.hooks.hotAcceptWithoutCallback) {\n        parser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\"expression\", \"requests\"]);\n      }\n\n      parser.hooks.call.for(\"module.hot.accept\").tap(\"HotModuleReplacementPlugin\", expr => {\n        if (!parser.state.compilation.hotUpdateChunkTemplate) {\n          return false;\n        }\n\n        if (expr.arguments.length >= 1) {\n          const arg = parser.evaluateExpression(expr.arguments[0]);\n          let params = [];\n          let requests = [];\n\n          if (arg.isString()) {\n            params = [arg];\n          } else if (arg.isArray()) {\n            params = arg.items.filter(param => param.isString());\n          }\n\n          if (params.length > 0) {\n            params.forEach((param, idx) => {\n              const request = param.string;\n              const dep = new ModuleHotAcceptDependency(request, param.range);\n              dep.optional = true;\n              dep.loc = Object.create(expr.loc);\n              dep.loc.index = idx;\n              parser.state.module.addDependency(dep);\n              requests.push(request);\n            });\n\n            if (expr.arguments.length > 1) {\n              parser.hooks.hotAcceptCallback.call(expr.arguments[1], requests);\n              parser.walkExpression(expr.arguments[1]); // other args are ignored\n\n              return true;\n            } else {\n              parser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n              return true;\n            }\n          }\n        }\n      });\n      parser.hooks.call.for(\"module.hot.decline\").tap(\"HotModuleReplacementPlugin\", expr => {\n        if (!parser.state.compilation.hotUpdateChunkTemplate) {\n          return false;\n        }\n\n        if (expr.arguments.length === 1) {\n          const arg = parser.evaluateExpression(expr.arguments[0]);\n          let params = [];\n\n          if (arg.isString()) {\n            params = [arg];\n          } else if (arg.isArray()) {\n            params = arg.items.filter(param => param.isString());\n          }\n\n          params.forEach((param, idx) => {\n            const dep = new ModuleHotDeclineDependency(param.string, param.range);\n            dep.optional = true;\n            dep.loc = Object.create(expr.loc);\n            dep.loc.index = idx;\n            parser.state.module.addDependency(dep);\n          });\n        }\n      });\n      parser.hooks.expression.for(\"module.hot\").tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n    };\n\n    compiler.hooks.compilation.tap(\"HotModuleReplacementPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      // This applies the HMR plugin only to the targeted compiler\n      // It should not affect child compilations\n      if (compilation.compiler !== compiler) return;\n      const hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n      if (!hotUpdateChunkTemplate) return;\n      compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      compilation.dependencyFactories.set(ModuleHotAcceptDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ModuleHotAcceptDependency, new ModuleHotAcceptDependency.Template());\n      compilation.dependencyFactories.set(ModuleHotDeclineDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ModuleHotDeclineDependency, new ModuleHotDeclineDependency.Template());\n      compilation.hooks.record.tap(\"HotModuleReplacementPlugin\", (compilation, records) => {\n        if (records.hash === compilation.hash) return;\n        records.hash = compilation.hash;\n        records.moduleHashs = {};\n\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n          records.moduleHashs[identifier] = module.hash;\n        }\n\n        records.chunkHashs = {};\n\n        for (const chunk of compilation.chunks) {\n          records.chunkHashs[chunk.id] = chunk.hash;\n        }\n\n        records.chunkModuleIds = {};\n\n        for (const chunk of compilation.chunks) {\n          records.chunkModuleIds[chunk.id] = Array.from(chunk.modulesIterable, m => m.id);\n        }\n      });\n      let initialPass = false;\n      let recompilation = false;\n      compilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n        let records = compilation.records;\n\n        if (!records) {\n          initialPass = true;\n          return;\n        }\n\n        if (!records.hash) initialPass = true;\n        const preHash = records.preHash || \"x\";\n        const prepreHash = records.prepreHash || \"x\";\n\n        if (preHash === compilation.hash) {\n          recompilation = true;\n          compilation.modifyHash(prepreHash);\n          return;\n        }\n\n        records.prepreHash = records.hash || \"x\";\n        records.preHash = compilation.hash;\n        compilation.modifyHash(records.prepreHash);\n      });\n      compilation.hooks.shouldGenerateChunkAssets.tap(\"HotModuleReplacementPlugin\", () => {\n        if (multiStep && !recompilation && !initialPass) return false;\n      });\n      compilation.hooks.needAdditionalPass.tap(\"HotModuleReplacementPlugin\", () => {\n        if (multiStep && !recompilation && !initialPass) return true;\n      });\n      compilation.hooks.additionalChunkAssets.tap(\"HotModuleReplacementPlugin\", () => {\n        const records = compilation.records;\n        if (records.hash === compilation.hash) return;\n        if (!records.moduleHashs || !records.chunkHashs || !records.chunkModuleIds) return;\n\n        for (const module of compilation.modules) {\n          const identifier = module.identifier();\n          let hash = module.hash;\n          module.hotUpdate = records.moduleHashs[identifier] !== hash;\n        }\n\n        const hotUpdateMainContent = {\n          h: compilation.hash,\n          c: {}\n        };\n\n        for (const key of Object.keys(records.chunkHashs)) {\n          const chunkId = isNaN(+key) ? key : +key;\n          const currentChunk = compilation.chunks.find(chunk => `${chunk.id}` === key);\n\n          if (currentChunk) {\n            const newModules = currentChunk.getModules().filter(module => module.hotUpdate);\n            const allModules = new Set();\n\n            for (const module of currentChunk.modulesIterable) {\n              allModules.add(module.id);\n            }\n\n            const removedModules = records.chunkModuleIds[chunkId].filter(id => !allModules.has(id));\n\n            if (newModules.length > 0 || removedModules.length > 0) {\n              const source = hotUpdateChunkTemplate.render(chunkId, newModules, removedModules, compilation.hash, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n              const {\n                path: filename,\n                info: assetInfo\n              } = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n                hash: records.hash,\n                chunk: currentChunk\n              });\n              compilation.additionalChunkAssets.push(filename);\n              compilation.emitAsset(filename, source, Object.assign({\n                hotModuleReplacement: true\n              }, assetInfo));\n              hotUpdateMainContent.c[chunkId] = true;\n              currentChunk.files.push(filename);\n              compilation.hooks.chunkAsset.call(currentChunk, filename);\n            }\n          } else {\n            hotUpdateMainContent.c[chunkId] = false;\n          }\n        }\n\n        const source = new RawSource(JSON.stringify(hotUpdateMainContent));\n        const {\n          path: filename,\n          info: assetInfo\n        } = compilation.getPathWithInfo(hotUpdateMainFilename, {\n          hash: records.hash\n        });\n        compilation.emitAsset(filename, source, Object.assign({\n          hotModuleReplacement: true\n        }, assetInfo));\n      });\n      const mainTemplate = compilation.mainTemplate;\n      mainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n        hash.update(\"HotMainTemplateDecorator\");\n      });\n      mainTemplate.hooks.moduleRequire.tap(\"HotModuleReplacementPlugin\", (_, chunk, hash, varModuleId) => {\n        return `hotCreateRequire(${varModuleId})`;\n      });\n      mainTemplate.hooks.requireExtensions.tap(\"HotModuleReplacementPlugin\", source => {\n        const buf = [source];\n        buf.push(\"\");\n        buf.push(\"// __webpack_hash__\");\n        buf.push(mainTemplate.requireFn + \".h = function() { return hotCurrentHash; };\");\n        return Template.asString(buf);\n      });\n\n      const needChunkLoadingCode = chunk => {\n        for (const chunkGroup of chunk.groupsIterable) {\n          if (chunkGroup.chunks.length > 1) return true;\n          if (chunkGroup.getNumberOfChildren() > 0) return true;\n        }\n\n        return false;\n      };\n\n      mainTemplate.hooks.bootstrap.tap(\"HotModuleReplacementPlugin\", (source, chunk, hash) => {\n        source = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n        return Template.asString([source, \"\", hotInitCode.replace(/\\$require\\$/g, mainTemplate.requireFn).replace(/\\$hash\\$/g, JSON.stringify(hash)).replace(/\\$requestTimeout\\$/g, requestTimeout).replace(/\\/\\*foreachInstalledChunks\\*\\//g, needChunkLoadingCode(chunk) ? \"for(var chunkId in installedChunks)\" : `var chunkId = ${JSON.stringify(chunk.id)};`)]);\n      });\n      mainTemplate.hooks.globalHash.tap(\"HotModuleReplacementPlugin\", () => true);\n      mainTemplate.hooks.currentHash.tap(\"HotModuleReplacementPlugin\", (_, length) => {\n        if (isFinite(length)) {\n          return `hotCurrentHash.substr(0, ${length})`;\n        } else {\n          return \"hotCurrentHash\";\n        }\n      });\n      mainTemplate.hooks.moduleObj.tap(\"HotModuleReplacementPlugin\", (source, chunk, hash, varModuleId) => {\n        return Template.asString([`${source},`, `hot: hotCreateModule(${varModuleId}),`, \"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\", \"children: []\"]);\n      }); // TODO add HMR support for javascript/esm\n\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n      compilation.hooks.normalModuleLoader.tap(\"HotModuleReplacementPlugin\", context => {\n        context.hot = true;\n      });\n    });\n  }\n\n};\nconst hotInitCode = Template.getFunctionContent(require(\"./HotModuleReplacement.runtime\"));","map":{"version":3,"names":["SyncBailHook","require","RawSource","Template","ModuleHotAcceptDependency","ModuleHotDeclineDependency","ConstDependency","NullFactory","ParserHelpers","module","exports","HotModuleReplacementPlugin","constructor","options","multiStep","fullBuildTimeout","requestTimeout","apply","compiler","hotUpdateChunkFilename","output","hotUpdateMainFilename","hooks","additionalPass","tapAsync","callback","setTimeout","addParserPlugins","parser","parserOptions","expression","for","tap","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","evaluateIdentifier","name","before","expr","evaluateToIdentifier","state","compilation","hotUpdateChunkTemplate","hotAcceptCallback","hotAcceptWithoutCallback","call","arguments","length","arg","evaluateExpression","params","requests","isString","isArray","items","filter","param","forEach","idx","request","string","dep","range","optional","loc","Object","create","index","addDependency","push","walkExpression","skipTraversal","normalModuleFactory","dependencyFactories","set","dependencyTemplates","record","records","hash","moduleHashs","modules","identifier","chunkHashs","chunk","chunks","id","chunkModuleIds","Array","from","modulesIterable","m","initialPass","recompilation","afterHash","preHash","prepreHash","modifyHash","shouldGenerateChunkAssets","needAdditionalPass","additionalChunkAssets","hotUpdate","hotUpdateMainContent","h","c","key","keys","chunkId","isNaN","currentChunk","find","newModules","getModules","allModules","Set","add","removedModules","has","source","render","moduleTemplates","javascript","path","filename","info","assetInfo","getPathWithInfo","emitAsset","assign","hotModuleReplacement","files","chunkAsset","JSON","stringify","mainTemplate","update","moduleRequire","_","varModuleId","requireExtensions","buf","requireFn","asString","needChunkLoadingCode","chunkGroup","groupsIterable","getNumberOfChildren","bootstrap","hotBootstrap","hotInitCode","replace","globalHash","currentHash","isFinite","moduleObj","normalModuleLoader","context","hot","getFunctionContent"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/HotModuleReplacementPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { SyncBailHook } = require(\"tapable\");\nconst { RawSource } = require(\"webpack-sources\");\nconst Template = require(\"./Template\");\nconst ModuleHotAcceptDependency = require(\"./dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"./dependencies/ModuleHotDeclineDependency\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst NullFactory = require(\"./NullFactory\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nmodule.exports = class HotModuleReplacementPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t\tthis.multiStep = this.options.multiStep;\n\t\tthis.fullBuildTimeout = this.options.fullBuildTimeout || 200;\n\t\tthis.requestTimeout = this.options.requestTimeout || 10000;\n\t}\n\n\tapply(compiler) {\n\t\tconst multiStep = this.multiStep;\n\t\tconst fullBuildTimeout = this.fullBuildTimeout;\n\t\tconst requestTimeout = this.requestTimeout;\n\t\tconst hotUpdateChunkFilename =\n\t\t\tcompiler.options.output.hotUpdateChunkFilename;\n\t\tconst hotUpdateMainFilename = compiler.options.output.hotUpdateMainFilename;\n\t\tcompiler.hooks.additionalPass.tapAsync(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\tcallback => {\n\t\t\t\tif (multiStep) return setTimeout(callback, fullBuildTimeout);\n\t\t\t\treturn callback();\n\t\t\t}\n\t\t);\n\n\t\tconst addParserPlugins = (parser, parserOptions) => {\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\"__webpack_require__.h()\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t.for(\"__webpack_hash__\")\n\t\t\t\t.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tParserHelpers.evaluateToString(\"string\")\n\t\t\t\t);\n\t\t\tparser.hooks.evaluateIdentifier.for(\"module.hot\").tap(\n\t\t\t\t{\n\t\t\t\t\tname: \"HotModuleReplacementPlugin\",\n\t\t\t\t\tbefore: \"NodeStuffPlugin\"\n\t\t\t\t},\n\t\t\t\texpr => {\n\t\t\t\t\treturn ParserHelpers.evaluateToIdentifier(\n\t\t\t\t\t\t\"module.hot\",\n\t\t\t\t\t\t!!parser.state.compilation.hotUpdateChunkTemplate\n\t\t\t\t\t)(expr);\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO webpack 5: refactor this, no custom hooks\n\t\t\tif (!parser.hooks.hotAcceptCallback) {\n\t\t\t\tparser.hooks.hotAcceptCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tif (!parser.hooks.hotAcceptWithoutCallback) {\n\t\t\t\tparser.hooks.hotAcceptWithoutCallback = new SyncBailHook([\n\t\t\t\t\t\"expression\",\n\t\t\t\t\t\"requests\"\n\t\t\t\t]);\n\t\t\t}\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.accept\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length >= 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tlet requests = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (params.length > 0) {\n\t\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\t\tconst request = param.string;\n\t\t\t\t\t\t\t\tconst dep = new ModuleHotAcceptDependency(request, param.range);\n\t\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\t\trequests.push(request);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (expr.arguments.length > 1) {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptCallback.call(\n\t\t\t\t\t\t\t\t\texpr.arguments[1],\n\t\t\t\t\t\t\t\t\trequests\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparser.walkExpression(expr.arguments[1]); // other args are ignored\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparser.hooks.hotAcceptWithoutCallback.call(expr, requests);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.call\n\t\t\t\t.for(\"module.hot.decline\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", expr => {\n\t\t\t\t\tif (!parser.state.compilation.hotUpdateChunkTemplate) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (expr.arguments.length === 1) {\n\t\t\t\t\t\tconst arg = parser.evaluateExpression(expr.arguments[0]);\n\t\t\t\t\t\tlet params = [];\n\t\t\t\t\t\tif (arg.isString()) {\n\t\t\t\t\t\t\tparams = [arg];\n\t\t\t\t\t\t} else if (arg.isArray()) {\n\t\t\t\t\t\t\tparams = arg.items.filter(param => param.isString());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams.forEach((param, idx) => {\n\t\t\t\t\t\t\tconst dep = new ModuleHotDeclineDependency(\n\t\t\t\t\t\t\t\tparam.string,\n\t\t\t\t\t\t\t\tparam.range\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.optional = true;\n\t\t\t\t\t\t\tdep.loc = Object.create(expr.loc);\n\t\t\t\t\t\t\tdep.loc.index = idx;\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tparser.hooks.expression\n\t\t\t\t.for(\"module.hot\")\n\t\t\t\t.tap(\"HotModuleReplacementPlugin\", ParserHelpers.skipTraversal);\n\t\t};\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t// This applies the HMR plugin only to the targeted compiler\n\t\t\t\t// It should not affect child compilations\n\t\t\t\tif (compilation.compiler !== compiler) return;\n\n\t\t\t\tconst hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate;\n\t\t\t\tif (!hotUpdateChunkTemplate) return;\n\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotAcceptDependency,\n\t\t\t\t\tnew ModuleHotAcceptDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tModuleHotDeclineDependency,\n\t\t\t\t\tnew ModuleHotDeclineDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.record.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(compilation, records) => {\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\trecords.hash = compilation.hash;\n\t\t\t\t\t\trecords.moduleHashs = {};\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\trecords.moduleHashs[identifier] = module.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkHashs = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkHashs[chunk.id] = chunk.hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecords.chunkModuleIds = {};\n\t\t\t\t\t\tfor (const chunk of compilation.chunks) {\n\t\t\t\t\t\t\trecords.chunkModuleIds[chunk.id] = Array.from(\n\t\t\t\t\t\t\t\tchunk.modulesIterable,\n\t\t\t\t\t\t\t\tm => m.id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tlet initialPass = false;\n\t\t\t\tlet recompilation = false;\n\t\t\t\tcompilation.hooks.afterHash.tap(\"HotModuleReplacementPlugin\", () => {\n\t\t\t\t\tlet records = compilation.records;\n\t\t\t\t\tif (!records) {\n\t\t\t\t\t\tinitialPass = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!records.hash) initialPass = true;\n\t\t\t\t\tconst preHash = records.preHash || \"x\";\n\t\t\t\t\tconst prepreHash = records.prepreHash || \"x\";\n\t\t\t\t\tif (preHash === compilation.hash) {\n\t\t\t\t\t\trecompilation = true;\n\t\t\t\t\t\tcompilation.modifyHash(prepreHash);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trecords.prepreHash = records.hash || \"x\";\n\t\t\t\t\trecords.preHash = compilation.hash;\n\t\t\t\t\tcompilation.modifyHash(records.prepreHash);\n\t\t\t\t});\n\t\t\t\tcompilation.hooks.shouldGenerateChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.needAdditionalPass.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (multiStep && !recompilation && !initialPass) return true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.additionalChunkAssets.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst records = compilation.records;\n\t\t\t\t\t\tif (records.hash === compilation.hash) return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!records.moduleHashs ||\n\t\t\t\t\t\t\t!records.chunkHashs ||\n\t\t\t\t\t\t\t!records.chunkModuleIds\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tfor (const module of compilation.modules) {\n\t\t\t\t\t\t\tconst identifier = module.identifier();\n\t\t\t\t\t\t\tlet hash = module.hash;\n\t\t\t\t\t\t\tmodule.hotUpdate = records.moduleHashs[identifier] !== hash;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst hotUpdateMainContent = {\n\t\t\t\t\t\t\th: compilation.hash,\n\t\t\t\t\t\t\tc: {}\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfor (const key of Object.keys(records.chunkHashs)) {\n\t\t\t\t\t\t\tconst chunkId = isNaN(+key) ? key : +key;\n\t\t\t\t\t\t\tconst currentChunk = compilation.chunks.find(\n\t\t\t\t\t\t\t\tchunk => `${chunk.id}` === key\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (currentChunk) {\n\t\t\t\t\t\t\t\tconst newModules = currentChunk\n\t\t\t\t\t\t\t\t\t.getModules()\n\t\t\t\t\t\t\t\t\t.filter(module => module.hotUpdate);\n\t\t\t\t\t\t\t\tconst allModules = new Set();\n\t\t\t\t\t\t\t\tfor (const module of currentChunk.modulesIterable) {\n\t\t\t\t\t\t\t\t\tallModules.add(module.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst removedModules = records.chunkModuleIds[chunkId].filter(\n\t\t\t\t\t\t\t\t\tid => !allModules.has(id)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (newModules.length > 0 || removedModules.length > 0) {\n\t\t\t\t\t\t\t\t\tconst source = hotUpdateChunkTemplate.render(\n\t\t\t\t\t\t\t\t\t\tchunkId,\n\t\t\t\t\t\t\t\t\t\tnewModules,\n\t\t\t\t\t\t\t\t\t\tremovedModules,\n\t\t\t\t\t\t\t\t\t\tcompilation.hash,\n\t\t\t\t\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateChunkFilename, {\n\t\t\t\t\t\t\t\t\t\thash: records.hash,\n\t\t\t\t\t\t\t\t\t\tchunk: currentChunk\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilation.additionalChunkAssets.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = true;\n\t\t\t\t\t\t\t\t\tcurrentChunk.files.push(filename);\n\t\t\t\t\t\t\t\t\tcompilation.hooks.chunkAsset.call(currentChunk, filename);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thotUpdateMainContent.c[chunkId] = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst source = new RawSource(JSON.stringify(hotUpdateMainContent));\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tpath: filename,\n\t\t\t\t\t\t\tinfo: assetInfo\n\t\t\t\t\t\t} = compilation.getPathWithInfo(hotUpdateMainFilename, {\n\t\t\t\t\t\t\thash: records.hash\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcompilation.emitAsset(\n\t\t\t\t\t\t\tfilename,\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\tObject.assign({ hotModuleReplacement: true }, assetInfo)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\n\t\t\t\tmainTemplate.hooks.hash.tap(\"HotModuleReplacementPlugin\", hash => {\n\t\t\t\t\thash.update(\"HotMainTemplateDecorator\");\n\t\t\t\t});\n\n\t\t\t\tmainTemplate.hooks.moduleRequire.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn `hotCreateRequire(${varModuleId})`;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tsource => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\tmainTemplate.requireFn +\n\t\t\t\t\t\t\t\t\".h = function() { return hotCurrentHash; };\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tconst needChunkLoadingCode = chunk => {\n\t\t\t\t\tfor (const chunkGroup of chunk.groupsIterable) {\n\t\t\t\t\t\tif (chunkGroup.chunks.length > 1) return true;\n\t\t\t\t\t\tif (chunkGroup.getNumberOfChildren() > 0) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\tmainTemplate.hooks.bootstrap.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tsource = mainTemplate.hooks.hotBootstrap.call(source, chunk, hash);\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\thotInitCode\n\t\t\t\t\t\t\t\t.replace(/\\$require\\$/g, mainTemplate.requireFn)\n\t\t\t\t\t\t\t\t.replace(/\\$hash\\$/g, JSON.stringify(hash))\n\t\t\t\t\t\t\t\t.replace(/\\$requestTimeout\\$/g, requestTimeout)\n\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t/\\/\\*foreachInstalledChunks\\*\\//g,\n\t\t\t\t\t\t\t\t\tneedChunkLoadingCode(chunk)\n\t\t\t\t\t\t\t\t\t\t? \"for(var chunkId in installedChunks)\"\n\t\t\t\t\t\t\t\t\t\t: `var chunkId = ${JSON.stringify(chunk.id)};`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t() => true\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.currentHash.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(_, length) => {\n\t\t\t\t\t\tif (isFinite(length)) {\n\t\t\t\t\t\t\treturn `hotCurrentHash.substr(0, ${length})`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn \"hotCurrentHash\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tmainTemplate.hooks.moduleObj.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\t(source, chunk, hash, varModuleId) => {\n\t\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t\t`${source},`,\n\t\t\t\t\t\t\t`hot: hotCreateModule(${varModuleId}),`,\n\t\t\t\t\t\t\t\"parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\",\n\t\t\t\t\t\t\t\"children: []\"\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// TODO add HMR support for javascript/esm\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"HotModuleReplacementPlugin\", addParserPlugins);\n\n\t\t\t\tcompilation.hooks.normalModuleLoader.tap(\n\t\t\t\t\t\"HotModuleReplacementPlugin\",\n\t\t\t\t\tcontext => {\n\t\t\t\t\t\tcontext.hot = true;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n};\n\nconst hotInitCode = Template.getFunctionContent(\n\trequire(\"./HotModuleReplacement.runtime\")\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}