{"ast":null,"code":"'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst pify = require('pify');\n\nconst semver = require('semver');\n\nconst defaults = {\n  mode: 0o777 & ~process.umask(),\n  fs\n};\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0'); // https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\n\nconst checkPath = pth => {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`);\n      error.code = 'EINVAL';\n      throw error;\n    }\n  }\n};\n\nconst permissionError = pth => {\n  // This replicates the exception of `fs.mkdir` with native the\n  // `recusive` option when run on an invalid drive under Windows.\n  const error = new Error(`operation not permitted, mkdir '${pth}'`);\n  error.code = 'EPERM';\n  error.errno = -4048;\n  error.path = pth;\n  error.syscall = 'mkdir';\n  return error;\n};\n\nconst makeDir = (input, options) => Promise.resolve().then(() => {\n  checkPath(input);\n  options = Object.assign({}, defaults, options); // TODO: Use util.promisify when targeting Node.js 8\n\n  const mkdir = pify(options.fs.mkdir);\n  const stat = pify(options.fs.stat);\n\n  if (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n    const pth = path.resolve(input);\n    return mkdir(pth, {\n      mode: options.mode,\n      recursive: true\n    }).then(() => pth);\n  }\n\n  const make = pth => {\n    return mkdir(pth, options.mode).then(() => pth).catch(error => {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n\n        return make(path.dirname(pth)).then(() => make(pth));\n      }\n\n      return stat(pth).then(stats => stats.isDirectory() ? pth : Promise.reject()).catch(() => {\n        throw error;\n      });\n    });\n  };\n\n  return make(path.resolve(input));\n});\n\nmodule.exports = makeDir;\nmodule.exports.default = makeDir;\n\nmodule.exports.sync = (input, options) => {\n  checkPath(input);\n  options = Object.assign({}, defaults, options);\n\n  if (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n    const pth = path.resolve(input);\n    fs.mkdirSync(pth, {\n      mode: options.mode,\n      recursive: true\n    });\n    return pth;\n  }\n\n  const make = pth => {\n    try {\n      options.fs.mkdirSync(pth, options.mode);\n    } catch (error) {\n      if (error.code === 'EPERM') {\n        throw error;\n      }\n\n      if (error.code === 'ENOENT') {\n        if (path.dirname(pth) === pth) {\n          throw permissionError(pth);\n        }\n\n        if (error.message.includes('null bytes')) {\n          throw error;\n        }\n\n        make(path.dirname(pth));\n        return make(pth);\n      }\n\n      try {\n        if (!options.fs.statSync(pth).isDirectory()) {\n          throw new Error('The path is not a directory');\n        }\n      } catch (_) {\n        throw error;\n      }\n    }\n\n    return pth;\n  };\n\n  return make(path.resolve(input));\n};","map":{"version":3,"names":["fs","require","path","pify","semver","defaults","mode","process","umask","useNativeRecursiveOption","satisfies","version","checkPath","pth","platform","pathHasInvalidWinCharacters","test","replace","parse","root","error","Error","code","permissionError","errno","syscall","makeDir","input","options","Promise","resolve","then","Object","assign","mkdir","stat","recursive","make","catch","dirname","message","includes","stats","isDirectory","reject","module","exports","default","sync","mkdirSync","statSync","_"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/make-dir/index.js"],"sourcesContent":["'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst pify = require('pify');\nconst semver = require('semver');\n\nconst defaults = {\n\tmode: 0o777 & (~process.umask()),\n\tfs\n};\n\nconst useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nconst checkPath = pth => {\n\tif (process.platform === 'win32') {\n\t\tconst pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''));\n\n\t\tif (pathHasInvalidWinCharacters) {\n\t\t\tconst error = new Error(`Path contains invalid characters: ${pth}`);\n\t\t\terror.code = 'EINVAL';\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n\nconst permissionError = pth => {\n\t// This replicates the exception of `fs.mkdir` with native the\n\t// `recusive` option when run on an invalid drive under Windows.\n\tconst error = new Error(`operation not permitted, mkdir '${pth}'`);\n\terror.code = 'EPERM';\n\terror.errno = -4048;\n\terror.path = pth;\n\terror.syscall = 'mkdir';\n\treturn error;\n};\n\nconst makeDir = (input, options) => Promise.resolve().then(() => {\n\tcheckPath(input);\n\toptions = Object.assign({}, defaults, options);\n\n\t// TODO: Use util.promisify when targeting Node.js 8\n\tconst mkdir = pify(options.fs.mkdir);\n\tconst stat = pify(options.fs.stat);\n\n\tif (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {\n\t\tconst pth = path.resolve(input);\n\n\t\treturn mkdir(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t}).then(() => pth);\n\t}\n\n\tconst make = pth => {\n\t\treturn mkdir(pth, options.mode)\n\t\t\t.then(() => pth)\n\t\t\t.catch(error => {\n\t\t\t\tif (error.code === 'EPERM') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn make(path.dirname(pth)).then(() => make(pth));\n\t\t\t\t}\n\n\t\t\t\treturn stat(pth)\n\t\t\t\t\t.then(stats => stats.isDirectory() ? pth : Promise.reject())\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn make(path.resolve(input));\n});\n\nmodule.exports = makeDir;\nmodule.exports.default = makeDir;\n\nmodule.exports.sync = (input, options) => {\n\tcheckPath(input);\n\toptions = Object.assign({}, defaults, options);\n\n\tif (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {\n\t\tconst pth = path.resolve(input);\n\n\t\tfs.mkdirSync(pth, {\n\t\t\tmode: options.mode,\n\t\t\trecursive: true\n\t\t});\n\n\t\treturn pth;\n\t}\n\n\tconst make = pth => {\n\t\ttry {\n\t\t\toptions.fs.mkdirSync(pth, options.mode);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'EPERM') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\tif (path.dirname(pth) === pth) {\n\t\t\t\t\tthrow permissionError(pth);\n\t\t\t\t}\n\n\t\t\t\tif (error.message.includes('null bytes')) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tmake(path.dirname(pth));\n\t\t\t\treturn make(pth);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!options.fs.statSync(pth).isDirectory()) {\n\t\t\t\t\tthrow new Error('The path is not a directory');\n\t\t\t\t}\n\t\t\t} catch (_) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\treturn pth;\n\t};\n\n\treturn make(path.resolve(input));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}