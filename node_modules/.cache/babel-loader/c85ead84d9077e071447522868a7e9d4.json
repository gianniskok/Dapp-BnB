{"ast":null,"code":"const HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\n\nfunction getUrlProtocol(url) {\n  const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n  if (!matches || !matches.length) return;\n  return matches[0];\n}\n\nfunction matchRegexProtocol(url, regex) {\n  const protocol = getUrlProtocol(url);\n  if (typeof protocol === \"undefined\") return false;\n  return new RegExp(regex).test(protocol);\n}\n\nexport function isHttpUrl(url) {\n  return matchRegexProtocol(url, HTTP_REGEX);\n}\nexport function isWsUrl(url) {\n  return matchRegexProtocol(url, WS_REGEX);\n}\nexport function isLocalhostUrl(url) {\n  return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n}","map":{"version":3,"mappings":"AAAA,MAAMA,UAAU,GAAG,UAAnB;AAEA,MAAMC,QAAQ,GAAG,QAAjB;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAAmC;EACjC,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAIC,MAAJ,CAAW,OAAX,EAAoB,IAApB,CAAV,CAAhB;EACA,IAAI,CAACF,OAAD,IAAY,CAACA,OAAO,CAACG,MAAzB,EAAiC;EACjC,OAAOH,OAAO,CAAC,CAAD,CAAd;AACD;;AAED,SAASI,kBAAT,CAA4BL,GAA5B,EAAyCM,KAAzC,EAAsD;EACpD,MAAMC,QAAQ,GAAGR,cAAc,CAACC,GAAD,CAA/B;EACA,IAAI,OAAOO,QAAP,KAAoB,WAAxB,EAAqC,OAAO,KAAP;EACrC,OAAO,IAAIJ,MAAJ,CAAWG,KAAX,EAAkBE,IAAlB,CAAuBD,QAAvB,CAAP;AACD;;AAED,OAAM,SAAUE,SAAV,CAAoBT,GAApB,EAA+B;EACnC,OAAOK,kBAAkB,CAACL,GAAD,EAAMH,UAAN,CAAzB;AACD;AAED,OAAM,SAAUa,OAAV,CAAkBV,GAAlB,EAA6B;EACjC,OAAOK,kBAAkB,CAACL,GAAD,EAAMF,QAAN,CAAzB;AACD;AAED,OAAM,SAAUa,cAAV,CAAyBX,GAAzB,EAAoC;EACxC,OAAO,IAAIG,MAAJ,CAAW,4BAAX,EAAyCK,IAAzC,CAA8CR,GAA9C,CAAP;AACD","names":["HTTP_REGEX","WS_REGEX","getUrlProtocol","url","matches","match","RegExp","length","matchRegexProtocol","regex","protocol","test","isHttpUrl","isWsUrl","isLocalhostUrl"],"sourceRoot":"","sources":["../../src/url.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}