{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ParsePlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n      const parsed = resolver.parse(request.request);\n      const obj = Object.assign({}, request, parsed);\n\n      if (request.query && !parsed.query) {\n        obj.query = request.query;\n      }\n\n      if (parsed && resolveContext.log) {\n        if (parsed.module) resolveContext.log(\"Parsed request is a module\");\n        if (parsed.directory) resolveContext.log(\"Parsed request is a directory\");\n      }\n\n      resolver.doResolve(target, obj, null, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"names":["module","exports","ParsePlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","parsed","parse","obj","Object","assign","query","log","directory","doResolve"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/enhanced-resolve/lib/ParsePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class ParsePlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ParsePlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst parsed = resolver.parse(request.request);\n\t\t\t\tconst obj = Object.assign({}, request, parsed);\n\t\t\t\tif (request.query && !parsed.query) {\n\t\t\t\t\tobj.query = request.query;\n\t\t\t\t}\n\t\t\t\tif (parsed && resolveContext.log) {\n\t\t\t\t\tif (parsed.module) resolveContext.log(\"Parsed request is a module\");\n\t\t\t\t\tif (parsed.directory)\n\t\t\t\t\t\tresolveContext.log(\"Parsed request is a directory\");\n\t\t\t\t}\n\t\t\t\tresolver.doResolve(target, obj, null, resolveContext, callback);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,WAAN,CAAkB;EAClCC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAEW,aAFX,EAE0B,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MAC/D,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,KAAT,CAAeJ,OAAO,CAACA,OAAvB,CAAf;MACA,MAAMK,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,EAA2BG,MAA3B,CAAZ;;MACA,IAAIH,OAAO,CAACQ,KAAR,IAAiB,CAACL,MAAM,CAACK,KAA7B,EAAoC;QACnCH,GAAG,CAACG,KAAJ,GAAYR,OAAO,CAACQ,KAApB;MACA;;MACD,IAAIL,MAAM,IAAIF,cAAc,CAACQ,GAA7B,EAAkC;QACjC,IAAIN,MAAM,CAACd,MAAX,EAAmBY,cAAc,CAACQ,GAAf,CAAmB,4BAAnB;QACnB,IAAIN,MAAM,CAACO,SAAX,EACCT,cAAc,CAACQ,GAAf,CAAmB,+BAAnB;MACD;;MACDb,QAAQ,CAACe,SAAT,CAAmBjB,MAAnB,EAA2BW,GAA3B,EAAgC,IAAhC,EAAsCJ,cAAtC,EAAsDC,QAAtD;IACA,CAdF;EAeA;;AAvBiC,CAAnC"},"metadata":{},"sourceType":"script"}