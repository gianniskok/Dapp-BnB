{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst asyncLib = require(\"neo-async\");\n\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nclass LibManifestPlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    compiler.hooks.emit.tapAsync(\"LibManifestPlugin\", (compilation, callback) => {\n      asyncLib.forEach(compilation.chunks, (chunk, callback) => {\n        if (!chunk.isOnlyInitial()) {\n          callback();\n          return;\n        }\n\n        const targetPath = compilation.getPath(this.options.path, {\n          hash: compilation.hash,\n          chunk\n        });\n        const name = this.options.name && compilation.getPath(this.options.name, {\n          hash: compilation.hash,\n          chunk\n        });\n        const manifest = {\n          name,\n          type: this.options.type,\n          content: Array.from(chunk.modulesIterable, module => {\n            if (this.options.entryOnly && !module.reasons.some(r => r.dependency instanceof SingleEntryDependency)) {\n              return;\n            }\n\n            if (module.libIdent) {\n              const ident = module.libIdent({\n                context: this.options.context || compiler.options.context\n              });\n\n              if (ident) {\n                return {\n                  ident,\n                  data: {\n                    id: module.id,\n                    buildMeta: module.buildMeta\n                  }\n                };\n              }\n            }\n          }).filter(Boolean).reduce((obj, item) => {\n            obj[item.ident] = item.data;\n            return obj;\n          }, Object.create(null))\n        }; // Apply formatting to content if format flag is true;\n\n        const manifestContent = this.options.format ? JSON.stringify(manifest, null, 2) : JSON.stringify(manifest);\n        const content = Buffer.from(manifestContent, \"utf8\");\n        compiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n          if (err) return callback(err);\n          compiler.outputFileSystem.writeFile(targetPath, content, callback);\n        });\n      }, callback);\n    });\n  }\n\n}\n\nmodule.exports = LibManifestPlugin;","map":{"version":3,"names":["path","require","asyncLib","SingleEntryDependency","LibManifestPlugin","constructor","options","apply","compiler","hooks","emit","tapAsync","compilation","callback","forEach","chunks","chunk","isOnlyInitial","targetPath","getPath","hash","name","manifest","type","content","Array","from","modulesIterable","module","entryOnly","reasons","some","r","dependency","libIdent","ident","context","data","id","buildMeta","filter","Boolean","reduce","obj","item","Object","create","manifestContent","format","JSON","stringify","Buffer","outputFileSystem","mkdirp","dirname","err","writeFile","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/LibManifestPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst asyncLib = require(\"neo-async\");\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\nclass LibManifestPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.emit.tapAsync(\n\t\t\t\"LibManifestPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tcompilation.chunks,\n\t\t\t\t\t(chunk, callback) => {\n\t\t\t\t\t\tif (!chunk.isOnlyInitial()) {\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst targetPath = compilation.getPath(this.options.path, {\n\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst name =\n\t\t\t\t\t\t\tthis.options.name &&\n\t\t\t\t\t\t\tcompilation.getPath(this.options.name, {\n\t\t\t\t\t\t\t\thash: compilation.hash,\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tconst manifest = {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\ttype: this.options.type,\n\t\t\t\t\t\t\tcontent: Array.from(chunk.modulesIterable, module => {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tthis.options.entryOnly &&\n\t\t\t\t\t\t\t\t\t!module.reasons.some(\n\t\t\t\t\t\t\t\t\t\tr => r.dependency instanceof SingleEntryDependency\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (module.libIdent) {\n\t\t\t\t\t\t\t\t\tconst ident = module.libIdent({\n\t\t\t\t\t\t\t\t\t\tcontext: this.options.context || compiler.options.context\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (ident) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tident,\n\t\t\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: module.id,\n\t\t\t\t\t\t\t\t\t\t\t\tbuildMeta: module.buildMeta\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t.reduce((obj, item) => {\n\t\t\t\t\t\t\t\t\tobj[item.ident] = item.data;\n\t\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\t\t}, Object.create(null))\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Apply formatting to content if format flag is true;\n\t\t\t\t\t\tconst manifestContent = this.options.format\n\t\t\t\t\t\t\t? JSON.stringify(manifest, null, 2)\n\t\t\t\t\t\t\t: JSON.stringify(manifest);\n\t\t\t\t\t\tconst content = Buffer.from(manifestContent, \"utf8\");\n\t\t\t\t\t\tcompiler.outputFileSystem.mkdirp(path.dirname(targetPath), err => {\n\t\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\t\tcompiler.outputFileSystem.writeFile(\n\t\t\t\t\t\t\t\ttargetPath,\n\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = LibManifestPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}