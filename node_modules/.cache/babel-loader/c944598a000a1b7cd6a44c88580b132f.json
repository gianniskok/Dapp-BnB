{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar cborg = require('cborg');\n\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\n\nconst CID_CBOR_TAG = 42;\n\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n\n  const cid$1 = cid.CID.asCID(obj);\n\n  if (!cid$1) {\n    return null;\n  }\n\n  const bytes = new Uint8Array(cid$1.bytes.byteLength + 1);\n  bytes.set(cid$1.bytes, 1);\n  return [new cborg__namespace.Token(cborg__namespace.Type.tag, CID_CBOR_TAG), new cborg__namespace.Token(cborg__namespace.Type.bytes, bytes)];\n}\n\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\n\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n\n  return null;\n}\n\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\n\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n\n  return cid.CID.decode(bytes.subarray(1));\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nconst name = 'dag-cbor';\nconst code = 113;\n\nconst encode = node => cborg__namespace.encode(node, encodeOptions);\n\nconst decode = data => cborg__namespace.decode(data, decodeOptions);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;","map":{"version":3,"names":["Object","defineProperty","exports","value","cborg","require","cid","_interopNamespace","e","__esModule","n","create","keys","forEach","k","d","getOwnPropertyDescriptor","get","enumerable","freeze","cborg__namespace","CID_CBOR_TAG","cidEncoder","obj","asCID","cid$1","CID","bytes","Uint8Array","byteLength","set","Token","Type","tag","undefinedEncoder","Error","numberEncoder","num","Number","isNaN","Infinity","encodeOptions","float64","typeEncoders","undefined","number","cidDecoder","decode","subarray","decodeOptions","allowIndefinite","allowUndefined","allowNaN","allowInfinity","allowBigInt","strict","useMaps","tags","name","code","encode","node","data"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/@ipld/dag-cbor/cjs/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cborg = require('cborg');\nvar cid = require('multiformats/cid');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar cborg__namespace = /*#__PURE__*/_interopNamespace(cborg);\n\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid$1 = cid.CID.asCID(obj);\n  if (!cid$1) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid$1.bytes.byteLength + 1);\n  bytes.set(cid$1.bytes, 1);\n  return [\n    new cborg__namespace.Token(cborg__namespace.Type.tag, CID_CBOR_TAG),\n    new cborg__namespace.Token(cborg__namespace.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return cid.CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nconst name = 'dag-cbor';\nconst code = 113;\nconst encode = node => cborg__namespace.encode(node, encodeOptions);\nconst decode = data => cborg__namespace.decode(data, decodeOptions);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}