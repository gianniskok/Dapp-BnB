{"ast":null,"code":"/*!\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function isDataDescriptor(obj, prop) {\n  // data descriptor properties\n  var data = {\n    configurable: 'boolean',\n    enumerable: 'boolean',\n    writable: 'boolean'\n  };\n\n  if (typeOf(obj) !== 'object') {\n    return false;\n  }\n\n  if (typeof prop === 'string') {\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\n    return typeof val !== 'undefined';\n  }\n\n  if (!('value' in obj) && !('writable' in obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (key === 'value') continue;\n\n    if (!data.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (typeOf(obj[key]) === data[key]) {\n      continue;\n    }\n\n    if (typeof obj[key] !== 'undefined') {\n      return false;\n    }\n  }\n\n  return true;\n};","map":{"version":3,"names":["typeOf","require","module","exports","isDataDescriptor","obj","prop","data","configurable","enumerable","writable","val","Object","getOwnPropertyDescriptor","key","hasOwnProperty"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/is-data-descriptor/index.js"],"sourcesContent":["/*!\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function isDataDescriptor(obj, prop) {\n  // data descriptor properties\n  var data = {\n    configurable: 'boolean',\n    enumerable: 'boolean',\n    writable: 'boolean'\n  };\n\n  if (typeOf(obj) !== 'object') {\n    return false;\n  }\n\n  if (typeof prop === 'string') {\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\n    return typeof val !== 'undefined';\n  }\n\n  if (!('value' in obj) && !('writable' in obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (key === 'value') continue;\n\n    if (!data.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (typeOf(obj[key]) === data[key]) {\n      continue;\n    }\n\n    if (typeof obj[key] !== 'undefined') {\n      return false;\n    }\n  }\n  return true;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;EACpD;EACA,IAAIC,IAAI,GAAG;IACTC,YAAY,EAAE,SADL;IAETC,UAAU,EAAE,SAFH;IAGTC,QAAQ,EAAE;EAHD,CAAX;;EAMA,IAAIV,MAAM,CAACK,GAAD,CAAN,KAAgB,QAApB,EAA8B;IAC5B,OAAO,KAAP;EACD;;EAED,IAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;IAC5B,IAAIK,GAAG,GAAGC,MAAM,CAACC,wBAAP,CAAgCR,GAAhC,EAAqCC,IAArC,CAAV;IACA,OAAO,OAAOK,GAAP,KAAe,WAAtB;EACD;;EAED,IAAI,EAAE,WAAWN,GAAb,KAAqB,EAAE,cAAcA,GAAhB,CAAzB,EAA+C;IAC7C,OAAO,KAAP;EACD;;EAED,KAAK,IAAIS,GAAT,IAAgBT,GAAhB,EAAqB;IACnB,IAAIS,GAAG,KAAK,OAAZ,EAAqB;;IAErB,IAAI,CAACP,IAAI,CAACQ,cAAL,CAAoBD,GAApB,CAAL,EAA+B;MAC7B;IACD;;IAED,IAAId,MAAM,CAACK,GAAG,CAACS,GAAD,CAAJ,CAAN,KAAqBP,IAAI,CAACO,GAAD,CAA7B,EAAoC;MAClC;IACD;;IAED,IAAI,OAAOT,GAAG,CAACS,GAAD,CAAV,KAAoB,WAAxB,EAAqC;MACnC,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD,CArCD"},"metadata":{},"sourceType":"script"}