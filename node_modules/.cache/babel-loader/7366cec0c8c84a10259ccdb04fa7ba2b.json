{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Semaphore {\n  /**\n   * Creates an instance of Semaphore.\n   *\n   * @param {number} available the amount available number of \"tasks\"\n   * in the Semaphore\n   */\n  constructor(available) {\n    this.available = available;\n    /** @type {(function(): void)[]} */\n\n    this.waiters = [];\n    /** @private */\n\n    this._continue = this._continue.bind(this);\n  }\n  /**\n   * @param {function(): void} callback function block to capture and run\n   * @returns {void}\n   */\n\n\n  acquire(callback) {\n    if (this.available > 0) {\n      this.available--;\n      callback();\n    } else {\n      this.waiters.push(callback);\n    }\n  }\n\n  release() {\n    this.available++;\n\n    if (this.waiters.length > 0) {\n      process.nextTick(this._continue);\n    }\n  }\n\n  _continue() {\n    if (this.available > 0) {\n      if (this.waiters.length > 0) {\n        this.available--;\n        const callback = this.waiters.pop();\n        callback();\n      }\n    }\n  }\n\n}\n\nmodule.exports = Semaphore;","map":{"version":3,"names":["Semaphore","constructor","available","waiters","_continue","bind","acquire","callback","push","release","length","process","nextTick","pop","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/util/Semaphore.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Semaphore {\n\t/**\n\t * Creates an instance of Semaphore.\n\t *\n\t * @param {number} available the amount available number of \"tasks\"\n\t * in the Semaphore\n\t */\n\tconstructor(available) {\n\t\tthis.available = available;\n\t\t/** @type {(function(): void)[]} */\n\t\tthis.waiters = [];\n\t\t/** @private */\n\t\tthis._continue = this._continue.bind(this);\n\t}\n\n\t/**\n\t * @param {function(): void} callback function block to capture and run\n\t * @returns {void}\n\t */\n\tacquire(callback) {\n\t\tif (this.available > 0) {\n\t\t\tthis.available--;\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis.waiters.push(callback);\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.available++;\n\t\tif (this.waiters.length > 0) {\n\t\t\tprocess.nextTick(this._continue);\n\t\t}\n\t}\n\n\t_continue() {\n\t\tif (this.available > 0) {\n\t\t\tif (this.waiters.length > 0) {\n\t\t\t\tthis.available--;\n\t\t\t\tconst callback = this.waiters.pop();\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = Semaphore;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAN,CAAgB;EACf;AACD;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACC,SAAD,EAAY;IACtB,KAAKA,SAAL,GAAiBA,SAAjB;IACA;;IACA,KAAKC,OAAL,GAAe,EAAf;IACA;;IACA,KAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;EACA;EAED;AACD;AACA;AACA;;;EACCC,OAAO,CAACC,QAAD,EAAW;IACjB,IAAI,KAAKL,SAAL,GAAiB,CAArB,EAAwB;MACvB,KAAKA,SAAL;MACAK,QAAQ;IACR,CAHD,MAGO;MACN,KAAKJ,OAAL,CAAaK,IAAb,CAAkBD,QAAlB;IACA;EACD;;EAEDE,OAAO,GAAG;IACT,KAAKP,SAAL;;IACA,IAAI,KAAKC,OAAL,CAAaO,MAAb,GAAsB,CAA1B,EAA6B;MAC5BC,OAAO,CAACC,QAAR,CAAiB,KAAKR,SAAtB;IACA;EACD;;EAEDA,SAAS,GAAG;IACX,IAAI,KAAKF,SAAL,GAAiB,CAArB,EAAwB;MACvB,IAAI,KAAKC,OAAL,CAAaO,MAAb,GAAsB,CAA1B,EAA6B;QAC5B,KAAKR,SAAL;QACA,MAAMK,QAAQ,GAAG,KAAKJ,OAAL,CAAaU,GAAb,EAAjB;QACAN,QAAQ;MACR;IACD;EACD;;AA3Cc;;AA8ChBO,MAAM,CAACC,OAAP,GAAiBf,SAAjB"},"metadata":{},"sourceType":"script"}