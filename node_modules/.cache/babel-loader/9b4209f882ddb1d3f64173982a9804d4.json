{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\nconst Template = require(\"../Template\");\n\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-non-harmony-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-non-harmony-default-strict\"|\"reexport-fake-namespace-object\"|\"rexport-non-harmony-undefined\"|\"safe-reexport\"|\"checked-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\n/** @type {Map<string, string>} */\n\n\nconst EMPTY_MAP = new Map();\n\nclass ExportMode {\n  /**\n   * @param {ExportModeType} type type of the mode\n   */\n  constructor(type) {\n    /** @type {ExportModeType} */\n    this.type = type;\n    /** @type {string|null} */\n\n    this.name = null;\n    /** @type {Map<string, string>} */\n\n    this.map = EMPTY_MAP;\n    /** @type {Set<string>|null} */\n\n    this.ignored = null;\n    /** @type {Module|null} */\n\n    this.module = null;\n    /** @type {string|null} */\n\n    this.userRequest = null;\n  }\n\n}\n\nconst EMPTY_STAR_MODE = new ExportMode(\"empty-star\");\n\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n  constructor(request, originModule, sourceOrder, parserScope, id, name, activeExports, otherStarExports, strictExportPresence) {\n    super(request, originModule, sourceOrder, parserScope);\n    this.id = id;\n    this.redirectedId = undefined;\n    this.name = name;\n    this.activeExports = activeExports;\n    this.otherStarExports = otherStarExports;\n    this.strictExportPresence = strictExportPresence;\n  }\n\n  get type() {\n    return \"harmony export imported specifier\";\n  }\n\n  get _id() {\n    return this.redirectedId || this.id;\n  }\n\n  getMode(ignoreUnused) {\n    const name = this.name;\n    const id = this._id;\n    const used = this.originModule.isUsed(name);\n    const importedModule = this._module;\n\n    if (!importedModule) {\n      const mode = new ExportMode(\"missing\");\n      mode.userRequest = this.userRequest;\n      return mode;\n    }\n\n    if (!ignoreUnused && (name ? !used : this.originModule.usedExports === false)) {\n      const mode = new ExportMode(\"unused\");\n      mode.name = name || \"*\";\n      return mode;\n    }\n\n    const strictHarmonyModule = this.originModule.buildMeta.strictHarmonyModule;\n\n    if (name && id === \"default\" && importedModule.buildMeta) {\n      if (!importedModule.buildMeta.exportsType) {\n        const mode = new ExportMode(strictHarmonyModule ? \"reexport-non-harmony-default-strict\" : \"reexport-non-harmony-default\");\n        mode.name = name;\n        mode.module = importedModule;\n        return mode;\n      } else if (importedModule.buildMeta.exportsType === \"named\") {\n        const mode = new ExportMode(\"reexport-named-default\");\n        mode.name = name;\n        mode.module = importedModule;\n        return mode;\n      }\n    }\n\n    const isNotAHarmonyModule = importedModule.buildMeta && !importedModule.buildMeta.exportsType;\n\n    if (name) {\n      let mode;\n\n      if (id) {\n        // export { name as name }\n        if (isNotAHarmonyModule && strictHarmonyModule) {\n          mode = new ExportMode(\"rexport-non-harmony-undefined\");\n          mode.name = name;\n        } else {\n          mode = new ExportMode(\"safe-reexport\");\n          mode.map = new Map([[name, id]]);\n        }\n      } else {\n        // export { * as name }\n        if (isNotAHarmonyModule && strictHarmonyModule) {\n          mode = new ExportMode(\"reexport-fake-namespace-object\");\n          mode.name = name;\n        } else {\n          mode = new ExportMode(\"reexport-namespace-object\");\n          mode.name = name;\n        }\n      }\n\n      mode.module = importedModule;\n      return mode;\n    }\n\n    const hasUsedExports = Array.isArray(this.originModule.usedExports);\n    const hasProvidedExports = Array.isArray(importedModule.buildMeta.providedExports);\n\n    const activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports(); // export *\n\n\n    if (hasUsedExports) {\n      // reexport * with known used exports\n      if (hasProvidedExports) {\n        const map = new Map(this.originModule.usedExports.filter(id => {\n          if (id === \"default\") return false;\n          if (this.activeExports.has(id)) return false;\n          if (activeFromOtherStarExports.has(id)) return false;\n          if (!importedModule.buildMeta.providedExports.includes(id)) return false;\n          return true;\n        }).map(item => [item, item]));\n\n        if (map.size === 0) {\n          return EMPTY_STAR_MODE;\n        }\n\n        const mode = new ExportMode(\"safe-reexport\");\n        mode.module = importedModule;\n        mode.map = map;\n        return mode;\n      }\n\n      const map = new Map(this.originModule.usedExports.filter(id => {\n        if (id === \"default\") return false;\n        if (this.activeExports.has(id)) return false;\n        if (activeFromOtherStarExports.has(id)) return false;\n        return true;\n      }).map(item => [item, item]));\n\n      if (map.size === 0) {\n        return EMPTY_STAR_MODE;\n      }\n\n      const mode = new ExportMode(\"checked-reexport\");\n      mode.module = importedModule;\n      mode.map = map;\n      return mode;\n    }\n\n    if (hasProvidedExports) {\n      const map = new Map(importedModule.buildMeta.providedExports.filter(id => {\n        if (id === \"default\") return false;\n        if (this.activeExports.has(id)) return false;\n        if (activeFromOtherStarExports.has(id)) return false;\n        return true;\n      }).map(item => [item, item]));\n\n      if (map.size === 0) {\n        return EMPTY_STAR_MODE;\n      }\n\n      const mode = new ExportMode(\"safe-reexport\");\n      mode.module = importedModule;\n      mode.map = map;\n      return mode;\n    }\n\n    const mode = new ExportMode(\"dynamic-reexport\");\n    mode.module = importedModule;\n    mode.ignored = new Set([\"default\", ...this.activeExports, ...activeFromOtherStarExports]);\n    return mode;\n  }\n\n  getReference() {\n    const mode = this.getMode(false);\n\n    switch (mode.type) {\n      case \"missing\":\n      case \"unused\":\n      case \"empty-star\":\n        return null;\n\n      case \"reexport-non-harmony-default\":\n      case \"reexport-named-default\":\n        return new DependencyReference(mode.module, [\"default\"], false, this.sourceOrder);\n\n      case \"reexport-namespace-object\":\n      case \"reexport-non-harmony-default-strict\":\n      case \"reexport-fake-namespace-object\":\n      case \"rexport-non-harmony-undefined\":\n        return new DependencyReference(mode.module, true, false, this.sourceOrder);\n\n      case \"safe-reexport\":\n      case \"checked-reexport\":\n        return new DependencyReference(mode.module, Array.from(mode.map.values()), false, this.sourceOrder);\n\n      case \"dynamic-reexport\":\n        return new DependencyReference(mode.module, true, false, this.sourceOrder);\n\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n\n  _discoverActiveExportsFromOtherStartExports() {\n    if (!this.otherStarExports) return new Set();\n    const result = new Set(); // try to learn impossible exports from other star exports with provided exports\n\n    for (const otherStarExport of this.otherStarExports) {\n      const otherImportedModule = otherStarExport._module;\n\n      if (otherImportedModule && Array.isArray(otherImportedModule.buildMeta.providedExports)) {\n        for (const exportName of otherImportedModule.buildMeta.providedExports) {\n          result.add(exportName);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  getExports() {\n    if (this.name) {\n      return {\n        exports: [this.name],\n        dependencies: undefined\n      };\n    }\n\n    const importedModule = this._module;\n\n    if (!importedModule) {\n      // no imported module available\n      return {\n        exports: null,\n        dependencies: undefined\n      };\n    }\n\n    if (Array.isArray(importedModule.buildMeta.providedExports)) {\n      const activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports();\n\n      return {\n        exports: importedModule.buildMeta.providedExports.filter(id => id !== \"default\" && !activeFromOtherStarExports.has(id) && !this.activeExports.has(id)),\n        dependencies: [importedModule]\n      };\n    }\n\n    if (importedModule.buildMeta.providedExports) {\n      return {\n        exports: true,\n        dependencies: undefined\n      };\n    }\n\n    return {\n      exports: null,\n      dependencies: [importedModule]\n    };\n  }\n\n  getWarnings() {\n    if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n      return [];\n    }\n\n    return this._getErrors();\n  }\n\n  getErrors() {\n    if (this.strictExportPresence || this.originModule.buildMeta.strictHarmonyModule) {\n      return this._getErrors();\n    }\n\n    return [];\n  }\n\n  _getErrors() {\n    const importedModule = this._module;\n\n    if (!importedModule) {\n      return;\n    }\n\n    if (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n      // It's not an harmony module\n      if (this.originModule.buildMeta.strictHarmonyModule && this._id && this._id !== \"default\") {\n        // In strict harmony modules we only support the default export\n        return [new HarmonyLinkingError(`Can't reexport the named export '${this._id}' from non EcmaScript module (only default export is available)`)];\n      }\n\n      return;\n    }\n\n    if (!this._id) {\n      return;\n    }\n\n    if (importedModule.isProvided(this._id) !== false) {\n      // It's provided or we are not sure\n      return;\n    } // We are sure that it's not provided\n\n\n    const idIsNotNameMessage = this._id !== this.name ? ` (reexported as '${this.name}')` : \"\";\n    const errorMessage = `\"export '${this._id}'${idIsNotNameMessage} was not found in '${this.userRequest}'`;\n    return [new HarmonyLinkingError(errorMessage)];\n  }\n\n  updateHash(hash) {\n    super.updateHash(hash);\n    const hashValue = this.getHashValue(this._module);\n    hash.update(hashValue);\n  }\n\n  getHashValue(importedModule) {\n    if (!importedModule) {\n      return \"\";\n    }\n\n    const stringifiedUsedExport = JSON.stringify(importedModule.usedExports);\n    const stringifiedProvidedExport = JSON.stringify(importedModule.buildMeta.providedExports);\n    return importedModule.used + stringifiedUsedExport + stringifiedProvidedExport;\n  }\n\n  disconnect() {\n    super.disconnect();\n    this.redirectedId = undefined;\n  }\n\n}\n\nmodule.exports = HarmonyExportImportedSpecifierDependency;\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  harmonyInit(dep, source, runtime, dependencyTemplates) {\n    super.harmonyInit(dep, source, runtime, dependencyTemplates);\n    const content = this.getContent(dep);\n    source.insert(-1, content);\n  }\n\n  getHarmonyInitOrder(dep) {\n    if (dep.name) {\n      const used = dep.originModule.isUsed(dep.name);\n      if (!used) return NaN;\n    } else {\n      const importedModule = dep._module;\n\n      const activeFromOtherStarExports = dep._discoverActiveExportsFromOtherStartExports();\n\n      if (Array.isArray(dep.originModule.usedExports)) {\n        // we know which exports are used\n        const unused = dep.originModule.usedExports.every(id => {\n          if (id === \"default\") return true;\n          if (dep.activeExports.has(id)) return true;\n          if (importedModule.isProvided(id) === false) return true;\n          if (activeFromOtherStarExports.has(id)) return true;\n          return false;\n        });\n        if (unused) return NaN;\n      } else if (dep.originModule.usedExports && importedModule && Array.isArray(importedModule.buildMeta.providedExports)) {\n        // not sure which exports are used, but we know which are provided\n        const unused = importedModule.buildMeta.providedExports.every(id => {\n          if (id === \"default\") return true;\n          if (dep.activeExports.has(id)) return true;\n          if (activeFromOtherStarExports.has(id)) return true;\n          return false;\n        });\n        if (unused) return NaN;\n      }\n    }\n\n    return super.getHarmonyInitOrder(dep);\n  }\n\n  getContent(dep) {\n    const mode = dep.getMode(false);\n    const module = dep.originModule;\n    const importedModule = dep._module;\n    const importVar = dep.getImportVar();\n\n    switch (mode.type) {\n      case \"missing\":\n        return `throw new Error(${JSON.stringify(`Cannot find module '${mode.userRequest}'`)});\\n`;\n\n      case \"unused\":\n        return `${Template.toNormalComment(`unused harmony reexport ${mode.name}`)}\\n`;\n\n      case \"reexport-non-harmony-default\":\n        return \"/* harmony reexport (default from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, null);\n\n      case \"reexport-named-default\":\n        return \"/* harmony reexport (default from named exports) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n      case \"reexport-fake-namespace-object\":\n        return \"/* harmony reexport (fake namespace object from non-harmony) */ \" + this.getReexportFakeNamespaceObjectStatement(module, module.isUsed(mode.name), importVar);\n\n      case \"rexport-non-harmony-undefined\":\n        return \"/* harmony reexport (non default export from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), \"undefined\", \"\");\n\n      case \"reexport-non-harmony-default-strict\":\n        return \"/* harmony reexport (default from non-harmony) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n      case \"reexport-namespace-object\":\n        return \"/* harmony reexport (module object) */ \" + this.getReexportStatement(module, module.isUsed(mode.name), importVar, \"\");\n\n      case \"empty-star\":\n        return \"/* empty/unused harmony star reexport */\";\n\n      case \"safe-reexport\":\n        return Array.from(mode.map.entries()).map(item => {\n          return \"/* harmony reexport (safe) */ \" + this.getReexportStatement(module, module.isUsed(item[0]), importVar, importedModule.isUsed(item[1])) + \"\\n\";\n        }).join(\"\");\n\n      case \"checked-reexport\":\n        return Array.from(mode.map.entries()).map(item => {\n          return \"/* harmony reexport (checked) */ \" + this.getConditionalReexportStatement(module, item[0], importVar, item[1]) + \"\\n\";\n        }).join(\"\");\n\n      case \"dynamic-reexport\":\n        {\n          const ignoredExports = mode.ignored;\n          let content = \"/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in \" + importVar + \") \"; // Filter out exports which are defined by other exports\n          // and filter out default export because it cannot be reexported with *\n\n          if (ignoredExports.size > 0) {\n            content += \"if(\" + JSON.stringify(Array.from(ignoredExports)) + \".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n          } else {\n            content += \"if(__WEBPACK_IMPORT_KEY__ !== 'default') \";\n          }\n\n          const exportsName = dep.originModule.exportsArgument;\n          return content + `(function(key) { __webpack_require__.d(${exportsName}, key, function() { return ${importVar}[key]; }) }(__WEBPACK_IMPORT_KEY__));\\n`;\n        }\n\n      default:\n        throw new Error(`Unknown mode ${mode.type}`);\n    }\n  }\n\n  getReexportStatement(module, key, name, valueKey) {\n    const exportsName = module.exportsArgument;\n    const returnValue = this.getReturnValue(name, valueKey);\n    return `__webpack_require__.d(${exportsName}, ${JSON.stringify(key)}, function() { return ${returnValue}; });\\n`;\n  }\n\n  getReexportFakeNamespaceObjectStatement(module, key, name) {\n    const exportsName = module.exportsArgument;\n    return `__webpack_require__.d(${exportsName}, ${JSON.stringify(key)}, function() { return __webpack_require__.t(${name}); });\\n`;\n  }\n\n  getConditionalReexportStatement(module, key, name, valueKey) {\n    if (valueKey === false) {\n      return \"/* unused export */\\n\";\n    }\n\n    const exportsName = module.exportsArgument;\n    const returnValue = this.getReturnValue(name, valueKey);\n    return `if(__webpack_require__.o(${name}, ${JSON.stringify(valueKey)})) __webpack_require__.d(${exportsName}, ${JSON.stringify(key)}, function() { return ${returnValue}; });\\n`;\n  }\n\n  getReturnValue(name, valueKey) {\n    if (valueKey === null) {\n      return `${name}_default.a`;\n    }\n\n    if (valueKey === \"\") {\n      return name;\n    }\n\n    if (valueKey === false) {\n      return \"/* unused export */ undefined\";\n    }\n\n    return `${name}[${JSON.stringify(valueKey)}]`;\n  }\n\n};","map":{"version":3,"names":["DependencyReference","require","HarmonyImportDependency","Template","HarmonyLinkingError","EMPTY_MAP","Map","ExportMode","constructor","type","name","map","ignored","module","userRequest","EMPTY_STAR_MODE","HarmonyExportImportedSpecifierDependency","request","originModule","sourceOrder","parserScope","id","activeExports","otherStarExports","strictExportPresence","redirectedId","undefined","_id","getMode","ignoreUnused","used","isUsed","importedModule","_module","mode","usedExports","strictHarmonyModule","buildMeta","exportsType","isNotAHarmonyModule","hasUsedExports","Array","isArray","hasProvidedExports","providedExports","activeFromOtherStarExports","_discoverActiveExportsFromOtherStartExports","filter","has","includes","item","size","Set","getReference","from","values","Error","result","otherStarExport","otherImportedModule","exportName","add","getExports","exports","dependencies","getWarnings","_getErrors","getErrors","isProvided","idIsNotNameMessage","errorMessage","updateHash","hash","hashValue","getHashValue","update","stringifiedUsedExport","JSON","stringify","stringifiedProvidedExport","disconnect","HarmonyExportImportedSpecifierDependencyTemplate","harmonyInit","dep","source","runtime","dependencyTemplates","content","getContent","insert","getHarmonyInitOrder","NaN","unused","every","importVar","getImportVar","toNormalComment","getReexportStatement","getReexportFakeNamespaceObjectStatement","entries","join","getConditionalReexportStatement","ignoredExports","exportsName","exportsArgument","key","valueKey","returnValue","getReturnValue"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/dependencies/HarmonyExportImportedSpecifierDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependencyReference = require(\"./DependencyReference\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\nconst Template = require(\"../Template\");\nconst HarmonyLinkingError = require(\"../HarmonyLinkingError\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {\"missing\"|\"unused\"|\"empty-star\"|\"reexport-non-harmony-default\"|\"reexport-named-default\"|\"reexport-namespace-object\"|\"reexport-non-harmony-default-strict\"|\"reexport-fake-namespace-object\"|\"rexport-non-harmony-undefined\"|\"safe-reexport\"|\"checked-reexport\"|\"dynamic-reexport\"} ExportModeType */\n\n/** @type {Map<string, string>} */\nconst EMPTY_MAP = new Map();\n\nclass ExportMode {\n\t/**\n\t * @param {ExportModeType} type type of the mode\n\t */\n\tconstructor(type) {\n\t\t/** @type {ExportModeType} */\n\t\tthis.type = type;\n\t\t/** @type {string|null} */\n\t\tthis.name = null;\n\t\t/** @type {Map<string, string>} */\n\t\tthis.map = EMPTY_MAP;\n\t\t/** @type {Set<string>|null} */\n\t\tthis.ignored = null;\n\t\t/** @type {Module|null} */\n\t\tthis.module = null;\n\t\t/** @type {string|null} */\n\t\tthis.userRequest = null;\n\t}\n}\n\nconst EMPTY_STAR_MODE = new ExportMode(\"empty-star\");\n\nclass HarmonyExportImportedSpecifierDependency extends HarmonyImportDependency {\n\tconstructor(\n\t\trequest,\n\t\toriginModule,\n\t\tsourceOrder,\n\t\tparserScope,\n\t\tid,\n\t\tname,\n\t\tactiveExports,\n\t\totherStarExports,\n\t\tstrictExportPresence\n\t) {\n\t\tsuper(request, originModule, sourceOrder, parserScope);\n\t\tthis.id = id;\n\t\tthis.redirectedId = undefined;\n\t\tthis.name = name;\n\t\tthis.activeExports = activeExports;\n\t\tthis.otherStarExports = otherStarExports;\n\t\tthis.strictExportPresence = strictExportPresence;\n\t}\n\n\tget type() {\n\t\treturn \"harmony export imported specifier\";\n\t}\n\n\tget _id() {\n\t\treturn this.redirectedId || this.id;\n\t}\n\n\tgetMode(ignoreUnused) {\n\t\tconst name = this.name;\n\t\tconst id = this._id;\n\t\tconst used = this.originModule.isUsed(name);\n\t\tconst importedModule = this._module;\n\n\t\tif (!importedModule) {\n\t\t\tconst mode = new ExportMode(\"missing\");\n\t\t\tmode.userRequest = this.userRequest;\n\t\t\treturn mode;\n\t\t}\n\n\t\tif (\n\t\t\t!ignoreUnused &&\n\t\t\t(name ? !used : this.originModule.usedExports === false)\n\t\t) {\n\t\t\tconst mode = new ExportMode(\"unused\");\n\t\t\tmode.name = name || \"*\";\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst strictHarmonyModule = this.originModule.buildMeta.strictHarmonyModule;\n\t\tif (name && id === \"default\" && importedModule.buildMeta) {\n\t\t\tif (!importedModule.buildMeta.exportsType) {\n\t\t\t\tconst mode = new ExportMode(\n\t\t\t\t\tstrictHarmonyModule\n\t\t\t\t\t\t? \"reexport-non-harmony-default-strict\"\n\t\t\t\t\t\t: \"reexport-non-harmony-default\"\n\t\t\t\t);\n\t\t\t\tmode.name = name;\n\t\t\t\tmode.module = importedModule;\n\t\t\t\treturn mode;\n\t\t\t} else if (importedModule.buildMeta.exportsType === \"named\") {\n\t\t\t\tconst mode = new ExportMode(\"reexport-named-default\");\n\t\t\t\tmode.name = name;\n\t\t\t\tmode.module = importedModule;\n\t\t\t\treturn mode;\n\t\t\t}\n\t\t}\n\n\t\tconst isNotAHarmonyModule =\n\t\t\timportedModule.buildMeta && !importedModule.buildMeta.exportsType;\n\t\tif (name) {\n\t\t\tlet mode;\n\t\t\tif (id) {\n\t\t\t\t// export { name as name }\n\t\t\t\tif (isNotAHarmonyModule && strictHarmonyModule) {\n\t\t\t\t\tmode = new ExportMode(\"rexport-non-harmony-undefined\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tmode = new ExportMode(\"safe-reexport\");\n\t\t\t\t\tmode.map = new Map([[name, id]]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// export { * as name }\n\t\t\t\tif (isNotAHarmonyModule && strictHarmonyModule) {\n\t\t\t\t\tmode = new ExportMode(\"reexport-fake-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tmode = new ExportMode(\"reexport-namespace-object\");\n\t\t\t\t\tmode.name = name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmode.module = importedModule;\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst hasUsedExports = Array.isArray(this.originModule.usedExports);\n\t\tconst hasProvidedExports = Array.isArray(\n\t\t\timportedModule.buildMeta.providedExports\n\t\t);\n\t\tconst activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports();\n\n\t\t// export *\n\t\tif (hasUsedExports) {\n\t\t\t// reexport * with known used exports\n\t\t\tif (hasProvidedExports) {\n\t\t\t\tconst map = new Map(\n\t\t\t\t\tthis.originModule.usedExports\n\t\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\t\t\t\t\t\t\tif (!importedModule.buildMeta.providedExports.includes(id))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(item => [item, item])\n\t\t\t\t);\n\n\t\t\t\tif (map.size === 0) {\n\t\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t\t}\n\n\t\t\t\tconst mode = new ExportMode(\"safe-reexport\");\n\t\t\t\tmode.module = importedModule;\n\t\t\t\tmode.map = map;\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\tconst map = new Map(\n\t\t\t\tthis.originModule.usedExports\n\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(item => [item, item])\n\t\t\t);\n\n\t\t\tif (map.size === 0) {\n\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t}\n\n\t\t\tconst mode = new ExportMode(\"checked-reexport\");\n\t\t\tmode.module = importedModule;\n\t\t\tmode.map = map;\n\t\t\treturn mode;\n\t\t}\n\n\t\tif (hasProvidedExports) {\n\t\t\tconst map = new Map(\n\t\t\t\timportedModule.buildMeta.providedExports\n\t\t\t\t\t.filter(id => {\n\t\t\t\t\t\tif (id === \"default\") return false;\n\t\t\t\t\t\tif (this.activeExports.has(id)) return false;\n\t\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return false;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t})\n\t\t\t\t\t.map(item => [item, item])\n\t\t\t);\n\n\t\t\tif (map.size === 0) {\n\t\t\t\treturn EMPTY_STAR_MODE;\n\t\t\t}\n\n\t\t\tconst mode = new ExportMode(\"safe-reexport\");\n\t\t\tmode.module = importedModule;\n\t\t\tmode.map = map;\n\t\t\treturn mode;\n\t\t}\n\n\t\tconst mode = new ExportMode(\"dynamic-reexport\");\n\t\tmode.module = importedModule;\n\t\tmode.ignored = new Set([\n\t\t\t\"default\",\n\t\t\t...this.activeExports,\n\t\t\t...activeFromOtherStarExports\n\t\t]);\n\t\treturn mode;\n\t}\n\n\tgetReference() {\n\t\tconst mode = this.getMode(false);\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\tcase \"unused\":\n\t\t\tcase \"empty-star\":\n\t\t\t\treturn null;\n\n\t\t\tcase \"reexport-non-harmony-default\":\n\t\t\tcase \"reexport-named-default\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\t[\"default\"],\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\tcase \"reexport-non-harmony-default-strict\":\n\t\t\tcase \"reexport-fake-namespace-object\":\n\t\t\tcase \"rexport-non-harmony-undefined\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"safe-reexport\":\n\t\t\tcase \"checked-reexport\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\tArray.from(mode.map.values()),\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tcase \"dynamic-reexport\":\n\t\t\t\treturn new DependencyReference(\n\t\t\t\t\tmode.module,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tthis.sourceOrder\n\t\t\t\t);\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\t_discoverActiveExportsFromOtherStartExports() {\n\t\tif (!this.otherStarExports) return new Set();\n\t\tconst result = new Set();\n\t\t// try to learn impossible exports from other star exports with provided exports\n\t\tfor (const otherStarExport of this.otherStarExports) {\n\t\t\tconst otherImportedModule = otherStarExport._module;\n\t\t\tif (\n\t\t\t\totherImportedModule &&\n\t\t\t\tArray.isArray(otherImportedModule.buildMeta.providedExports)\n\t\t\t) {\n\t\t\t\tfor (const exportName of otherImportedModule.buildMeta\n\t\t\t\t\t.providedExports) {\n\t\t\t\t\tresult.add(exportName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetExports() {\n\t\tif (this.name) {\n\t\t\treturn {\n\t\t\t\texports: [this.name],\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\tconst importedModule = this._module;\n\n\t\tif (!importedModule) {\n\t\t\t// no imported module available\n\t\t\treturn {\n\t\t\t\texports: null,\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\tif (Array.isArray(importedModule.buildMeta.providedExports)) {\n\t\t\tconst activeFromOtherStarExports = this._discoverActiveExportsFromOtherStartExports();\n\t\t\treturn {\n\t\t\t\texports: importedModule.buildMeta.providedExports.filter(\n\t\t\t\t\tid =>\n\t\t\t\t\t\tid !== \"default\" &&\n\t\t\t\t\t\t!activeFromOtherStarExports.has(id) &&\n\t\t\t\t\t\t!this.activeExports.has(id)\n\t\t\t\t),\n\t\t\t\tdependencies: [importedModule]\n\t\t\t};\n\t\t}\n\n\t\tif (importedModule.buildMeta.providedExports) {\n\t\t\treturn {\n\t\t\t\texports: true,\n\t\t\t\tdependencies: undefined\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\texports: null,\n\t\t\tdependencies: [importedModule]\n\t\t};\n\t}\n\n\tgetWarnings() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this._getErrors();\n\t}\n\n\tgetErrors() {\n\t\tif (\n\t\t\tthis.strictExportPresence ||\n\t\t\tthis.originModule.buildMeta.strictHarmonyModule\n\t\t) {\n\t\t\treturn this._getErrors();\n\t\t}\n\t\treturn [];\n\t}\n\n\t_getErrors() {\n\t\tconst importedModule = this._module;\n\t\tif (!importedModule) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!importedModule.buildMeta || !importedModule.buildMeta.exportsType) {\n\t\t\t// It's not an harmony module\n\t\t\tif (\n\t\t\t\tthis.originModule.buildMeta.strictHarmonyModule &&\n\t\t\t\tthis._id &&\n\t\t\t\tthis._id !== \"default\"\n\t\t\t) {\n\t\t\t\t// In strict harmony modules we only support the default export\n\t\t\t\treturn [\n\t\t\t\t\tnew HarmonyLinkingError(\n\t\t\t\t\t\t`Can't reexport the named export '${this._id}' from non EcmaScript module (only default export is available)`\n\t\t\t\t\t)\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._id) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (importedModule.isProvided(this._id) !== false) {\n\t\t\t// It's provided or we are not sure\n\t\t\treturn;\n\t\t}\n\n\t\t// We are sure that it's not provided\n\t\tconst idIsNotNameMessage =\n\t\t\tthis._id !== this.name ? ` (reexported as '${this.name}')` : \"\";\n\t\tconst errorMessage = `\"export '${this._id}'${idIsNotNameMessage} was not found in '${this.userRequest}'`;\n\t\treturn [new HarmonyLinkingError(errorMessage)];\n\t}\n\n\tupdateHash(hash) {\n\t\tsuper.updateHash(hash);\n\t\tconst hashValue = this.getHashValue(this._module);\n\t\thash.update(hashValue);\n\t}\n\n\tgetHashValue(importedModule) {\n\t\tif (!importedModule) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst stringifiedUsedExport = JSON.stringify(importedModule.usedExports);\n\t\tconst stringifiedProvidedExport = JSON.stringify(\n\t\t\timportedModule.buildMeta.providedExports\n\t\t);\n\t\treturn (\n\t\t\timportedModule.used + stringifiedUsedExport + stringifiedProvidedExport\n\t\t);\n\t}\n\n\tdisconnect() {\n\t\tsuper.disconnect();\n\t\tthis.redirectedId = undefined;\n\t}\n}\n\nmodule.exports = HarmonyExportImportedSpecifierDependency;\n\nHarmonyExportImportedSpecifierDependency.Template = class HarmonyExportImportedSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n\tharmonyInit(dep, source, runtime, dependencyTemplates) {\n\t\tsuper.harmonyInit(dep, source, runtime, dependencyTemplates);\n\t\tconst content = this.getContent(dep);\n\t\tsource.insert(-1, content);\n\t}\n\n\tgetHarmonyInitOrder(dep) {\n\t\tif (dep.name) {\n\t\t\tconst used = dep.originModule.isUsed(dep.name);\n\t\t\tif (!used) return NaN;\n\t\t} else {\n\t\t\tconst importedModule = dep._module;\n\n\t\t\tconst activeFromOtherStarExports = dep._discoverActiveExportsFromOtherStartExports();\n\n\t\t\tif (Array.isArray(dep.originModule.usedExports)) {\n\t\t\t\t// we know which exports are used\n\n\t\t\t\tconst unused = dep.originModule.usedExports.every(id => {\n\t\t\t\t\tif (id === \"default\") return true;\n\t\t\t\t\tif (dep.activeExports.has(id)) return true;\n\t\t\t\t\tif (importedModule.isProvided(id) === false) return true;\n\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return true;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (unused) return NaN;\n\t\t\t} else if (\n\t\t\t\tdep.originModule.usedExports &&\n\t\t\t\timportedModule &&\n\t\t\t\tArray.isArray(importedModule.buildMeta.providedExports)\n\t\t\t) {\n\t\t\t\t// not sure which exports are used, but we know which are provided\n\n\t\t\t\tconst unused = importedModule.buildMeta.providedExports.every(id => {\n\t\t\t\t\tif (id === \"default\") return true;\n\t\t\t\t\tif (dep.activeExports.has(id)) return true;\n\t\t\t\t\tif (activeFromOtherStarExports.has(id)) return true;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (unused) return NaN;\n\t\t\t}\n\t\t}\n\t\treturn super.getHarmonyInitOrder(dep);\n\t}\n\n\tgetContent(dep) {\n\t\tconst mode = dep.getMode(false);\n\t\tconst module = dep.originModule;\n\t\tconst importedModule = dep._module;\n\t\tconst importVar = dep.getImportVar();\n\n\t\tswitch (mode.type) {\n\t\t\tcase \"missing\":\n\t\t\t\treturn `throw new Error(${JSON.stringify(\n\t\t\t\t\t`Cannot find module '${mode.userRequest}'`\n\t\t\t\t)});\\n`;\n\n\t\t\tcase \"unused\":\n\t\t\t\treturn `${Template.toNormalComment(\n\t\t\t\t\t`unused harmony reexport ${mode.name}`\n\t\t\t\t)}\\n`;\n\n\t\t\tcase \"reexport-non-harmony-default\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\tnull\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-named-default\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from named exports) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-fake-namespace-object\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (fake namespace object from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportFakeNamespaceObjectStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"rexport-non-harmony-undefined\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (non default export from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\t\"undefined\",\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-non-harmony-default-strict\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (default from non-harmony) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"reexport-namespace-object\":\n\t\t\t\treturn (\n\t\t\t\t\t\"/* harmony reexport (module object) */ \" +\n\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\tmodule,\n\t\t\t\t\t\tmodule.isUsed(mode.name),\n\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\"\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\tcase \"empty-star\":\n\t\t\t\treturn \"/* empty/unused harmony star reexport */\";\n\n\t\t\tcase \"safe-reexport\":\n\t\t\t\treturn Array.from(mode.map.entries())\n\t\t\t\t\t.map(item => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"/* harmony reexport (safe) */ \" +\n\t\t\t\t\t\t\tthis.getReexportStatement(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\tmodule.isUsed(item[0]),\n\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\timportedModule.isUsed(item[1])\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\n\t\t\tcase \"checked-reexport\":\n\t\t\t\treturn Array.from(mode.map.entries())\n\t\t\t\t\t.map(item => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\"/* harmony reexport (checked) */ \" +\n\t\t\t\t\t\t\tthis.getConditionalReexportStatement(\n\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\titem[0],\n\t\t\t\t\t\t\t\timportVar,\n\t\t\t\t\t\t\t\titem[1]\n\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t\"\\n\"\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\");\n\n\t\t\tcase \"dynamic-reexport\": {\n\t\t\t\tconst ignoredExports = mode.ignored;\n\t\t\t\tlet content =\n\t\t\t\t\t\"/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in \" +\n\t\t\t\t\timportVar +\n\t\t\t\t\t\") \";\n\n\t\t\t\t// Filter out exports which are defined by other exports\n\t\t\t\t// and filter out default export because it cannot be reexported with *\n\t\t\t\tif (ignoredExports.size > 0) {\n\t\t\t\t\tcontent +=\n\t\t\t\t\t\t\"if(\" +\n\t\t\t\t\t\tJSON.stringify(Array.from(ignoredExports)) +\n\t\t\t\t\t\t\".indexOf(__WEBPACK_IMPORT_KEY__) < 0) \";\n\t\t\t\t} else {\n\t\t\t\t\tcontent += \"if(__WEBPACK_IMPORT_KEY__ !== 'default') \";\n\t\t\t\t}\n\t\t\t\tconst exportsName = dep.originModule.exportsArgument;\n\t\t\t\treturn (\n\t\t\t\t\tcontent +\n\t\t\t\t\t`(function(key) { __webpack_require__.d(${exportsName}, key, function() { return ${importVar}[key]; }) }(__WEBPACK_IMPORT_KEY__));\\n`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unknown mode ${mode.type}`);\n\t\t}\n\t}\n\n\tgetReexportStatement(module, key, name, valueKey) {\n\t\tconst exportsName = module.exportsArgument;\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\t\treturn `__webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return ${returnValue}; });\\n`;\n\t}\n\n\tgetReexportFakeNamespaceObjectStatement(module, key, name) {\n\t\tconst exportsName = module.exportsArgument;\n\t\treturn `__webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return __webpack_require__.t(${name}); });\\n`;\n\t}\n\n\tgetConditionalReexportStatement(module, key, name, valueKey) {\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */\\n\";\n\t\t}\n\t\tconst exportsName = module.exportsArgument;\n\t\tconst returnValue = this.getReturnValue(name, valueKey);\n\t\treturn `if(__webpack_require__.o(${name}, ${JSON.stringify(\n\t\t\tvalueKey\n\t\t)})) __webpack_require__.d(${exportsName}, ${JSON.stringify(\n\t\t\tkey\n\t\t)}, function() { return ${returnValue}; });\\n`;\n\t}\n\n\tgetReturnValue(name, valueKey) {\n\t\tif (valueKey === null) {\n\t\t\treturn `${name}_default.a`;\n\t\t}\n\t\tif (valueKey === \"\") {\n\t\t\treturn name;\n\t\t}\n\t\tif (valueKey === false) {\n\t\t\treturn \"/* unused export */ undefined\";\n\t\t}\n\n\t\treturn `${name}[${JSON.stringify(valueKey)}]`;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}