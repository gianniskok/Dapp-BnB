{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n      $schemaValue;\n\n  if ($isData) {\n    out += ' var schema' + $lvl + ' = ' + it.util.getData($schema.$data, $dataLvl, it.dataPathArr) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n\n  var $rule = this,\n      $definition = 'definition' + $lvl,\n      $rDef = $rule.definition,\n      $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + $definition + ' = RULES.custom[\\'' + $keyword + '\\'].definition; var ' + $validateCode + ' = ' + $definition + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n\n  var $ruleErrs = $validateCode + '.errors',\n      $i = 'i' + $lvl,\n      $ruleErr = 'ruleErr' + $lvl,\n      $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n\n  if (!($inline || $macro)) {\n    out += '' + $ruleErrs + ' = null;';\n  }\n\n  out += 'var ' + $errs + ' = errors;var ' + $valid + ';';\n\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + $schemaValue + ' === undefined) { ' + $valid + ' = true; } else { ';\n\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + $valid + ' = ' + $definition + '.validateSchema(' + $schemaValue + '); if (' + $valid + ') { ';\n    }\n  }\n\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + $ruleValidate.validate + ' ';\n    } else {\n      out += ' ' + $valid + ' = ' + $ruleValidate.validate + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + $code;\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + $validateCode + '.call( ';\n\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + $data + ' ';\n    } else {\n      out += ' , ' + $schemaValue + ' , ' + $data + ' , validate.schema' + it.schemaPath + ' ';\n    }\n\n    out += ' , (dataPath || \\'\\')';\n\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + it.errorPath;\n    }\n\n    var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + $parentData + ' , ' + $parentDataProperty + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n\n    if ($rDef.errors === false) {\n      out += ' ' + $valid + ' = ';\n\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n\n      out += '' + def_callRuleValidate + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + $ruleErrs + ' = null; try { ' + $valid + ' = await ' + def_callRuleValidate + '; } catch (e) { ' + $valid + ' = false; if (e instanceof ValidationError) ' + $ruleErrs + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + $ruleErrs + ' = null; ' + $valid + ' = ' + def_callRuleValidate + '; ';\n      }\n    }\n  }\n\n  if ($rDef.modifying) {\n    out += ' if (' + $parentData + ') ' + $data + ' = ' + $parentData + '[' + $parentDataProperty + '];';\n  }\n\n  out += '' + $closingBraces;\n\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n\n    if ($rDef.valid === undefined) {\n      out += ' !';\n\n      if ($macro) {\n        out += '' + $nextValid;\n      } else {\n        out += '' + $valid;\n      }\n    } else {\n      out += ' ' + !$rDef.valid + ' ';\n    }\n\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    /* istanbul ignore else */\n\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { keyword: \\'' + $rule.keyword + '\\' } ';\n\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + $rule.keyword + '\" keyword validation\\' ';\n      }\n\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n      }\n\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n\n    var __err = out;\n    out = $$outStack.pop();\n\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + __err + ']); ';\n      } else {\n        out += ' validate.errors = [' + __err + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n\n    var def_customError = out;\n    out = $$outStack.pop();\n\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + '; if (' + $ruleErr + '.schemaPath === undefined) { ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\"; } ';\n\n          if (it.opts.verbose) {\n            out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n          }\n\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + def_customError + ' ';\n        } else {\n          out += ' if (' + $errs + ' == errors) { ' + def_customError + ' } else {  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + '; if (' + $ruleErr + '.schemaPath === undefined) { ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\"; } ';\n\n          if (it.opts.verbose) {\n            out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n          }\n\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   ';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { keyword: \\'' + $rule.keyword + '\\' } ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + $rule.keyword + '\" keyword validation\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + def_customError + ' ';\n      } else {\n        out += ' if (Array.isArray(' + $ruleErrs + ')) { if (vErrors === null) vErrors = ' + $ruleErrs + '; else vErrors = vErrors.concat(' + $ruleErrs + '); errors = vErrors.length;  for (var ' + $i + '=' + $errs + '; ' + $i + '<errors; ' + $i + '++) { var ' + $ruleErr + ' = vErrors[' + $i + ']; if (' + $ruleErr + '.dataPath === undefined) ' + $ruleErr + '.dataPath = (dataPath || \\'\\') + ' + it.errorPath + ';  ' + $ruleErr + '.schemaPath = \"' + $errSchemaPath + '\";  ';\n\n        if (it.opts.verbose) {\n          out += ' ' + $ruleErr + '.schema = ' + $schemaValue + '; ' + $ruleErr + '.data = ' + $data + '; ';\n        }\n\n        out += ' } } else { ' + def_customError + ' } ';\n      }\n    }\n\n    out += ' } ';\n\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_custom","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$errorKeyword","$data","$valid","$errs","$isData","$schemaValue","getData","dataPathArr","$rule","$definition","$rDef","definition","$closingBraces","$compile","$inline","$macro","$ruleValidate","$validateCode","$validateSchema","validateSchema","useCustomRule","code","compile","inline","macro","$ruleErrs","$i","$ruleErr","$asyncKeyword","async","Error","statements","validate","$it","copy","$nextValid","$wasComposite","compositeRule","$code","replace","$$outStack","push","passContext","errorPath","$parentData","$parentDataProperty","def_callRuleValidate","pop","errors","modifying","valid","undefined","keyword","createErrors","toQuotedString","messages","verbose","__err","def_customError"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ajv/lib/dotjs/custom.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += 'await ';\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) {\n      /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}