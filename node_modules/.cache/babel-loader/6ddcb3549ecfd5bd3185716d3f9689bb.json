{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelBailHookCodeFactory extends HookCodeFactory {\n  content(_ref) {\n    let {\n      onError,\n      onResult,\n      onDone\n    } = _ref;\n    let code = \"\";\n    code += `var _results = new Array(${this.options.taps.length});\\n`;\n    code += \"var _checkDone = () => {\\n\";\n    code += \"for(var i = 0; i < _results.length; i++) {\\n\";\n    code += \"var item = _results[i];\\n\";\n    code += \"if(item === undefined) return false;\\n\";\n    code += \"if(item.result !== undefined) {\\n\";\n    code += onResult(\"item.result\");\n    code += \"return true;\\n\";\n    code += \"}\\n\";\n    code += \"if(item.error) {\\n\";\n    code += onError(\"item.error\");\n    code += \"return true;\\n\";\n    code += \"}\\n\";\n    code += \"}\\n\";\n    code += \"return false;\\n\";\n    code += \"}\\n\";\n    code += this.callTapsParallel({\n      onError: (i, err, done, doneBreak) => {\n        let code = \"\";\n        code += `if(${i} < _results.length && ((_results.length = ${i + 1}), (_results[${i}] = { error: ${err} }), _checkDone())) {\\n`;\n        code += doneBreak(true);\n        code += \"} else {\\n\";\n        code += done();\n        code += \"}\\n\";\n        return code;\n      },\n      onResult: (i, result, done, doneBreak) => {\n        let code = \"\";\n        code += `if(${i} < _results.length && (${result} !== undefined && (_results.length = ${i + 1}), (_results[${i}] = { result: ${result} }), _checkDone())) {\\n`;\n        code += doneBreak(true);\n        code += \"} else {\\n\";\n        code += done();\n        code += \"}\\n\";\n        return code;\n      },\n      onTap: (i, run, done, doneBreak) => {\n        let code = \"\";\n\n        if (i > 0) {\n          code += `if(${i} >= _results.length) {\\n`;\n          code += done();\n          code += \"} else {\\n\";\n        }\n\n        code += run();\n        if (i > 0) code += \"}\\n\";\n        return code;\n      },\n      onDone\n    });\n    return code;\n  }\n\n}\n\nconst factory = new AsyncParallelBailHookCodeFactory();\n\nclass AsyncParallelBailHook extends Hook {\n  compile(options) {\n    factory.setup(this, options);\n    return factory.create(options);\n  }\n\n}\n\nObject.defineProperties(AsyncParallelBailHook.prototype, {\n  _call: {\n    value: undefined,\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = AsyncParallelBailHook;","map":{"version":3,"names":["Hook","require","HookCodeFactory","AsyncParallelBailHookCodeFactory","content","onError","onResult","onDone","code","options","taps","length","callTapsParallel","i","err","done","doneBreak","result","onTap","run","factory","AsyncParallelBailHook","compile","setup","create","Object","defineProperties","prototype","_call","value","undefined","configurable","writable","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/tapable/lib/AsyncParallelBailHook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncParallelBailHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onResult, onDone }) {\n\t\tlet code = \"\";\n\t\tcode += `var _results = new Array(${this.options.taps.length});\\n`;\n\t\tcode += \"var _checkDone = () => {\\n\";\n\t\tcode += \"for(var i = 0; i < _results.length; i++) {\\n\";\n\t\tcode += \"var item = _results[i];\\n\";\n\t\tcode += \"if(item === undefined) return false;\\n\";\n\t\tcode += \"if(item.result !== undefined) {\\n\";\n\t\tcode += onResult(\"item.result\");\n\t\tcode += \"return true;\\n\";\n\t\tcode += \"}\\n\";\n\t\tcode += \"if(item.error) {\\n\";\n\t\tcode += onError(\"item.error\");\n\t\tcode += \"return true;\\n\";\n\t\tcode += \"}\\n\";\n\t\tcode += \"}\\n\";\n\t\tcode += \"return false;\\n\";\n\t\tcode += \"}\\n\";\n\t\tcode += this.callTapsParallel({\n\t\t\tonError: (i, err, done, doneBreak) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tcode += `if(${i} < _results.length && ((_results.length = ${i +\n\t\t\t\t\t1}), (_results[${i}] = { error: ${err} }), _checkDone())) {\\n`;\n\t\t\t\tcode += doneBreak(true);\n\t\t\t\tcode += \"} else {\\n\";\n\t\t\t\tcode += done();\n\t\t\t\tcode += \"}\\n\";\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonResult: (i, result, done, doneBreak) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tcode += `if(${i} < _results.length && (${result} !== undefined && (_results.length = ${i +\n\t\t\t\t\t1}), (_results[${i}] = { result: ${result} }), _checkDone())) {\\n`;\n\t\t\t\tcode += doneBreak(true);\n\t\t\t\tcode += \"} else {\\n\";\n\t\t\t\tcode += done();\n\t\t\t\tcode += \"}\\n\";\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonTap: (i, run, done, doneBreak) => {\n\t\t\t\tlet code = \"\";\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tcode += `if(${i} >= _results.length) {\\n`;\n\t\t\t\t\tcode += done();\n\t\t\t\t\tcode += \"} else {\\n\";\n\t\t\t\t}\n\t\t\t\tcode += run();\n\t\t\t\tif (i > 0) code += \"}\\n\";\n\t\t\t\treturn code;\n\t\t\t},\n\t\t\tonDone\n\t\t});\n\t\treturn code;\n\t}\n}\n\nconst factory = new AsyncParallelBailHookCodeFactory();\n\nclass AsyncParallelBailHook extends Hook {\n\tcompile(options) {\n\t\tfactory.setup(this, options);\n\t\treturn factory.create(options);\n\t}\n}\n\nObject.defineProperties(AsyncParallelBailHook.prototype, {\n\t_call: { value: undefined, configurable: true, writable: true }\n});\n\nmodule.exports = AsyncParallelBailHook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAD,CAA/B;;AAEA,MAAME,gCAAN,SAA+CD,eAA/C,CAA+D;EAC9DE,OAAO,OAAgC;IAAA,IAA/B;MAAEC,OAAF;MAAWC,QAAX;MAAqBC;IAArB,CAA+B;IACtC,IAAIC,IAAI,GAAG,EAAX;IACAA,IAAI,IAAK,4BAA2B,KAAKC,OAAL,CAAaC,IAAb,CAAkBC,MAAO,MAA7D;IACAH,IAAI,IAAI,4BAAR;IACAA,IAAI,IAAI,8CAAR;IACAA,IAAI,IAAI,2BAAR;IACAA,IAAI,IAAI,wCAAR;IACAA,IAAI,IAAI,mCAAR;IACAA,IAAI,IAAIF,QAAQ,CAAC,aAAD,CAAhB;IACAE,IAAI,IAAI,gBAAR;IACAA,IAAI,IAAI,KAAR;IACAA,IAAI,IAAI,oBAAR;IACAA,IAAI,IAAIH,OAAO,CAAC,YAAD,CAAf;IACAG,IAAI,IAAI,gBAAR;IACAA,IAAI,IAAI,KAAR;IACAA,IAAI,IAAI,KAAR;IACAA,IAAI,IAAI,iBAAR;IACAA,IAAI,IAAI,KAAR;IACAA,IAAI,IAAI,KAAKI,gBAAL,CAAsB;MAC7BP,OAAO,EAAE,CAACQ,CAAD,EAAIC,GAAJ,EAASC,IAAT,EAAeC,SAAf,KAA6B;QACrC,IAAIR,IAAI,GAAG,EAAX;QACAA,IAAI,IAAK,MAAKK,CAAE,6CAA4CA,CAAC,GAC5D,CAAE,gBAAeA,CAAE,gBAAeC,GAAI,yBADvC;QAEAN,IAAI,IAAIQ,SAAS,CAAC,IAAD,CAAjB;QACAR,IAAI,IAAI,YAAR;QACAA,IAAI,IAAIO,IAAI,EAAZ;QACAP,IAAI,IAAI,KAAR;QACA,OAAOA,IAAP;MACA,CAV4B;MAW7BF,QAAQ,EAAE,CAACO,CAAD,EAAII,MAAJ,EAAYF,IAAZ,EAAkBC,SAAlB,KAAgC;QACzC,IAAIR,IAAI,GAAG,EAAX;QACAA,IAAI,IAAK,MAAKK,CAAE,0BAAyBI,MAAO,wCAAuCJ,CAAC,GACvF,CAAE,gBAAeA,CAAE,iBAAgBI,MAAO,yBAD3C;QAEAT,IAAI,IAAIQ,SAAS,CAAC,IAAD,CAAjB;QACAR,IAAI,IAAI,YAAR;QACAA,IAAI,IAAIO,IAAI,EAAZ;QACAP,IAAI,IAAI,KAAR;QACA,OAAOA,IAAP;MACA,CApB4B;MAqB7BU,KAAK,EAAE,CAACL,CAAD,EAAIM,GAAJ,EAASJ,IAAT,EAAeC,SAAf,KAA6B;QACnC,IAAIR,IAAI,GAAG,EAAX;;QACA,IAAIK,CAAC,GAAG,CAAR,EAAW;UACVL,IAAI,IAAK,MAAKK,CAAE,0BAAhB;UACAL,IAAI,IAAIO,IAAI,EAAZ;UACAP,IAAI,IAAI,YAAR;QACA;;QACDA,IAAI,IAAIW,GAAG,EAAX;QACA,IAAIN,CAAC,GAAG,CAAR,EAAWL,IAAI,IAAI,KAAR;QACX,OAAOA,IAAP;MACA,CA/B4B;MAgC7BD;IAhC6B,CAAtB,CAAR;IAkCA,OAAOC,IAAP;EACA;;AAtD6D;;AAyD/D,MAAMY,OAAO,GAAG,IAAIjB,gCAAJ,EAAhB;;AAEA,MAAMkB,qBAAN,SAAoCrB,IAApC,CAAyC;EACxCsB,OAAO,CAACb,OAAD,EAAU;IAChBW,OAAO,CAACG,KAAR,CAAc,IAAd,EAAoBd,OAApB;IACA,OAAOW,OAAO,CAACI,MAAR,CAAef,OAAf,CAAP;EACA;;AAJuC;;AAOzCgB,MAAM,CAACC,gBAAP,CAAwBL,qBAAqB,CAACM,SAA9C,EAAyD;EACxDC,KAAK,EAAE;IAAEC,KAAK,EAAEC,SAAT;IAAoBC,YAAY,EAAE,IAAlC;IAAwCC,QAAQ,EAAE;EAAlD;AADiD,CAAzD;AAIAC,MAAM,CAACC,OAAP,GAAiBb,qBAAjB"},"metadata":{},"sourceType":"script"}