{"ast":null,"code":"\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tracer = void 0;\n\nconst stream_1 = require(\"stream\");\n\nfunction evCommon() {\n  var hrtime = process.hrtime(); // [seconds, nanoseconds]\n\n  var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n\n  return {\n    ts,\n    pid: process.pid,\n    tid: process.pid // no meaningful tid for node.js\n\n  };\n}\n\nclass Tracer extends stream_1.Readable {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.noStream = false;\n    this.events = [];\n\n    if (typeof opts !== \"object\") {\n      throw new Error(\"Invalid options passed (must be an object)\");\n    }\n\n    if (opts.parent != null && typeof opts.parent !== \"object\") {\n      throw new Error(\"Invalid option (parent) passed (must be an object)\");\n    }\n\n    if (opts.fields != null && typeof opts.fields !== \"object\") {\n      throw new Error(\"Invalid option (fields) passed (must be an object)\");\n    }\n\n    if (opts.objectMode != null && opts.objectMode !== true && opts.objectMode !== false) {\n      throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n    }\n\n    this.noStream = opts.noStream || false;\n    this.parent = opts.parent;\n\n    if (this.parent) {\n      this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n    } else {\n      this.fields = {};\n    }\n\n    if (opts.fields) {\n      Object.assign(this.fields, opts.fields);\n    }\n\n    if (!this.fields.cat) {\n      // trace-viewer *requires* `cat`, so let's have a fallback.\n      this.fields.cat = \"default\";\n    } else if (Array.isArray(this.fields.cat)) {\n      this.fields.cat = this.fields.cat.join(\",\");\n    }\n\n    if (!this.fields.args) {\n      // trace-viewer *requires* `args`, so let's have a fallback.\n      this.fields.args = {};\n    }\n\n    if (this.parent) {\n      // TODO: Not calling Readable ctor here. Does that cause probs?\n      //      Probably if trying to pipe from the child.\n      //      Might want a serpate TracerChild class for these guys.\n      this._push = this.parent._push.bind(this.parent);\n    } else {\n      this._objectMode = Boolean(opts.objectMode);\n      var streamOpts = {\n        objectMode: this._objectMode\n      };\n\n      if (this._objectMode) {\n        this._push = this.push;\n      } else {\n        this._push = this._pushString;\n        streamOpts.encoding = \"utf8\";\n      }\n\n      stream_1.Readable.call(this, streamOpts);\n    }\n  }\n  /**\n   * If in no streamMode in order to flush out the trace\n   * you need to call flush.\n   */\n\n\n  flush() {\n    if (this.noStream === true) {\n      for (const evt of this.events) {\n        this._push(evt);\n      }\n\n      this._flush();\n    }\n  }\n\n  _read(_) {}\n\n  _pushString(ev) {\n    var separator = \"\";\n\n    if (!this.firstPush) {\n      this.push(\"[\");\n      this.firstPush = true;\n    } else {\n      separator = \",\\n\";\n    }\n\n    this.push(separator + JSON.stringify(ev), \"utf8\");\n  }\n\n  _flush() {\n    if (!this._objectMode) {\n      this.push(\"]\");\n    }\n  }\n\n  child(fields) {\n    return new Tracer({\n      parent: this,\n      fields: fields\n    });\n  }\n\n  begin(fields) {\n    return this.mkEventFunc(\"b\")(fields);\n  }\n\n  end(fields) {\n    return this.mkEventFunc(\"e\")(fields);\n  }\n\n  completeEvent(fields) {\n    return this.mkEventFunc(\"X\")(fields);\n  }\n\n  instantEvent(fields) {\n    return this.mkEventFunc(\"I\")(fields);\n  }\n\n  mkEventFunc(ph) {\n    return fields => {\n      var ev = evCommon(); // Assign the event phase.\n\n      ev.ph = ph;\n\n      if (fields) {\n        if (typeof fields === \"string\") {\n          ev.name = fields;\n        } else {\n          for (const k of Object.keys(fields)) {\n            if (k === \"cat\") {\n              ev.cat = fields.cat.join(\",\");\n            } else {\n              ev[k] = fields[k];\n            }\n          }\n        }\n      }\n\n      if (!this.noStream) {\n        this._push(ev);\n      } else {\n        this.events.push(ev);\n      }\n    };\n  }\n\n}\n\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */","map":{"version":3,"names":["Object","defineProperty","exports","value","Tracer","stream_1","require","evCommon","hrtime","process","ts","Math","round","pid","tid","Readable","constructor","opts","noStream","events","Error","parent","fields","objectMode","assign","cat","Array","isArray","join","args","_push","bind","_objectMode","Boolean","streamOpts","push","_pushString","encoding","call","flush","evt","_flush","_read","_","ev","separator","firstPush","JSON","stringify","child","begin","mkEventFunc","end","completeEvent","instantEvent","ph","name","k","keys"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/chrome-trace-event/dist/trace-event.js"],"sourcesContent":["\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst stream_1 = require(\"stream\");\nfunction evCommon() {\n    var hrtime = process.hrtime(); // [seconds, nanoseconds]\n    var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n    return {\n        ts,\n        pid: process.pid,\n        tid: process.pid // no meaningful tid for node.js\n    };\n}\nclass Tracer extends stream_1.Readable {\n    constructor(opts = {}) {\n        super();\n        this.noStream = false;\n        this.events = [];\n        if (typeof opts !== \"object\") {\n            throw new Error(\"Invalid options passed (must be an object)\");\n        }\n        if (opts.parent != null && typeof opts.parent !== \"object\") {\n            throw new Error(\"Invalid option (parent) passed (must be an object)\");\n        }\n        if (opts.fields != null && typeof opts.fields !== \"object\") {\n            throw new Error(\"Invalid option (fields) passed (must be an object)\");\n        }\n        if (opts.objectMode != null &&\n            (opts.objectMode !== true && opts.objectMode !== false)) {\n            throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n        }\n        this.noStream = opts.noStream || false;\n        this.parent = opts.parent;\n        if (this.parent) {\n            this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n        }\n        else {\n            this.fields = {};\n        }\n        if (opts.fields) {\n            Object.assign(this.fields, opts.fields);\n        }\n        if (!this.fields.cat) {\n            // trace-viewer *requires* `cat`, so let's have a fallback.\n            this.fields.cat = \"default\";\n        }\n        else if (Array.isArray(this.fields.cat)) {\n            this.fields.cat = this.fields.cat.join(\",\");\n        }\n        if (!this.fields.args) {\n            // trace-viewer *requires* `args`, so let's have a fallback.\n            this.fields.args = {};\n        }\n        if (this.parent) {\n            // TODO: Not calling Readable ctor here. Does that cause probs?\n            //      Probably if trying to pipe from the child.\n            //      Might want a serpate TracerChild class for these guys.\n            this._push = this.parent._push.bind(this.parent);\n        }\n        else {\n            this._objectMode = Boolean(opts.objectMode);\n            var streamOpts = { objectMode: this._objectMode };\n            if (this._objectMode) {\n                this._push = this.push;\n            }\n            else {\n                this._push = this._pushString;\n                streamOpts.encoding = \"utf8\";\n            }\n            stream_1.Readable.call(this, streamOpts);\n        }\n    }\n    /**\n     * If in no streamMode in order to flush out the trace\n     * you need to call flush.\n     */\n    flush() {\n        if (this.noStream === true) {\n            for (const evt of this.events) {\n                this._push(evt);\n            }\n            this._flush();\n        }\n    }\n    _read(_) { }\n    _pushString(ev) {\n        var separator = \"\";\n        if (!this.firstPush) {\n            this.push(\"[\");\n            this.firstPush = true;\n        }\n        else {\n            separator = \",\\n\";\n        }\n        this.push(separator + JSON.stringify(ev), \"utf8\");\n    }\n    _flush() {\n        if (!this._objectMode) {\n            this.push(\"]\");\n        }\n    }\n    child(fields) {\n        return new Tracer({\n            parent: this,\n            fields: fields\n        });\n    }\n    begin(fields) {\n        return this.mkEventFunc(\"b\")(fields);\n    }\n    end(fields) {\n        return this.mkEventFunc(\"e\")(fields);\n    }\n    completeEvent(fields) {\n        return this.mkEventFunc(\"X\")(fields);\n    }\n    instantEvent(fields) {\n        return this.mkEventFunc(\"I\")(fields);\n    }\n    mkEventFunc(ph) {\n        return (fields) => {\n            var ev = evCommon();\n            // Assign the event phase.\n            ev.ph = ph;\n            if (fields) {\n                if (typeof fields === \"string\") {\n                    ev.name = fields;\n                }\n                else {\n                    for (const k of Object.keys(fields)) {\n                        if (k === \"cat\") {\n                            ev.cat = fields.cat.join(\",\");\n                        }\n                        else {\n                            ev[k] = fields[k];\n                        }\n                    }\n                }\n            }\n            if (!this.noStream) {\n                this._push(ev);\n            }\n            else {\n                this.events.push(ev);\n            }\n        };\n    }\n}\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}