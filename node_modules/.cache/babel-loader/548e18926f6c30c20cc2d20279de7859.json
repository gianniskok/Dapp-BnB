{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatErrorMessage = exports.formatJsonRpcError = exports.formatJsonRpcResult = exports.formatJsonRpcRequest = exports.payloadId = void 0;\n\nconst error_1 = require(\"./error\");\n\nconst constants_1 = require(\"./constants\");\n\nfunction payloadId() {\n  const date = Date.now() * Math.pow(10, 3);\n  const extra = Math.floor(Math.random() * Math.pow(10, 3));\n  return date + extra;\n}\n\nexports.payloadId = payloadId;\n\nfunction formatJsonRpcRequest(method, params, id) {\n  return {\n    id: id || payloadId(),\n    jsonrpc: \"2.0\",\n    method,\n    params\n  };\n}\n\nexports.formatJsonRpcRequest = formatJsonRpcRequest;\n\nfunction formatJsonRpcResult(id, result) {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    result\n  };\n}\n\nexports.formatJsonRpcResult = formatJsonRpcResult;\n\nfunction formatJsonRpcError(id, error) {\n  return {\n    id,\n    jsonrpc: \"2.0\",\n    error: formatErrorMessage(error)\n  };\n}\n\nexports.formatJsonRpcError = formatJsonRpcError;\n\nfunction formatErrorMessage(error) {\n  if (typeof error === \"undefined\") {\n    return error_1.getError(constants_1.INTERNAL_ERROR);\n  }\n\n  if (typeof error === \"string\") {\n    error = Object.assign(Object.assign({}, error_1.getError(constants_1.SERVER_ERROR)), {\n      message: error\n    });\n  }\n\n  if (error_1.isReservedErrorCode(error.code)) {\n    error = error_1.getErrorByCode(error.code);\n  }\n\n  if (!error_1.isServerErrorCode(error.code)) {\n    throw new Error(\"Error code is not in server code range\");\n  }\n\n  return error;\n}\n\nexports.formatErrorMessage = formatErrorMessage;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAMA;;AAQA,SAAgBA,SAAhB,GAAyB;EACvB,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,CAA1B;EACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgBJ,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAAb,CAA3B,CAAd;EACA,OAAOJ,IAAI,GAAGK,KAAd;AACD;;AAJDG;;AAMA,SAAgBC,oBAAhB,CACEC,MADF,EAEEC,MAFF,EAGEC,EAHF,EAGa;EAEX,OAAO;IACLA,EAAE,EAAEA,EAAE,IAAIb,SAAS,EADd;IAELc,OAAO,EAAE,KAFJ;IAGLH,MAHK;IAILC;EAJK,CAAP;AAMD;;AAXDH;;AAaA,SAAgBM,mBAAhB,CACEF,EADF,EAEEG,MAFF,EAEW;EAET,OAAO;IACLH,EADK;IAELC,OAAO,EAAE,KAFJ;IAGLE;EAHK,CAAP;AAKD;;AATDP;;AAWA,SAAgBQ,kBAAhB,CACEJ,EADF,EAEEK,KAFF,EAEgC;EAE9B,OAAO;IACLL,EADK;IAELC,OAAO,EAAE,KAFJ;IAGLI,KAAK,EAAEC,kBAAkB,CAACD,KAAD;EAHpB,CAAP;AAKD;;AATDT;;AAWA,SAAgBU,kBAAhB,CACED,KADF,EACgC;EAE9B,IAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;IAChC,OAAOE,iBAASC,0BAAT,CAAP;EACD;;EACD,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;IAC7BA,KAAK,mCACAE,iBAASC,wBAAT,CADA,GACsB;MACzBC,OAAO,EAAEJ;IADgB,CADtB,CAAL;EAID;;EACD,IAAIE,4BAAoBF,KAAK,CAACK,IAA1B,CAAJ,EAAqC;IACnCL,KAAK,GAAGE,uBAAeF,KAAK,CAACK,IAArB,CAAR;EACD;;EACD,IAAI,CAACH,0BAAkBF,KAAK,CAACK,IAAxB,CAAL,EAAoC;IAClC,MAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;EACD;;EACD,OAAON,KAAP;AACD;;AAnBDT","names":["payloadId","date","Date","now","Math","pow","extra","floor","random","exports","formatJsonRpcRequest","method","params","id","jsonrpc","formatJsonRpcResult","result","formatJsonRpcError","error","formatErrorMessage","error_1","constants_1","message","code","Error"],"sourceRoot":"","sources":["../../src/format.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}