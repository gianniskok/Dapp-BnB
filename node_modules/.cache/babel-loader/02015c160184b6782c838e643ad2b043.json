{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\n\n\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\n\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\n\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n\n  if (nan === true) {\n    node.nan = true;\n  }\n\n  if (inf === true) {\n    node.inf = true;\n  }\n\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isTypeOf","t","n","type","assertTypeOf","Error","undefined","module","id","fields","metadata","length","node","moduleMetadata","sections","functionNames","localNames","producers","moduleNameMetadata","value","functionNameMetadata","index","localNameMetadata","localIndex","functionIndex","binaryModule","blob","quoteModule","string","sectionMetadata","section","startOffset","size","vectorOfSize","producersSectionMetadata","producerMetadata","language","processedBy","sdk","producerMetadataVersionedName","name","version","loopInstruction","label","resulttype","instr","object","args","namedArgs","Object","keys","ifInstruction","testLabel","test","result","consequent","alternate","stringLiteral","numberLiteral","raw","longNumberLiteral","floatLiteral","nan","inf","elem","table","offset","funcs","indexInFuncSection","valtypeLiteral","typeInstruction","functype","start","globalType","valtype","mutability","leadingComment","blockComment","data","memoryIndex","init","global","elementType","limits","elements","memory","funcImportDescr","signature","moduleImport","descr","moduleExportDescr","exportType","moduleExport","limit","min","max","params","results","program","body","identifier","blockInstruction","callInstruction","instrArgs","numeric","callIndirectInstruction","intrs","byteArray","values","func","isExternal","internalBrUnless","target","internalGoto","internalCallExtern","internalEndAndReturn","isModule","isModuleMetadata","isModuleNameMetadata","isFunctionNameMetadata","isLocalNameMetadata","isBinaryModule","isQuoteModule","isSectionMetadata","isProducersSectionMetadata","isProducerMetadata","isProducerMetadataVersionedName","isLoopInstruction","isInstr","isIfInstruction","isStringLiteral","isNumberLiteral","isLongNumberLiteral","isFloatLiteral","isElem","isIndexInFuncSection","isValtypeLiteral","isTypeInstruction","isStart","isGlobalType","isLeadingComment","isBlockComment","isData","isGlobal","isTable","isMemory","isFuncImportDescr","isModuleImport","isModuleExportDescr","isModuleExport","isLimit","isSignature","isProgram","isIdentifier","isBlockInstruction","isCallInstruction","isCallIndirectInstruction","isByteArray","isFunc","isInternalBrUnless","isInternalGoto","isInternalCallExtern","isInternalEndAndReturn","isNode","isBlock","isInstruction","isExpression","isNumericLiteral","isImportDescr","isIntrinsic","assertModule","assertModuleMetadata","assertModuleNameMetadata","assertFunctionNameMetadata","assertLocalNameMetadata","assertBinaryModule","assertQuoteModule","assertSectionMetadata","assertProducersSectionMetadata","assertProducerMetadata","assertProducerMetadataVersionedName","assertLoopInstruction","assertInstr","assertIfInstruction","assertStringLiteral","assertNumberLiteral","assertLongNumberLiteral","assertFloatLiteral","assertElem","assertIndexInFuncSection","assertValtypeLiteral","assertTypeInstruction","assertStart","assertGlobalType","assertLeadingComment","assertBlockComment","assertData","assertGlobal","assertTable","assertMemory","assertFuncImportDescr","assertModuleImport","assertModuleExportDescr","assertModuleExport","assertLimit","assertSignature","assertProgram","assertIdentifier","assertBlockInstruction","assertCallInstruction","assertCallIndirectInstruction","assertByteArray","assertFunc","assertInternalBrUnless","assertInternalGoto","assertInternalCallExtern","assertInternalEndAndReturn","unionTypesMap","Module","ModuleMetadata","ModuleNameMetadata","FunctionNameMetadata","LocalNameMetadata","BinaryModule","QuoteModule","SectionMetadata","ProducersSectionMetadata","ProducerMetadata","ProducerMetadataVersionedName","LoopInstruction","Instr","IfInstruction","StringLiteral","NumberLiteral","LongNumberLiteral","FloatLiteral","Elem","IndexInFuncSection","ValtypeLiteral","TypeInstruction","Start","GlobalType","LeadingComment","BlockComment","Data","Global","Table","Memory","FuncImportDescr","ModuleImport","ModuleExportDescr","ModuleExport","Limit","Signature","Program","Identifier","BlockInstruction","CallInstruction","CallIndirectInstruction","ByteArray","Func","InternalBrUnless","InternalGoto","InternalCallExtern","InternalEndAndReturn","nodeAndUnionTypes"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/@webassemblyjs/ast/esm/nodes.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// THIS FILE IS AUTOGENERATED\n// see scripts/generateNodeUtils.js\nfunction isTypeOf(t) {\n  return function (n) {\n    return n.type === t;\n  };\n}\n\nfunction assertTypeOf(t) {\n  return function (n) {\n    return function () {\n      if (!(n.type === t)) {\n        throw new Error('n.type === t' + \" error: \" + (undefined || \"unknown\"));\n      }\n    }();\n  };\n}\n\nexport function module(id, fields, metadata) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(fields) === \"object\" && typeof fields.length !== \"undefined\")) {\n    throw new Error('typeof fields === \"object\" && typeof fields.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Module\",\n    id: id,\n    fields: fields\n  };\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function moduleMetadata(sections, functionNames, localNames, producers) {\n  if (!(_typeof(sections) === \"object\" && typeof sections.length !== \"undefined\")) {\n    throw new Error('typeof sections === \"object\" && typeof sections.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (functionNames !== null && functionNames !== undefined) {\n    if (!(_typeof(functionNames) === \"object\" && typeof functionNames.length !== \"undefined\")) {\n      throw new Error('typeof functionNames === \"object\" && typeof functionNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (localNames !== null && localNames !== undefined) {\n    if (!(_typeof(localNames) === \"object\" && typeof localNames.length !== \"undefined\")) {\n      throw new Error('typeof localNames === \"object\" && typeof localNames.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  if (producers !== null && producers !== undefined) {\n    if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n      throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"ModuleMetadata\",\n    sections: sections\n  };\n\n  if (typeof functionNames !== \"undefined\" && functionNames.length > 0) {\n    node.functionNames = functionNames;\n  }\n\n  if (typeof localNames !== \"undefined\" && localNames.length > 0) {\n    node.localNames = localNames;\n  }\n\n  if (typeof producers !== \"undefined\" && producers.length > 0) {\n    node.producers = producers;\n  }\n\n  return node;\n}\nexport function moduleNameMetadata(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleNameMetadata\",\n    value: value\n  };\n  return node;\n}\nexport function functionNameMetadata(value, index) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof index === \"number\")) {\n    throw new Error('typeof index === \"number\"' + \" error: \" + (\"Argument index must be of type number, given: \" + _typeof(index) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FunctionNameMetadata\",\n    value: value,\n    index: index\n  };\n  return node;\n}\nexport function localNameMetadata(value, localIndex, functionIndex) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof localIndex === \"number\")) {\n    throw new Error('typeof localIndex === \"number\"' + \" error: \" + (\"Argument localIndex must be of type number, given: \" + _typeof(localIndex) || \"unknown\"));\n  }\n\n  if (!(typeof functionIndex === \"number\")) {\n    throw new Error('typeof functionIndex === \"number\"' + \" error: \" + (\"Argument functionIndex must be of type number, given: \" + _typeof(functionIndex) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LocalNameMetadata\",\n    value: value,\n    localIndex: localIndex,\n    functionIndex: functionIndex\n  };\n  return node;\n}\nexport function binaryModule(id, blob) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(blob) === \"object\" && typeof blob.length !== \"undefined\")) {\n    throw new Error('typeof blob === \"object\" && typeof blob.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BinaryModule\",\n    id: id,\n    blob: blob\n  };\n  return node;\n}\nexport function quoteModule(id, string) {\n  if (id !== null && id !== undefined) {\n    if (!(typeof id === \"string\")) {\n      throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n    }\n  }\n\n  if (!(_typeof(string) === \"object\" && typeof string.length !== \"undefined\")) {\n    throw new Error('typeof string === \"object\" && typeof string.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"QuoteModule\",\n    id: id,\n    string: string\n  };\n  return node;\n}\nexport function sectionMetadata(section, startOffset, size, vectorOfSize) {\n  if (!(typeof startOffset === \"number\")) {\n    throw new Error('typeof startOffset === \"number\"' + \" error: \" + (\"Argument startOffset must be of type number, given: \" + _typeof(startOffset) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"SectionMetadata\",\n    section: section,\n    startOffset: startOffset,\n    size: size,\n    vectorOfSize: vectorOfSize\n  };\n  return node;\n}\nexport function producersSectionMetadata(producers) {\n  if (!(_typeof(producers) === \"object\" && typeof producers.length !== \"undefined\")) {\n    throw new Error('typeof producers === \"object\" && typeof producers.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducersSectionMetadata\",\n    producers: producers\n  };\n  return node;\n}\nexport function producerMetadata(language, processedBy, sdk) {\n  if (!(_typeof(language) === \"object\" && typeof language.length !== \"undefined\")) {\n    throw new Error('typeof language === \"object\" && typeof language.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(processedBy) === \"object\" && typeof processedBy.length !== \"undefined\")) {\n    throw new Error('typeof processedBy === \"object\" && typeof processedBy.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(sdk) === \"object\" && typeof sdk.length !== \"undefined\")) {\n    throw new Error('typeof sdk === \"object\" && typeof sdk.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadata\",\n    language: language,\n    processedBy: processedBy,\n    sdk: sdk\n  };\n  return node;\n}\nexport function producerMetadataVersionedName(name, version) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  if (!(typeof version === \"string\")) {\n    throw new Error('typeof version === \"string\"' + \" error: \" + (\"Argument version must be of type string, given: \" + _typeof(version) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ProducerMetadataVersionedName\",\n    name: name,\n    version: version\n  };\n  return node;\n}\nexport function loopInstruction(label, resulttype, instr) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LoopInstruction\",\n    id: \"loop\",\n    label: label,\n    resulttype: resulttype,\n    instr: instr\n  };\n  return node;\n}\nexport function instr(id, object, args, namedArgs) {\n  if (!(typeof id === \"string\")) {\n    throw new Error('typeof id === \"string\"' + \" error: \" + (\"Argument id must be of type string, given: \" + _typeof(id) || \"unknown\"));\n  }\n\n  if (!(_typeof(args) === \"object\" && typeof args.length !== \"undefined\")) {\n    throw new Error('typeof args === \"object\" && typeof args.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Instr\",\n    id: id,\n    args: args\n  };\n\n  if (typeof object !== \"undefined\") {\n    node.object = object;\n  }\n\n  if (typeof namedArgs !== \"undefined\" && Object.keys(namedArgs).length !== 0) {\n    node.namedArgs = namedArgs;\n  }\n\n  return node;\n}\nexport function ifInstruction(testLabel, test, result, consequent, alternate) {\n  if (!(_typeof(test) === \"object\" && typeof test.length !== \"undefined\")) {\n    throw new Error('typeof test === \"object\" && typeof test.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(consequent) === \"object\" && typeof consequent.length !== \"undefined\")) {\n    throw new Error('typeof consequent === \"object\" && typeof consequent.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(alternate) === \"object\" && typeof alternate.length !== \"undefined\")) {\n    throw new Error('typeof alternate === \"object\" && typeof alternate.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"IfInstruction\",\n    id: \"if\",\n    testLabel: testLabel,\n    test: test,\n    result: result,\n    consequent: consequent,\n    alternate: alternate\n  };\n  return node;\n}\nexport function stringLiteral(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"StringLiteral\",\n    value: value\n  };\n  return node;\n}\nexport function numberLiteral(value, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"NumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function longNumberLiteral(value, raw) {\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LongNumberLiteral\",\n    value: value,\n    raw: raw\n  };\n  return node;\n}\nexport function floatLiteral(value, nan, inf, raw) {\n  if (!(typeof value === \"number\")) {\n    throw new Error('typeof value === \"number\"' + \" error: \" + (\"Argument value must be of type number, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (nan !== null && nan !== undefined) {\n    if (!(typeof nan === \"boolean\")) {\n      throw new Error('typeof nan === \"boolean\"' + \" error: \" + (\"Argument nan must be of type boolean, given: \" + _typeof(nan) || \"unknown\"));\n    }\n  }\n\n  if (inf !== null && inf !== undefined) {\n    if (!(typeof inf === \"boolean\")) {\n      throw new Error('typeof inf === \"boolean\"' + \" error: \" + (\"Argument inf must be of type boolean, given: \" + _typeof(inf) || \"unknown\"));\n    }\n  }\n\n  if (!(typeof raw === \"string\")) {\n    throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"FloatLiteral\",\n    value: value,\n    raw: raw\n  };\n\n  if (nan === true) {\n    node.nan = true;\n  }\n\n  if (inf === true) {\n    node.inf = true;\n  }\n\n  return node;\n}\nexport function elem(table, offset, funcs) {\n  if (!(_typeof(offset) === \"object\" && typeof offset.length !== \"undefined\")) {\n    throw new Error('typeof offset === \"object\" && typeof offset.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(funcs) === \"object\" && typeof funcs.length !== \"undefined\")) {\n    throw new Error('typeof funcs === \"object\" && typeof funcs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Elem\",\n    table: table,\n    offset: offset,\n    funcs: funcs\n  };\n  return node;\n}\nexport function indexInFuncSection(index) {\n  var node = {\n    type: \"IndexInFuncSection\",\n    index: index\n  };\n  return node;\n}\nexport function valtypeLiteral(name) {\n  var node = {\n    type: \"ValtypeLiteral\",\n    name: name\n  };\n  return node;\n}\nexport function typeInstruction(id, functype) {\n  var node = {\n    type: \"TypeInstruction\",\n    id: id,\n    functype: functype\n  };\n  return node;\n}\nexport function start(index) {\n  var node = {\n    type: \"Start\",\n    index: index\n  };\n  return node;\n}\nexport function globalType(valtype, mutability) {\n  var node = {\n    type: \"GlobalType\",\n    valtype: valtype,\n    mutability: mutability\n  };\n  return node;\n}\nexport function leadingComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"LeadingComment\",\n    value: value\n  };\n  return node;\n}\nexport function blockComment(value) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockComment\",\n    value: value\n  };\n  return node;\n}\nexport function data(memoryIndex, offset, init) {\n  var node = {\n    type: \"Data\",\n    memoryIndex: memoryIndex,\n    offset: offset,\n    init: init\n  };\n  return node;\n}\nexport function global(globalType, init, name) {\n  if (!(_typeof(init) === \"object\" && typeof init.length !== \"undefined\")) {\n    throw new Error('typeof init === \"object\" && typeof init.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Global\",\n    globalType: globalType,\n    init: init,\n    name: name\n  };\n  return node;\n}\nexport function table(elementType, limits, name, elements) {\n  if (!(limits.type === \"Limit\")) {\n    throw new Error('limits.type === \"Limit\"' + \" error: \" + (\"Argument limits must be of type Limit, given: \" + limits.type || \"unknown\"));\n  }\n\n  if (elements !== null && elements !== undefined) {\n    if (!(_typeof(elements) === \"object\" && typeof elements.length !== \"undefined\")) {\n      throw new Error('typeof elements === \"object\" && typeof elements.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Table\",\n    elementType: elementType,\n    limits: limits,\n    name: name\n  };\n\n  if (typeof elements !== \"undefined\" && elements.length > 0) {\n    node.elements = elements;\n  }\n\n  return node;\n}\nexport function memory(limits, id) {\n  var node = {\n    type: \"Memory\",\n    limits: limits,\n    id: id\n  };\n  return node;\n}\nexport function funcImportDescr(id, signature) {\n  var node = {\n    type: \"FuncImportDescr\",\n    id: id,\n    signature: signature\n  };\n  return node;\n}\nexport function moduleImport(module, name, descr) {\n  if (!(typeof module === \"string\")) {\n    throw new Error('typeof module === \"string\"' + \" error: \" + (\"Argument module must be of type string, given: \" + _typeof(module) || \"unknown\"));\n  }\n\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleImport\",\n    module: module,\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function moduleExportDescr(exportType, id) {\n  var node = {\n    type: \"ModuleExportDescr\",\n    exportType: exportType,\n    id: id\n  };\n  return node;\n}\nexport function moduleExport(name, descr) {\n  if (!(typeof name === \"string\")) {\n    throw new Error('typeof name === \"string\"' + \" error: \" + (\"Argument name must be of type string, given: \" + _typeof(name) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ModuleExport\",\n    name: name,\n    descr: descr\n  };\n  return node;\n}\nexport function limit(min, max) {\n  if (!(typeof min === \"number\")) {\n    throw new Error('typeof min === \"number\"' + \" error: \" + (\"Argument min must be of type number, given: \" + _typeof(min) || \"unknown\"));\n  }\n\n  if (max !== null && max !== undefined) {\n    if (!(typeof max === \"number\")) {\n      throw new Error('typeof max === \"number\"' + \" error: \" + (\"Argument max must be of type number, given: \" + _typeof(max) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Limit\",\n    min: min\n  };\n\n  if (typeof max !== \"undefined\") {\n    node.max = max;\n  }\n\n  return node;\n}\nexport function signature(params, results) {\n  if (!(_typeof(params) === \"object\" && typeof params.length !== \"undefined\")) {\n    throw new Error('typeof params === \"object\" && typeof params.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (!(_typeof(results) === \"object\" && typeof results.length !== \"undefined\")) {\n    throw new Error('typeof results === \"object\" && typeof results.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Signature\",\n    params: params,\n    results: results\n  };\n  return node;\n}\nexport function program(body) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"Program\",\n    body: body\n  };\n  return node;\n}\nexport function identifier(value, raw) {\n  if (!(typeof value === \"string\")) {\n    throw new Error('typeof value === \"string\"' + \" error: \" + (\"Argument value must be of type string, given: \" + _typeof(value) || \"unknown\"));\n  }\n\n  if (raw !== null && raw !== undefined) {\n    if (!(typeof raw === \"string\")) {\n      throw new Error('typeof raw === \"string\"' + \" error: \" + (\"Argument raw must be of type string, given: \" + _typeof(raw) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Identifier\",\n    value: value\n  };\n\n  if (typeof raw !== \"undefined\") {\n    node.raw = raw;\n  }\n\n  return node;\n}\nexport function blockInstruction(label, instr, result) {\n  if (!(_typeof(instr) === \"object\" && typeof instr.length !== \"undefined\")) {\n    throw new Error('typeof instr === \"object\" && typeof instr.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"BlockInstruction\",\n    id: \"block\",\n    label: label,\n    instr: instr,\n    result: result\n  };\n  return node;\n}\nexport function callInstruction(index, instrArgs, numeric) {\n  if (instrArgs !== null && instrArgs !== undefined) {\n    if (!(_typeof(instrArgs) === \"object\" && typeof instrArgs.length !== \"undefined\")) {\n      throw new Error('typeof instrArgs === \"object\" && typeof instrArgs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallInstruction\",\n    id: \"call\",\n    index: index\n  };\n\n  if (typeof instrArgs !== \"undefined\" && instrArgs.length > 0) {\n    node.instrArgs = instrArgs;\n  }\n\n  if (typeof numeric !== \"undefined\") {\n    node.numeric = numeric;\n  }\n\n  return node;\n}\nexport function callIndirectInstruction(signature, intrs) {\n  if (intrs !== null && intrs !== undefined) {\n    if (!(_typeof(intrs) === \"object\" && typeof intrs.length !== \"undefined\")) {\n      throw new Error('typeof intrs === \"object\" && typeof intrs.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"CallIndirectInstruction\",\n    id: \"call_indirect\",\n    signature: signature\n  };\n\n  if (typeof intrs !== \"undefined\" && intrs.length > 0) {\n    node.intrs = intrs;\n  }\n\n  return node;\n}\nexport function byteArray(values) {\n  if (!(_typeof(values) === \"object\" && typeof values.length !== \"undefined\")) {\n    throw new Error('typeof values === \"object\" && typeof values.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var node = {\n    type: \"ByteArray\",\n    values: values\n  };\n  return node;\n}\nexport function func(name, signature, body, isExternal, metadata) {\n  if (!(_typeof(body) === \"object\" && typeof body.length !== \"undefined\")) {\n    throw new Error('typeof body === \"object\" && typeof body.length !== \"undefined\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  if (isExternal !== null && isExternal !== undefined) {\n    if (!(typeof isExternal === \"boolean\")) {\n      throw new Error('typeof isExternal === \"boolean\"' + \" error: \" + (\"Argument isExternal must be of type boolean, given: \" + _typeof(isExternal) || \"unknown\"));\n    }\n  }\n\n  var node = {\n    type: \"Func\",\n    name: name,\n    signature: signature,\n    body: body\n  };\n\n  if (isExternal === true) {\n    node.isExternal = true;\n  }\n\n  if (typeof metadata !== \"undefined\") {\n    node.metadata = metadata;\n  }\n\n  return node;\n}\nexport function internalBrUnless(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalBrUnless\",\n    target: target\n  };\n  return node;\n}\nexport function internalGoto(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalGoto\",\n    target: target\n  };\n  return node;\n}\nexport function internalCallExtern(target) {\n  if (!(typeof target === \"number\")) {\n    throw new Error('typeof target === \"number\"' + \" error: \" + (\"Argument target must be of type number, given: \" + _typeof(target) || \"unknown\"));\n  }\n\n  var node = {\n    type: \"InternalCallExtern\",\n    target: target\n  };\n  return node;\n}\nexport function internalEndAndReturn() {\n  var node = {\n    type: \"InternalEndAndReturn\"\n  };\n  return node;\n}\nexport var isModule = isTypeOf(\"Module\");\nexport var isModuleMetadata = isTypeOf(\"ModuleMetadata\");\nexport var isModuleNameMetadata = isTypeOf(\"ModuleNameMetadata\");\nexport var isFunctionNameMetadata = isTypeOf(\"FunctionNameMetadata\");\nexport var isLocalNameMetadata = isTypeOf(\"LocalNameMetadata\");\nexport var isBinaryModule = isTypeOf(\"BinaryModule\");\nexport var isQuoteModule = isTypeOf(\"QuoteModule\");\nexport var isSectionMetadata = isTypeOf(\"SectionMetadata\");\nexport var isProducersSectionMetadata = isTypeOf(\"ProducersSectionMetadata\");\nexport var isProducerMetadata = isTypeOf(\"ProducerMetadata\");\nexport var isProducerMetadataVersionedName = isTypeOf(\"ProducerMetadataVersionedName\");\nexport var isLoopInstruction = isTypeOf(\"LoopInstruction\");\nexport var isInstr = isTypeOf(\"Instr\");\nexport var isIfInstruction = isTypeOf(\"IfInstruction\");\nexport var isStringLiteral = isTypeOf(\"StringLiteral\");\nexport var isNumberLiteral = isTypeOf(\"NumberLiteral\");\nexport var isLongNumberLiteral = isTypeOf(\"LongNumberLiteral\");\nexport var isFloatLiteral = isTypeOf(\"FloatLiteral\");\nexport var isElem = isTypeOf(\"Elem\");\nexport var isIndexInFuncSection = isTypeOf(\"IndexInFuncSection\");\nexport var isValtypeLiteral = isTypeOf(\"ValtypeLiteral\");\nexport var isTypeInstruction = isTypeOf(\"TypeInstruction\");\nexport var isStart = isTypeOf(\"Start\");\nexport var isGlobalType = isTypeOf(\"GlobalType\");\nexport var isLeadingComment = isTypeOf(\"LeadingComment\");\nexport var isBlockComment = isTypeOf(\"BlockComment\");\nexport var isData = isTypeOf(\"Data\");\nexport var isGlobal = isTypeOf(\"Global\");\nexport var isTable = isTypeOf(\"Table\");\nexport var isMemory = isTypeOf(\"Memory\");\nexport var isFuncImportDescr = isTypeOf(\"FuncImportDescr\");\nexport var isModuleImport = isTypeOf(\"ModuleImport\");\nexport var isModuleExportDescr = isTypeOf(\"ModuleExportDescr\");\nexport var isModuleExport = isTypeOf(\"ModuleExport\");\nexport var isLimit = isTypeOf(\"Limit\");\nexport var isSignature = isTypeOf(\"Signature\");\nexport var isProgram = isTypeOf(\"Program\");\nexport var isIdentifier = isTypeOf(\"Identifier\");\nexport var isBlockInstruction = isTypeOf(\"BlockInstruction\");\nexport var isCallInstruction = isTypeOf(\"CallInstruction\");\nexport var isCallIndirectInstruction = isTypeOf(\"CallIndirectInstruction\");\nexport var isByteArray = isTypeOf(\"ByteArray\");\nexport var isFunc = isTypeOf(\"Func\");\nexport var isInternalBrUnless = isTypeOf(\"InternalBrUnless\");\nexport var isInternalGoto = isTypeOf(\"InternalGoto\");\nexport var isInternalCallExtern = isTypeOf(\"InternalCallExtern\");\nexport var isInternalEndAndReturn = isTypeOf(\"InternalEndAndReturn\");\nexport var isNode = function isNode(node) {\n  return isModule(node) || isModuleMetadata(node) || isModuleNameMetadata(node) || isFunctionNameMetadata(node) || isLocalNameMetadata(node) || isBinaryModule(node) || isQuoteModule(node) || isSectionMetadata(node) || isProducersSectionMetadata(node) || isProducerMetadata(node) || isProducerMetadataVersionedName(node) || isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isElem(node) || isIndexInFuncSection(node) || isValtypeLiteral(node) || isTypeInstruction(node) || isStart(node) || isGlobalType(node) || isLeadingComment(node) || isBlockComment(node) || isData(node) || isGlobal(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node) || isModuleImport(node) || isModuleExportDescr(node) || isModuleExport(node) || isLimit(node) || isSignature(node) || isProgram(node) || isIdentifier(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node) || isByteArray(node) || isFunc(node) || isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var isBlock = function isBlock(node) {\n  return isLoopInstruction(node) || isBlockInstruction(node) || isFunc(node);\n};\nexport var isInstruction = function isInstruction(node) {\n  return isLoopInstruction(node) || isInstr(node) || isIfInstruction(node) || isTypeInstruction(node) || isBlockInstruction(node) || isCallInstruction(node) || isCallIndirectInstruction(node);\n};\nexport var isExpression = function isExpression(node) {\n  return isInstr(node) || isStringLiteral(node) || isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node) || isValtypeLiteral(node) || isIdentifier(node);\n};\nexport var isNumericLiteral = function isNumericLiteral(node) {\n  return isNumberLiteral(node) || isLongNumberLiteral(node) || isFloatLiteral(node);\n};\nexport var isImportDescr = function isImportDescr(node) {\n  return isGlobalType(node) || isTable(node) || isMemory(node) || isFuncImportDescr(node);\n};\nexport var isIntrinsic = function isIntrinsic(node) {\n  return isInternalBrUnless(node) || isInternalGoto(node) || isInternalCallExtern(node) || isInternalEndAndReturn(node);\n};\nexport var assertModule = assertTypeOf(\"Module\");\nexport var assertModuleMetadata = assertTypeOf(\"ModuleMetadata\");\nexport var assertModuleNameMetadata = assertTypeOf(\"ModuleNameMetadata\");\nexport var assertFunctionNameMetadata = assertTypeOf(\"FunctionNameMetadata\");\nexport var assertLocalNameMetadata = assertTypeOf(\"LocalNameMetadata\");\nexport var assertBinaryModule = assertTypeOf(\"BinaryModule\");\nexport var assertQuoteModule = assertTypeOf(\"QuoteModule\");\nexport var assertSectionMetadata = assertTypeOf(\"SectionMetadata\");\nexport var assertProducersSectionMetadata = assertTypeOf(\"ProducersSectionMetadata\");\nexport var assertProducerMetadata = assertTypeOf(\"ProducerMetadata\");\nexport var assertProducerMetadataVersionedName = assertTypeOf(\"ProducerMetadataVersionedName\");\nexport var assertLoopInstruction = assertTypeOf(\"LoopInstruction\");\nexport var assertInstr = assertTypeOf(\"Instr\");\nexport var assertIfInstruction = assertTypeOf(\"IfInstruction\");\nexport var assertStringLiteral = assertTypeOf(\"StringLiteral\");\nexport var assertNumberLiteral = assertTypeOf(\"NumberLiteral\");\nexport var assertLongNumberLiteral = assertTypeOf(\"LongNumberLiteral\");\nexport var assertFloatLiteral = assertTypeOf(\"FloatLiteral\");\nexport var assertElem = assertTypeOf(\"Elem\");\nexport var assertIndexInFuncSection = assertTypeOf(\"IndexInFuncSection\");\nexport var assertValtypeLiteral = assertTypeOf(\"ValtypeLiteral\");\nexport var assertTypeInstruction = assertTypeOf(\"TypeInstruction\");\nexport var assertStart = assertTypeOf(\"Start\");\nexport var assertGlobalType = assertTypeOf(\"GlobalType\");\nexport var assertLeadingComment = assertTypeOf(\"LeadingComment\");\nexport var assertBlockComment = assertTypeOf(\"BlockComment\");\nexport var assertData = assertTypeOf(\"Data\");\nexport var assertGlobal = assertTypeOf(\"Global\");\nexport var assertTable = assertTypeOf(\"Table\");\nexport var assertMemory = assertTypeOf(\"Memory\");\nexport var assertFuncImportDescr = assertTypeOf(\"FuncImportDescr\");\nexport var assertModuleImport = assertTypeOf(\"ModuleImport\");\nexport var assertModuleExportDescr = assertTypeOf(\"ModuleExportDescr\");\nexport var assertModuleExport = assertTypeOf(\"ModuleExport\");\nexport var assertLimit = assertTypeOf(\"Limit\");\nexport var assertSignature = assertTypeOf(\"Signature\");\nexport var assertProgram = assertTypeOf(\"Program\");\nexport var assertIdentifier = assertTypeOf(\"Identifier\");\nexport var assertBlockInstruction = assertTypeOf(\"BlockInstruction\");\nexport var assertCallInstruction = assertTypeOf(\"CallInstruction\");\nexport var assertCallIndirectInstruction = assertTypeOf(\"CallIndirectInstruction\");\nexport var assertByteArray = assertTypeOf(\"ByteArray\");\nexport var assertFunc = assertTypeOf(\"Func\");\nexport var assertInternalBrUnless = assertTypeOf(\"InternalBrUnless\");\nexport var assertInternalGoto = assertTypeOf(\"InternalGoto\");\nexport var assertInternalCallExtern = assertTypeOf(\"InternalCallExtern\");\nexport var assertInternalEndAndReturn = assertTypeOf(\"InternalEndAndReturn\");\nexport var unionTypesMap = {\n  Module: [\"Node\"],\n  ModuleMetadata: [\"Node\"],\n  ModuleNameMetadata: [\"Node\"],\n  FunctionNameMetadata: [\"Node\"],\n  LocalNameMetadata: [\"Node\"],\n  BinaryModule: [\"Node\"],\n  QuoteModule: [\"Node\"],\n  SectionMetadata: [\"Node\"],\n  ProducersSectionMetadata: [\"Node\"],\n  ProducerMetadata: [\"Node\"],\n  ProducerMetadataVersionedName: [\"Node\"],\n  LoopInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  Instr: [\"Node\", \"Expression\", \"Instruction\"],\n  IfInstruction: [\"Node\", \"Instruction\"],\n  StringLiteral: [\"Node\", \"Expression\"],\n  NumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  LongNumberLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  FloatLiteral: [\"Node\", \"NumericLiteral\", \"Expression\"],\n  Elem: [\"Node\"],\n  IndexInFuncSection: [\"Node\"],\n  ValtypeLiteral: [\"Node\", \"Expression\"],\n  TypeInstruction: [\"Node\", \"Instruction\"],\n  Start: [\"Node\"],\n  GlobalType: [\"Node\", \"ImportDescr\"],\n  LeadingComment: [\"Node\"],\n  BlockComment: [\"Node\"],\n  Data: [\"Node\"],\n  Global: [\"Node\"],\n  Table: [\"Node\", \"ImportDescr\"],\n  Memory: [\"Node\", \"ImportDescr\"],\n  FuncImportDescr: [\"Node\", \"ImportDescr\"],\n  ModuleImport: [\"Node\"],\n  ModuleExportDescr: [\"Node\"],\n  ModuleExport: [\"Node\"],\n  Limit: [\"Node\"],\n  Signature: [\"Node\"],\n  Program: [\"Node\"],\n  Identifier: [\"Node\", \"Expression\"],\n  BlockInstruction: [\"Node\", \"Block\", \"Instruction\"],\n  CallInstruction: [\"Node\", \"Instruction\"],\n  CallIndirectInstruction: [\"Node\", \"Instruction\"],\n  ByteArray: [\"Node\"],\n  Func: [\"Node\", \"Block\"],\n  InternalBrUnless: [\"Node\", \"Intrinsic\"],\n  InternalGoto: [\"Node\", \"Intrinsic\"],\n  InternalCallExtern: [\"Node\", \"Intrinsic\"],\n  InternalEndAndReturn: [\"Node\", \"Intrinsic\"]\n};\nexport var nodeAndUnionTypes = [\"Module\", \"ModuleMetadata\", \"ModuleNameMetadata\", \"FunctionNameMetadata\", \"LocalNameMetadata\", \"BinaryModule\", \"QuoteModule\", \"SectionMetadata\", \"ProducersSectionMetadata\", \"ProducerMetadata\", \"ProducerMetadataVersionedName\", \"LoopInstruction\", \"Instr\", \"IfInstruction\", \"StringLiteral\", \"NumberLiteral\", \"LongNumberLiteral\", \"FloatLiteral\", \"Elem\", \"IndexInFuncSection\", \"ValtypeLiteral\", \"TypeInstruction\", \"Start\", \"GlobalType\", \"LeadingComment\", \"BlockComment\", \"Data\", \"Global\", \"Table\", \"Memory\", \"FuncImportDescr\", \"ModuleImport\", \"ModuleExportDescr\", \"ModuleExport\", \"Limit\", \"Signature\", \"Program\", \"Identifier\", \"BlockInstruction\", \"CallInstruction\", \"CallIndirectInstruction\", \"ByteArray\", \"Func\", \"InternalBrUnless\", \"InternalGoto\", \"InternalCallExtern\", \"InternalEndAndReturn\", \"Node\", \"Block\", \"Instruction\", \"Expression\", \"NumericLiteral\", \"ImportDescr\", \"Intrinsic\"];"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAAE,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;IAAEH,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAO,OAAOA,GAAd;IAAoB,CAAtD;EAAyD,CAApI,MAA0I;IAAED,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;IAA+H,CAAjK;EAAoK;;EAAC,OAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB,C,CAE/V;AACA;;;AACA,SAASK,QAAT,CAAkBC,CAAlB,EAAqB;EACnB,OAAO,UAAUC,CAAV,EAAa;IAClB,OAAOA,CAAC,CAACC,IAAF,KAAWF,CAAlB;EACD,CAFD;AAGD;;AAED,SAASG,YAAT,CAAsBH,CAAtB,EAAyB;EACvB,OAAO,UAAUC,CAAV,EAAa;IAClB,OAAO,YAAY;MACjB,IAAI,EAAEA,CAAC,CAACC,IAAF,KAAWF,CAAb,CAAJ,EAAqB;QACnB,MAAM,IAAII,KAAJ,CAAU,iBAAiB,UAAjB,IAA+BC,SAAS,IAAI,SAA5C,CAAV,CAAN;MACD;IACF,CAJM,EAAP;EAKD,CAND;AAOD;;AAED,OAAO,SAASC,MAAT,CAAgBC,EAAhB,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;EAC3C,IAAIF,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAKF,SAA1B,EAAqC;IACnC,IAAI,EAAE,OAAOE,EAAP,KAAc,QAAhB,CAAJ,EAA+B;MAC7B,MAAM,IAAIH,KAAJ,CAAU,2BAA2B,UAA3B,IAAyC,gDAAgDX,OAAO,CAACc,EAAD,CAAvD,IAA+D,SAAxG,CAAV,CAAN;IACD;EACF;;EAED,IAAI,EAAEd,OAAO,CAACe,MAAD,CAAP,KAAoB,QAApB,IAAgC,OAAOA,MAAM,CAACE,MAAd,KAAyB,WAA3D,CAAJ,EAA6E;IAC3E,MAAM,IAAIN,KAAJ,CAAU,uEAAuE,UAAvE,IAAqFC,SAAS,IAAI,SAAlG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,QADG;IAETK,EAAE,EAAEA,EAFK;IAGTC,MAAM,EAAEA;EAHC,CAAX;;EAMA,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;IACnCE,IAAI,CAACF,QAAL,GAAgBA,QAAhB;EACD;;EAED,OAAOE,IAAP;AACD;AACD,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,UAAjD,EAA6DC,SAA7D,EAAwE;EAC7E,IAAI,EAAEvB,OAAO,CAACoB,QAAD,CAAP,KAAsB,QAAtB,IAAkC,OAAOA,QAAQ,CAACH,MAAhB,KAA2B,WAA/D,CAAJ,EAAiF;IAC/E,MAAM,IAAIN,KAAJ,CAAU,2EAA2E,UAA3E,IAAyFC,SAAS,IAAI,SAAtG,CAAV,CAAN;EACD;;EAED,IAAIS,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAKT,SAAhD,EAA2D;IACzD,IAAI,EAAEZ,OAAO,CAACqB,aAAD,CAAP,KAA2B,QAA3B,IAAuC,OAAOA,aAAa,CAACJ,MAArB,KAAgC,WAAzE,CAAJ,EAA2F;MACzF,MAAM,IAAIN,KAAJ,CAAU,qFAAqF,UAArF,IAAmGC,SAAS,IAAI,SAAhH,CAAV,CAAN;IACD;EACF;;EAED,IAAIU,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAKV,SAA1C,EAAqD;IACnD,IAAI,EAAEZ,OAAO,CAACsB,UAAD,CAAP,KAAwB,QAAxB,IAAoC,OAAOA,UAAU,CAACL,MAAlB,KAA6B,WAAnE,CAAJ,EAAqF;MACnF,MAAM,IAAIN,KAAJ,CAAU,+EAA+E,UAA/E,IAA6FC,SAAS,IAAI,SAA1G,CAAV,CAAN;IACD;EACF;;EAED,IAAIW,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKX,SAAxC,EAAmD;IACjD,IAAI,EAAEZ,OAAO,CAACuB,SAAD,CAAP,KAAuB,QAAvB,IAAmC,OAAOA,SAAS,CAACN,MAAjB,KAA4B,WAAjE,CAAJ,EAAmF;MACjF,MAAM,IAAIN,KAAJ,CAAU,6EAA6E,UAA7E,IAA2FC,SAAS,IAAI,SAAxG,CAAV,CAAN;IACD;EACF;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,gBADG;IAETW,QAAQ,EAAEA;EAFD,CAAX;;EAKA,IAAI,OAAOC,aAAP,KAAyB,WAAzB,IAAwCA,aAAa,CAACJ,MAAd,GAAuB,CAAnE,EAAsE;IACpEC,IAAI,CAACG,aAAL,GAAqBA,aAArB;EACD;;EAED,IAAI,OAAOC,UAAP,KAAsB,WAAtB,IAAqCA,UAAU,CAACL,MAAX,GAAoB,CAA7D,EAAgE;IAC9DC,IAAI,CAACI,UAAL,GAAkBA,UAAlB;EACD;;EAED,IAAI,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACN,MAAV,GAAmB,CAA3D,EAA8D;IAC5DC,IAAI,CAACK,SAAL,GAAiBA,SAAjB;EACD;;EAED,OAAOL,IAAP;AACD;AACD,OAAO,SAASM,kBAAT,CAA4BC,KAA5B,EAAmC;EACxC,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIP,IAAI,GAAG;IACTT,IAAI,EAAE,oBADG;IAETgB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOP,IAAP;AACD;AACD,OAAO,SAASQ,oBAAT,CAA8BD,KAA9B,EAAqCE,KAArC,EAA4C;EACjD,IAAI,EAAE,OAAOF,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOE,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAIhB,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAAC2B,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIT,IAAI,GAAG;IACTT,IAAI,EAAE,sBADG;IAETgB,KAAK,EAAEA,KAFE;IAGTE,KAAK,EAAEA;EAHE,CAAX;EAKA,OAAOT,IAAP;AACD;AACD,OAAO,SAASU,iBAAT,CAA2BH,KAA3B,EAAkCI,UAAlC,EAA8CC,aAA9C,EAA6D;EAClE,IAAI,EAAE,OAAOL,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOI,UAAP,KAAsB,QAAxB,CAAJ,EAAuC;IACrC,MAAM,IAAIlB,KAAJ,CAAU,mCAAmC,UAAnC,IAAiD,wDAAwDX,OAAO,CAAC6B,UAAD,CAA/D,IAA+E,SAAhI,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOC,aAAP,KAAyB,QAA3B,CAAJ,EAA0C;IACxC,MAAM,IAAInB,KAAJ,CAAU,sCAAsC,UAAtC,IAAoD,2DAA2DX,OAAO,CAAC8B,aAAD,CAAlE,IAAqF,SAAzI,CAAV,CAAN;EACD;;EAED,IAAIZ,IAAI,GAAG;IACTT,IAAI,EAAE,mBADG;IAETgB,KAAK,EAAEA,KAFE;IAGTI,UAAU,EAAEA,UAHH;IAITC,aAAa,EAAEA;EAJN,CAAX;EAMA,OAAOZ,IAAP;AACD;AACD,OAAO,SAASa,YAAT,CAAsBjB,EAAtB,EAA0BkB,IAA1B,EAAgC;EACrC,IAAIlB,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAKF,SAA1B,EAAqC;IACnC,IAAI,EAAE,OAAOE,EAAP,KAAc,QAAhB,CAAJ,EAA+B;MAC7B,MAAM,IAAIH,KAAJ,CAAU,2BAA2B,UAA3B,IAAyC,gDAAgDX,OAAO,CAACc,EAAD,CAAvD,IAA+D,SAAxG,CAAV,CAAN;IACD;EACF;;EAED,IAAI,EAAEd,OAAO,CAACgC,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAACf,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAETK,EAAE,EAAEA,EAFK;IAGTkB,IAAI,EAAEA;EAHG,CAAX;EAKA,OAAOd,IAAP;AACD;AACD,OAAO,SAASe,WAAT,CAAqBnB,EAArB,EAAyBoB,MAAzB,EAAiC;EACtC,IAAIpB,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAKF,SAA1B,EAAqC;IACnC,IAAI,EAAE,OAAOE,EAAP,KAAc,QAAhB,CAAJ,EAA+B;MAC7B,MAAM,IAAIH,KAAJ,CAAU,2BAA2B,UAA3B,IAAyC,gDAAgDX,OAAO,CAACc,EAAD,CAAvD,IAA+D,SAAxG,CAAV,CAAN;IACD;EACF;;EAED,IAAI,EAAEd,OAAO,CAACkC,MAAD,CAAP,KAAoB,QAApB,IAAgC,OAAOA,MAAM,CAACjB,MAAd,KAAyB,WAA3D,CAAJ,EAA6E;IAC3E,MAAM,IAAIN,KAAJ,CAAU,uEAAuE,UAAvE,IAAqFC,SAAS,IAAI,SAAlG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,aADG;IAETK,EAAE,EAAEA,EAFK;IAGToB,MAAM,EAAEA;EAHC,CAAX;EAKA,OAAOhB,IAAP;AACD;AACD,OAAO,SAASiB,eAAT,CAAyBC,OAAzB,EAAkCC,WAAlC,EAA+CC,IAA/C,EAAqDC,YAArD,EAAmE;EACxE,IAAI,EAAE,OAAOF,WAAP,KAAuB,QAAzB,CAAJ,EAAwC;IACtC,MAAM,IAAI1B,KAAJ,CAAU,oCAAoC,UAApC,IAAkD,yDAAyDX,OAAO,CAACqC,WAAD,CAAhE,IAAiF,SAAnI,CAAV,CAAN;EACD;;EAED,IAAInB,IAAI,GAAG;IACTT,IAAI,EAAE,iBADG;IAET2B,OAAO,EAAEA,OAFA;IAGTC,WAAW,EAAEA,WAHJ;IAITC,IAAI,EAAEA,IAJG;IAKTC,YAAY,EAAEA;EALL,CAAX;EAOA,OAAOrB,IAAP;AACD;AACD,OAAO,SAASsB,wBAAT,CAAkCjB,SAAlC,EAA6C;EAClD,IAAI,EAAEvB,OAAO,CAACuB,SAAD,CAAP,KAAuB,QAAvB,IAAmC,OAAOA,SAAS,CAACN,MAAjB,KAA4B,WAAjE,CAAJ,EAAmF;IACjF,MAAM,IAAIN,KAAJ,CAAU,6EAA6E,UAA7E,IAA2FC,SAAS,IAAI,SAAxG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,0BADG;IAETc,SAAS,EAAEA;EAFF,CAAX;EAIA,OAAOL,IAAP;AACD;AACD,OAAO,SAASuB,gBAAT,CAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,GAAjD,EAAsD;EAC3D,IAAI,EAAE5C,OAAO,CAAC0C,QAAD,CAAP,KAAsB,QAAtB,IAAkC,OAAOA,QAAQ,CAACzB,MAAhB,KAA2B,WAA/D,CAAJ,EAAiF;IAC/E,MAAM,IAAIN,KAAJ,CAAU,2EAA2E,UAA3E,IAAyFC,SAAS,IAAI,SAAtG,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAAC2C,WAAD,CAAP,KAAyB,QAAzB,IAAqC,OAAOA,WAAW,CAAC1B,MAAnB,KAA8B,WAArE,CAAJ,EAAuF;IACrF,MAAM,IAAIN,KAAJ,CAAU,iFAAiF,UAAjF,IAA+FC,SAAS,IAAI,SAA5G,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAAC4C,GAAD,CAAP,KAAiB,QAAjB,IAA6B,OAAOA,GAAG,CAAC3B,MAAX,KAAsB,WAArD,CAAJ,EAAuE;IACrE,MAAM,IAAIN,KAAJ,CAAU,iEAAiE,UAAjE,IAA+EC,SAAS,IAAI,SAA5F,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,kBADG;IAETiC,QAAQ,EAAEA,QAFD;IAGTC,WAAW,EAAEA,WAHJ;IAITC,GAAG,EAAEA;EAJI,CAAX;EAMA,OAAO1B,IAAP;AACD;AACD,OAAO,SAAS2B,6BAAT,CAAuCC,IAAvC,EAA6CC,OAA7C,EAAsD;EAC3D,IAAI,EAAE,OAAOD,IAAP,KAAgB,QAAlB,CAAJ,EAAiC;IAC/B,MAAM,IAAInC,KAAJ,CAAU,6BAA6B,UAA7B,IAA2C,kDAAkDX,OAAO,CAAC8C,IAAD,CAAzD,IAAmE,SAA9G,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOC,OAAP,KAAmB,QAArB,CAAJ,EAAoC;IAClC,MAAM,IAAIpC,KAAJ,CAAU,gCAAgC,UAAhC,IAA8C,qDAAqDX,OAAO,CAAC+C,OAAD,CAA5D,IAAyE,SAAvH,CAAV,CAAN;EACD;;EAED,IAAI7B,IAAI,GAAG;IACTT,IAAI,EAAE,+BADG;IAETqC,IAAI,EAAEA,IAFG;IAGTC,OAAO,EAAEA;EAHA,CAAX;EAKA,OAAO7B,IAAP;AACD;AACD,OAAO,SAAS8B,eAAT,CAAyBC,KAAzB,EAAgCC,UAAhC,EAA4CC,KAA5C,EAAmD;EACxD,IAAI,EAAEnD,OAAO,CAACmD,KAAD,CAAP,KAAmB,QAAnB,IAA+B,OAAOA,KAAK,CAAClC,MAAb,KAAwB,WAAzD,CAAJ,EAA2E;IACzE,MAAM,IAAIN,KAAJ,CAAU,qEAAqE,UAArE,IAAmFC,SAAS,IAAI,SAAhG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,iBADG;IAETK,EAAE,EAAE,MAFK;IAGTmC,KAAK,EAAEA,KAHE;IAITC,UAAU,EAAEA,UAJH;IAKTC,KAAK,EAAEA;EALE,CAAX;EAOA,OAAOjC,IAAP;AACD;AACD,OAAO,SAASiC,KAAT,CAAerC,EAAf,EAAmBsC,MAAnB,EAA2BC,IAA3B,EAAiCC,SAAjC,EAA4C;EACjD,IAAI,EAAE,OAAOxC,EAAP,KAAc,QAAhB,CAAJ,EAA+B;IAC7B,MAAM,IAAIH,KAAJ,CAAU,2BAA2B,UAA3B,IAAyC,gDAAgDX,OAAO,CAACc,EAAD,CAAvD,IAA+D,SAAxG,CAAV,CAAN;EACD;;EAED,IAAI,EAAEd,OAAO,CAACqD,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAACpC,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,OADG;IAETK,EAAE,EAAEA,EAFK;IAGTuC,IAAI,EAAEA;EAHG,CAAX;;EAMA,IAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;IACjClC,IAAI,CAACkC,MAAL,GAAcA,MAAd;EACD;;EAED,IAAI,OAAOE,SAAP,KAAqB,WAArB,IAAoCC,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBrC,MAAvB,KAAkC,CAA1E,EAA6E;IAC3EC,IAAI,CAACoC,SAAL,GAAiBA,SAAjB;EACD;;EAED,OAAOpC,IAAP;AACD;AACD,OAAO,SAASuC,aAAT,CAAuBC,SAAvB,EAAkCC,IAAlC,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4DC,SAA5D,EAAuE;EAC5E,IAAI,EAAE9D,OAAO,CAAC2D,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAAC1C,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAAC6D,UAAD,CAAP,KAAwB,QAAxB,IAAoC,OAAOA,UAAU,CAAC5C,MAAlB,KAA6B,WAAnE,CAAJ,EAAqF;IACnF,MAAM,IAAIN,KAAJ,CAAU,+EAA+E,UAA/E,IAA6FC,SAAS,IAAI,SAA1G,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAAC8D,SAAD,CAAP,KAAuB,QAAvB,IAAmC,OAAOA,SAAS,CAAC7C,MAAjB,KAA4B,WAAjE,CAAJ,EAAmF;IACjF,MAAM,IAAIN,KAAJ,CAAU,6EAA6E,UAA7E,IAA2FC,SAAS,IAAI,SAAxG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,eADG;IAETK,EAAE,EAAE,IAFK;IAGT4C,SAAS,EAAEA,SAHF;IAITC,IAAI,EAAEA,IAJG;IAKTC,MAAM,EAAEA,MALC;IAMTC,UAAU,EAAEA,UANH;IAOTC,SAAS,EAAEA;EAPF,CAAX;EASA,OAAO5C,IAAP;AACD;AACD,OAAO,SAAS6C,aAAT,CAAuBtC,KAAvB,EAA8B;EACnC,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIP,IAAI,GAAG;IACTT,IAAI,EAAE,eADG;IAETgB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOP,IAAP;AACD;AACD,OAAO,SAAS8C,aAAT,CAAuBvC,KAAvB,EAA8BwC,GAA9B,EAAmC;EACxC,IAAI,EAAE,OAAOxC,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOwC,GAAP,KAAe,QAAjB,CAAJ,EAAgC;IAC9B,MAAM,IAAItD,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACiE,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;EACD;;EAED,IAAI/C,IAAI,GAAG;IACTT,IAAI,EAAE,eADG;IAETgB,KAAK,EAAEA,KAFE;IAGTwC,GAAG,EAAEA;EAHI,CAAX;EAKA,OAAO/C,IAAP;AACD;AACD,OAAO,SAASgD,iBAAT,CAA2BzC,KAA3B,EAAkCwC,GAAlC,EAAuC;EAC5C,IAAI,EAAE,OAAOA,GAAP,KAAe,QAAjB,CAAJ,EAAgC;IAC9B,MAAM,IAAItD,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACiE,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;EACD;;EAED,IAAI/C,IAAI,GAAG;IACTT,IAAI,EAAE,mBADG;IAETgB,KAAK,EAAEA,KAFE;IAGTwC,GAAG,EAAEA;EAHI,CAAX;EAKA,OAAO/C,IAAP;AACD;AACD,OAAO,SAASiD,YAAT,CAAsB1C,KAAtB,EAA6B2C,GAA7B,EAAkCC,GAAlC,EAAuCJ,GAAvC,EAA4C;EACjD,IAAI,EAAE,OAAOxC,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAI2C,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKxD,SAA5B,EAAuC;IACrC,IAAI,EAAE,OAAOwD,GAAP,KAAe,SAAjB,CAAJ,EAAiC;MAC/B,MAAM,IAAIzD,KAAJ,CAAU,6BAA6B,UAA7B,IAA2C,kDAAkDX,OAAO,CAACoE,GAAD,CAAzD,IAAkE,SAA7G,CAAV,CAAN;IACD;EACF;;EAED,IAAIC,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzD,SAA5B,EAAuC;IACrC,IAAI,EAAE,OAAOyD,GAAP,KAAe,SAAjB,CAAJ,EAAiC;MAC/B,MAAM,IAAI1D,KAAJ,CAAU,6BAA6B,UAA7B,IAA2C,kDAAkDX,OAAO,CAACqE,GAAD,CAAzD,IAAkE,SAA7G,CAAV,CAAN;IACD;EACF;;EAED,IAAI,EAAE,OAAOJ,GAAP,KAAe,QAAjB,CAAJ,EAAgC;IAC9B,MAAM,IAAItD,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACiE,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;EACD;;EAED,IAAI/C,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAETgB,KAAK,EAAEA,KAFE;IAGTwC,GAAG,EAAEA;EAHI,CAAX;;EAMA,IAAIG,GAAG,KAAK,IAAZ,EAAkB;IAChBlD,IAAI,CAACkD,GAAL,GAAW,IAAX;EACD;;EAED,IAAIC,GAAG,KAAK,IAAZ,EAAkB;IAChBnD,IAAI,CAACmD,GAAL,GAAW,IAAX;EACD;;EAED,OAAOnD,IAAP;AACD;AACD,OAAO,SAASoD,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;EACzC,IAAI,EAAEzE,OAAO,CAACwE,MAAD,CAAP,KAAoB,QAApB,IAAgC,OAAOA,MAAM,CAACvD,MAAd,KAAyB,WAA3D,CAAJ,EAA6E;IAC3E,MAAM,IAAIN,KAAJ,CAAU,uEAAuE,UAAvE,IAAqFC,SAAS,IAAI,SAAlG,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAACyE,KAAD,CAAP,KAAmB,QAAnB,IAA+B,OAAOA,KAAK,CAACxD,MAAb,KAAwB,WAAzD,CAAJ,EAA2E;IACzE,MAAM,IAAIN,KAAJ,CAAU,qEAAqE,UAArE,IAAmFC,SAAS,IAAI,SAAhG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,MADG;IAET8D,KAAK,EAAEA,KAFE;IAGTC,MAAM,EAAEA,MAHC;IAITC,KAAK,EAAEA;EAJE,CAAX;EAMA,OAAOvD,IAAP;AACD;AACD,OAAO,SAASwD,kBAAT,CAA4B/C,KAA5B,EAAmC;EACxC,IAAIT,IAAI,GAAG;IACTT,IAAI,EAAE,oBADG;IAETkB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOT,IAAP;AACD;AACD,OAAO,SAASyD,cAAT,CAAwB7B,IAAxB,EAA8B;EACnC,IAAI5B,IAAI,GAAG;IACTT,IAAI,EAAE,gBADG;IAETqC,IAAI,EAAEA;EAFG,CAAX;EAIA,OAAO5B,IAAP;AACD;AACD,OAAO,SAAS0D,eAAT,CAAyB9D,EAAzB,EAA6B+D,QAA7B,EAAuC;EAC5C,IAAI3D,IAAI,GAAG;IACTT,IAAI,EAAE,iBADG;IAETK,EAAE,EAAEA,EAFK;IAGT+D,QAAQ,EAAEA;EAHD,CAAX;EAKA,OAAO3D,IAAP;AACD;AACD,OAAO,SAAS4D,KAAT,CAAenD,KAAf,EAAsB;EAC3B,IAAIT,IAAI,GAAG;IACTT,IAAI,EAAE,OADG;IAETkB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOT,IAAP;AACD;AACD,OAAO,SAAS6D,UAAT,CAAoBC,OAApB,EAA6BC,UAA7B,EAAyC;EAC9C,IAAI/D,IAAI,GAAG;IACTT,IAAI,EAAE,YADG;IAETuE,OAAO,EAAEA,OAFA;IAGTC,UAAU,EAAEA;EAHH,CAAX;EAKA,OAAO/D,IAAP;AACD;AACD,OAAO,SAASgE,cAAT,CAAwBzD,KAAxB,EAA+B;EACpC,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIP,IAAI,GAAG;IACTT,IAAI,EAAE,gBADG;IAETgB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOP,IAAP;AACD;AACD,OAAO,SAASiE,YAAT,CAAsB1D,KAAtB,EAA6B;EAClC,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIP,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAETgB,KAAK,EAAEA;EAFE,CAAX;EAIA,OAAOP,IAAP;AACD;AACD,OAAO,SAASkE,IAAT,CAAcC,WAAd,EAA2Bb,MAA3B,EAAmCc,IAAnC,EAAyC;EAC9C,IAAIpE,IAAI,GAAG;IACTT,IAAI,EAAE,MADG;IAET4E,WAAW,EAAEA,WAFJ;IAGTb,MAAM,EAAEA,MAHC;IAITc,IAAI,EAAEA;EAJG,CAAX;EAMA,OAAOpE,IAAP;AACD;AACD,OAAO,SAASqE,MAAT,CAAgBR,UAAhB,EAA4BO,IAA5B,EAAkCxC,IAAlC,EAAwC;EAC7C,IAAI,EAAE9C,OAAO,CAACsF,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAACrE,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,QADG;IAETsE,UAAU,EAAEA,UAFH;IAGTO,IAAI,EAAEA,IAHG;IAITxC,IAAI,EAAEA;EAJG,CAAX;EAMA,OAAO5B,IAAP;AACD;AACD,OAAO,SAASqD,KAAT,CAAeiB,WAAf,EAA4BC,MAA5B,EAAoC3C,IAApC,EAA0C4C,QAA1C,EAAoD;EACzD,IAAI,EAAED,MAAM,CAAChF,IAAP,KAAgB,OAAlB,CAAJ,EAAgC;IAC9B,MAAM,IAAIE,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,mDAAmD8E,MAAM,CAAChF,IAA1D,IAAkE,SAA5G,CAAV,CAAN;EACD;;EAED,IAAIiF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK9E,SAAtC,EAAiD;IAC/C,IAAI,EAAEZ,OAAO,CAAC0F,QAAD,CAAP,KAAsB,QAAtB,IAAkC,OAAOA,QAAQ,CAACzE,MAAhB,KAA2B,WAA/D,CAAJ,EAAiF;MAC/E,MAAM,IAAIN,KAAJ,CAAU,2EAA2E,UAA3E,IAAyFC,SAAS,IAAI,SAAtG,CAAV,CAAN;IACD;EACF;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,OADG;IAET+E,WAAW,EAAEA,WAFJ;IAGTC,MAAM,EAAEA,MAHC;IAIT3C,IAAI,EAAEA;EAJG,CAAX;;EAOA,IAAI,OAAO4C,QAAP,KAAoB,WAApB,IAAmCA,QAAQ,CAACzE,MAAT,GAAkB,CAAzD,EAA4D;IAC1DC,IAAI,CAACwE,QAAL,GAAgBA,QAAhB;EACD;;EAED,OAAOxE,IAAP;AACD;AACD,OAAO,SAASyE,MAAT,CAAgBF,MAAhB,EAAwB3E,EAAxB,EAA4B;EACjC,IAAII,IAAI,GAAG;IACTT,IAAI,EAAE,QADG;IAETgF,MAAM,EAAEA,MAFC;IAGT3E,EAAE,EAAEA;EAHK,CAAX;EAKA,OAAOI,IAAP;AACD;AACD,OAAO,SAAS0E,eAAT,CAAyB9E,EAAzB,EAA6B+E,SAA7B,EAAwC;EAC7C,IAAI3E,IAAI,GAAG;IACTT,IAAI,EAAE,iBADG;IAETK,EAAE,EAAEA,EAFK;IAGT+E,SAAS,EAAEA;EAHF,CAAX;EAKA,OAAO3E,IAAP;AACD;AACD,OAAO,SAAS4E,YAAT,CAAsBjF,MAAtB,EAA8BiC,IAA9B,EAAoCiD,KAApC,EAA2C;EAChD,IAAI,EAAE,OAAOlF,MAAP,KAAkB,QAApB,CAAJ,EAAmC;IACjC,MAAM,IAAIF,KAAJ,CAAU,+BAA+B,UAA/B,IAA6C,oDAAoDX,OAAO,CAACa,MAAD,CAA3D,IAAuE,SAApH,CAAV,CAAN;EACD;;EAED,IAAI,EAAE,OAAOiC,IAAP,KAAgB,QAAlB,CAAJ,EAAiC;IAC/B,MAAM,IAAInC,KAAJ,CAAU,6BAA6B,UAA7B,IAA2C,kDAAkDX,OAAO,CAAC8C,IAAD,CAAzD,IAAmE,SAA9G,CAAV,CAAN;EACD;;EAED,IAAI5B,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAETI,MAAM,EAAEA,MAFC;IAGTiC,IAAI,EAAEA,IAHG;IAITiD,KAAK,EAAEA;EAJE,CAAX;EAMA,OAAO7E,IAAP;AACD;AACD,OAAO,SAAS8E,iBAAT,CAA2BC,UAA3B,EAAuCnF,EAAvC,EAA2C;EAChD,IAAII,IAAI,GAAG;IACTT,IAAI,EAAE,mBADG;IAETwF,UAAU,EAAEA,UAFH;IAGTnF,EAAE,EAAEA;EAHK,CAAX;EAKA,OAAOI,IAAP;AACD;AACD,OAAO,SAASgF,YAAT,CAAsBpD,IAAtB,EAA4BiD,KAA5B,EAAmC;EACxC,IAAI,EAAE,OAAOjD,IAAP,KAAgB,QAAlB,CAAJ,EAAiC;IAC/B,MAAM,IAAInC,KAAJ,CAAU,6BAA6B,UAA7B,IAA2C,kDAAkDX,OAAO,CAAC8C,IAAD,CAAzD,IAAmE,SAA9G,CAAV,CAAN;EACD;;EAED,IAAI5B,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAETqC,IAAI,EAAEA,IAFG;IAGTiD,KAAK,EAAEA;EAHE,CAAX;EAKA,OAAO7E,IAAP;AACD;AACD,OAAO,SAASiF,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyB;EAC9B,IAAI,EAAE,OAAOD,GAAP,KAAe,QAAjB,CAAJ,EAAgC;IAC9B,MAAM,IAAIzF,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACoG,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;EACD;;EAED,IAAIC,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKzF,SAA5B,EAAuC;IACrC,IAAI,EAAE,OAAOyF,GAAP,KAAe,QAAjB,CAAJ,EAAgC;MAC9B,MAAM,IAAI1F,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACqG,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;IACD;EACF;;EAED,IAAInF,IAAI,GAAG;IACTT,IAAI,EAAE,OADG;IAET2F,GAAG,EAAEA;EAFI,CAAX;;EAKA,IAAI,OAAOC,GAAP,KAAe,WAAnB,EAAgC;IAC9BnF,IAAI,CAACmF,GAAL,GAAWA,GAAX;EACD;;EAED,OAAOnF,IAAP;AACD;AACD,OAAO,SAAS2E,SAAT,CAAmBS,MAAnB,EAA2BC,OAA3B,EAAoC;EACzC,IAAI,EAAEvG,OAAO,CAACsG,MAAD,CAAP,KAAoB,QAApB,IAAgC,OAAOA,MAAM,CAACrF,MAAd,KAAyB,WAA3D,CAAJ,EAA6E;IAC3E,MAAM,IAAIN,KAAJ,CAAU,uEAAuE,UAAvE,IAAqFC,SAAS,IAAI,SAAlG,CAAV,CAAN;EACD;;EAED,IAAI,EAAEZ,OAAO,CAACuG,OAAD,CAAP,KAAqB,QAArB,IAAiC,OAAOA,OAAO,CAACtF,MAAf,KAA0B,WAA7D,CAAJ,EAA+E;IAC7E,MAAM,IAAIN,KAAJ,CAAU,yEAAyE,UAAzE,IAAuFC,SAAS,IAAI,SAApG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,WADG;IAET6F,MAAM,EAAEA,MAFC;IAGTC,OAAO,EAAEA;EAHA,CAAX;EAKA,OAAOrF,IAAP;AACD;AACD,OAAO,SAASsF,OAAT,CAAiBC,IAAjB,EAAuB;EAC5B,IAAI,EAAEzG,OAAO,CAACyG,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAACxF,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,SADG;IAETgG,IAAI,EAAEA;EAFG,CAAX;EAIA,OAAOvF,IAAP;AACD;AACD,OAAO,SAASwF,UAAT,CAAoBjF,KAApB,EAA2BwC,GAA3B,EAAgC;EACrC,IAAI,EAAE,OAAOxC,KAAP,KAAiB,QAAnB,CAAJ,EAAkC;IAChC,MAAM,IAAId,KAAJ,CAAU,8BAA8B,UAA9B,IAA4C,mDAAmDX,OAAO,CAACyB,KAAD,CAA1D,IAAqE,SAAjH,CAAV,CAAN;EACD;;EAED,IAAIwC,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKrD,SAA5B,EAAuC;IACrC,IAAI,EAAE,OAAOqD,GAAP,KAAe,QAAjB,CAAJ,EAAgC;MAC9B,MAAM,IAAItD,KAAJ,CAAU,4BAA4B,UAA5B,IAA0C,iDAAiDX,OAAO,CAACiE,GAAD,CAAxD,IAAiE,SAA3G,CAAV,CAAN;IACD;EACF;;EAED,IAAI/C,IAAI,GAAG;IACTT,IAAI,EAAE,YADG;IAETgB,KAAK,EAAEA;EAFE,CAAX;;EAKA,IAAI,OAAOwC,GAAP,KAAe,WAAnB,EAAgC;IAC9B/C,IAAI,CAAC+C,GAAL,GAAWA,GAAX;EACD;;EAED,OAAO/C,IAAP;AACD;AACD,OAAO,SAASyF,gBAAT,CAA0B1D,KAA1B,EAAiCE,KAAjC,EAAwCS,MAAxC,EAAgD;EACrD,IAAI,EAAE5D,OAAO,CAACmD,KAAD,CAAP,KAAmB,QAAnB,IAA+B,OAAOA,KAAK,CAAClC,MAAb,KAAwB,WAAzD,CAAJ,EAA2E;IACzE,MAAM,IAAIN,KAAJ,CAAU,qEAAqE,UAArE,IAAmFC,SAAS,IAAI,SAAhG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,kBADG;IAETK,EAAE,EAAE,OAFK;IAGTmC,KAAK,EAAEA,KAHE;IAITE,KAAK,EAAEA,KAJE;IAKTS,MAAM,EAAEA;EALC,CAAX;EAOA,OAAO1C,IAAP;AACD;AACD,OAAO,SAAS0F,eAAT,CAAyBjF,KAAzB,EAAgCkF,SAAhC,EAA2CC,OAA3C,EAAoD;EACzD,IAAID,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKjG,SAAxC,EAAmD;IACjD,IAAI,EAAEZ,OAAO,CAAC6G,SAAD,CAAP,KAAuB,QAAvB,IAAmC,OAAOA,SAAS,CAAC5F,MAAjB,KAA4B,WAAjE,CAAJ,EAAmF;MACjF,MAAM,IAAIN,KAAJ,CAAU,6EAA6E,UAA7E,IAA2FC,SAAS,IAAI,SAAxG,CAAV,CAAN;IACD;EACF;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,iBADG;IAETK,EAAE,EAAE,MAFK;IAGTa,KAAK,EAAEA;EAHE,CAAX;;EAMA,IAAI,OAAOkF,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAAC5F,MAAV,GAAmB,CAA3D,EAA8D;IAC5DC,IAAI,CAAC2F,SAAL,GAAiBA,SAAjB;EACD;;EAED,IAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;IAClC5F,IAAI,CAAC4F,OAAL,GAAeA,OAAf;EACD;;EAED,OAAO5F,IAAP;AACD;AACD,OAAO,SAAS6F,uBAAT,CAAiClB,SAAjC,EAA4CmB,KAA5C,EAAmD;EACxD,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKpG,SAAhC,EAA2C;IACzC,IAAI,EAAEZ,OAAO,CAACgH,KAAD,CAAP,KAAmB,QAAnB,IAA+B,OAAOA,KAAK,CAAC/F,MAAb,KAAwB,WAAzD,CAAJ,EAA2E;MACzE,MAAM,IAAIN,KAAJ,CAAU,qEAAqE,UAArE,IAAmFC,SAAS,IAAI,SAAhG,CAAV,CAAN;IACD;EACF;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,yBADG;IAETK,EAAE,EAAE,eAFK;IAGT+E,SAAS,EAAEA;EAHF,CAAX;;EAMA,IAAI,OAAOmB,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,CAAC/F,MAAN,GAAe,CAAnD,EAAsD;IACpDC,IAAI,CAAC8F,KAAL,GAAaA,KAAb;EACD;;EAED,OAAO9F,IAAP;AACD;AACD,OAAO,SAAS+F,SAAT,CAAmBC,MAAnB,EAA2B;EAChC,IAAI,EAAElH,OAAO,CAACkH,MAAD,CAAP,KAAoB,QAApB,IAAgC,OAAOA,MAAM,CAACjG,MAAd,KAAyB,WAA3D,CAAJ,EAA6E;IAC3E,MAAM,IAAIN,KAAJ,CAAU,uEAAuE,UAAvE,IAAqFC,SAAS,IAAI,SAAlG,CAAV,CAAN;EACD;;EAED,IAAIM,IAAI,GAAG;IACTT,IAAI,EAAE,WADG;IAETyG,MAAM,EAAEA;EAFC,CAAX;EAIA,OAAOhG,IAAP;AACD;AACD,OAAO,SAASiG,IAAT,CAAcrE,IAAd,EAAoB+C,SAApB,EAA+BY,IAA/B,EAAqCW,UAArC,EAAiDpG,QAAjD,EAA2D;EAChE,IAAI,EAAEhB,OAAO,CAACyG,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAACxF,MAAZ,KAAuB,WAAvD,CAAJ,EAAyE;IACvE,MAAM,IAAIN,KAAJ,CAAU,mEAAmE,UAAnE,IAAiFC,SAAS,IAAI,SAA9F,CAAV,CAAN;EACD;;EAED,IAAIwG,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAKxG,SAA1C,EAAqD;IACnD,IAAI,EAAE,OAAOwG,UAAP,KAAsB,SAAxB,CAAJ,EAAwC;MACtC,MAAM,IAAIzG,KAAJ,CAAU,oCAAoC,UAApC,IAAkD,yDAAyDX,OAAO,CAACoH,UAAD,CAAhE,IAAgF,SAAlI,CAAV,CAAN;IACD;EACF;;EAED,IAAIlG,IAAI,GAAG;IACTT,IAAI,EAAE,MADG;IAETqC,IAAI,EAAEA,IAFG;IAGT+C,SAAS,EAAEA,SAHF;IAITY,IAAI,EAAEA;EAJG,CAAX;;EAOA,IAAIW,UAAU,KAAK,IAAnB,EAAyB;IACvBlG,IAAI,CAACkG,UAAL,GAAkB,IAAlB;EACD;;EAED,IAAI,OAAOpG,QAAP,KAAoB,WAAxB,EAAqC;IACnCE,IAAI,CAACF,QAAL,GAAgBA,QAAhB;EACD;;EAED,OAAOE,IAAP;AACD;AACD,OAAO,SAASmG,gBAAT,CAA0BC,MAA1B,EAAkC;EACvC,IAAI,EAAE,OAAOA,MAAP,KAAkB,QAApB,CAAJ,EAAmC;IACjC,MAAM,IAAI3G,KAAJ,CAAU,+BAA+B,UAA/B,IAA6C,oDAAoDX,OAAO,CAACsH,MAAD,CAA3D,IAAuE,SAApH,CAAV,CAAN;EACD;;EAED,IAAIpG,IAAI,GAAG;IACTT,IAAI,EAAE,kBADG;IAET6G,MAAM,EAAEA;EAFC,CAAX;EAIA,OAAOpG,IAAP;AACD;AACD,OAAO,SAASqG,YAAT,CAAsBD,MAAtB,EAA8B;EACnC,IAAI,EAAE,OAAOA,MAAP,KAAkB,QAApB,CAAJ,EAAmC;IACjC,MAAM,IAAI3G,KAAJ,CAAU,+BAA+B,UAA/B,IAA6C,oDAAoDX,OAAO,CAACsH,MAAD,CAA3D,IAAuE,SAApH,CAAV,CAAN;EACD;;EAED,IAAIpG,IAAI,GAAG;IACTT,IAAI,EAAE,cADG;IAET6G,MAAM,EAAEA;EAFC,CAAX;EAIA,OAAOpG,IAAP;AACD;AACD,OAAO,SAASsG,kBAAT,CAA4BF,MAA5B,EAAoC;EACzC,IAAI,EAAE,OAAOA,MAAP,KAAkB,QAApB,CAAJ,EAAmC;IACjC,MAAM,IAAI3G,KAAJ,CAAU,+BAA+B,UAA/B,IAA6C,oDAAoDX,OAAO,CAACsH,MAAD,CAA3D,IAAuE,SAApH,CAAV,CAAN;EACD;;EAED,IAAIpG,IAAI,GAAG;IACTT,IAAI,EAAE,oBADG;IAET6G,MAAM,EAAEA;EAFC,CAAX;EAIA,OAAOpG,IAAP;AACD;AACD,OAAO,SAASuG,oBAAT,GAAgC;EACrC,IAAIvG,IAAI,GAAG;IACTT,IAAI,EAAE;EADG,CAAX;EAGA,OAAOS,IAAP;AACD;AACD,OAAO,IAAIwG,QAAQ,GAAGpH,QAAQ,CAAC,QAAD,CAAvB;AACP,OAAO,IAAIqH,gBAAgB,GAAGrH,QAAQ,CAAC,gBAAD,CAA/B;AACP,OAAO,IAAIsH,oBAAoB,GAAGtH,QAAQ,CAAC,oBAAD,CAAnC;AACP,OAAO,IAAIuH,sBAAsB,GAAGvH,QAAQ,CAAC,sBAAD,CAArC;AACP,OAAO,IAAIwH,mBAAmB,GAAGxH,QAAQ,CAAC,mBAAD,CAAlC;AACP,OAAO,IAAIyH,cAAc,GAAGzH,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAI0H,aAAa,GAAG1H,QAAQ,CAAC,aAAD,CAA5B;AACP,OAAO,IAAI2H,iBAAiB,GAAG3H,QAAQ,CAAC,iBAAD,CAAhC;AACP,OAAO,IAAI4H,0BAA0B,GAAG5H,QAAQ,CAAC,0BAAD,CAAzC;AACP,OAAO,IAAI6H,kBAAkB,GAAG7H,QAAQ,CAAC,kBAAD,CAAjC;AACP,OAAO,IAAI8H,+BAA+B,GAAG9H,QAAQ,CAAC,+BAAD,CAA9C;AACP,OAAO,IAAI+H,iBAAiB,GAAG/H,QAAQ,CAAC,iBAAD,CAAhC;AACP,OAAO,IAAIgI,OAAO,GAAGhI,QAAQ,CAAC,OAAD,CAAtB;AACP,OAAO,IAAIiI,eAAe,GAAGjI,QAAQ,CAAC,eAAD,CAA9B;AACP,OAAO,IAAIkI,eAAe,GAAGlI,QAAQ,CAAC,eAAD,CAA9B;AACP,OAAO,IAAImI,eAAe,GAAGnI,QAAQ,CAAC,eAAD,CAA9B;AACP,OAAO,IAAIoI,mBAAmB,GAAGpI,QAAQ,CAAC,mBAAD,CAAlC;AACP,OAAO,IAAIqI,cAAc,GAAGrI,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAIsI,MAAM,GAAGtI,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAIuI,oBAAoB,GAAGvI,QAAQ,CAAC,oBAAD,CAAnC;AACP,OAAO,IAAIwI,gBAAgB,GAAGxI,QAAQ,CAAC,gBAAD,CAA/B;AACP,OAAO,IAAIyI,iBAAiB,GAAGzI,QAAQ,CAAC,iBAAD,CAAhC;AACP,OAAO,IAAI0I,OAAO,GAAG1I,QAAQ,CAAC,OAAD,CAAtB;AACP,OAAO,IAAI2I,YAAY,GAAG3I,QAAQ,CAAC,YAAD,CAA3B;AACP,OAAO,IAAI4I,gBAAgB,GAAG5I,QAAQ,CAAC,gBAAD,CAA/B;AACP,OAAO,IAAI6I,cAAc,GAAG7I,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAI8I,MAAM,GAAG9I,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAI+I,QAAQ,GAAG/I,QAAQ,CAAC,QAAD,CAAvB;AACP,OAAO,IAAIgJ,OAAO,GAAGhJ,QAAQ,CAAC,OAAD,CAAtB;AACP,OAAO,IAAIiJ,QAAQ,GAAGjJ,QAAQ,CAAC,QAAD,CAAvB;AACP,OAAO,IAAIkJ,iBAAiB,GAAGlJ,QAAQ,CAAC,iBAAD,CAAhC;AACP,OAAO,IAAImJ,cAAc,GAAGnJ,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAIoJ,mBAAmB,GAAGpJ,QAAQ,CAAC,mBAAD,CAAlC;AACP,OAAO,IAAIqJ,cAAc,GAAGrJ,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAIsJ,OAAO,GAAGtJ,QAAQ,CAAC,OAAD,CAAtB;AACP,OAAO,IAAIuJ,WAAW,GAAGvJ,QAAQ,CAAC,WAAD,CAA1B;AACP,OAAO,IAAIwJ,SAAS,GAAGxJ,QAAQ,CAAC,SAAD,CAAxB;AACP,OAAO,IAAIyJ,YAAY,GAAGzJ,QAAQ,CAAC,YAAD,CAA3B;AACP,OAAO,IAAI0J,kBAAkB,GAAG1J,QAAQ,CAAC,kBAAD,CAAjC;AACP,OAAO,IAAI2J,iBAAiB,GAAG3J,QAAQ,CAAC,iBAAD,CAAhC;AACP,OAAO,IAAI4J,yBAAyB,GAAG5J,QAAQ,CAAC,yBAAD,CAAxC;AACP,OAAO,IAAI6J,WAAW,GAAG7J,QAAQ,CAAC,WAAD,CAA1B;AACP,OAAO,IAAI8J,MAAM,GAAG9J,QAAQ,CAAC,MAAD,CAArB;AACP,OAAO,IAAI+J,kBAAkB,GAAG/J,QAAQ,CAAC,kBAAD,CAAjC;AACP,OAAO,IAAIgK,cAAc,GAAGhK,QAAQ,CAAC,cAAD,CAA7B;AACP,OAAO,IAAIiK,oBAAoB,GAAGjK,QAAQ,CAAC,oBAAD,CAAnC;AACP,OAAO,IAAIkK,sBAAsB,GAAGlK,QAAQ,CAAC,sBAAD,CAArC;AACP,OAAO,IAAImK,MAAM,GAAG,SAASA,MAAT,CAAgBvJ,IAAhB,EAAsB;EACxC,OAAOwG,QAAQ,CAACxG,IAAD,CAAR,IAAkByG,gBAAgB,CAACzG,IAAD,CAAlC,IAA4C0G,oBAAoB,CAAC1G,IAAD,CAAhE,IAA0E2G,sBAAsB,CAAC3G,IAAD,CAAhG,IAA0G4G,mBAAmB,CAAC5G,IAAD,CAA7H,IAAuI6G,cAAc,CAAC7G,IAAD,CAArJ,IAA+J8G,aAAa,CAAC9G,IAAD,CAA5K,IAAsL+G,iBAAiB,CAAC/G,IAAD,CAAvM,IAAiNgH,0BAA0B,CAAChH,IAAD,CAA3O,IAAqPiH,kBAAkB,CAACjH,IAAD,CAAvQ,IAAiRkH,+BAA+B,CAAClH,IAAD,CAAhT,IAA0TmH,iBAAiB,CAACnH,IAAD,CAA3U,IAAqVoH,OAAO,CAACpH,IAAD,CAA5V,IAAsWqH,eAAe,CAACrH,IAAD,CAArX,IAA+XsH,eAAe,CAACtH,IAAD,CAA9Y,IAAwZuH,eAAe,CAACvH,IAAD,CAAva,IAAibwH,mBAAmB,CAACxH,IAAD,CAApc,IAA8cyH,cAAc,CAACzH,IAAD,CAA5d,IAAse0H,MAAM,CAAC1H,IAAD,CAA5e,IAAsf2H,oBAAoB,CAAC3H,IAAD,CAA1gB,IAAohB4H,gBAAgB,CAAC5H,IAAD,CAApiB,IAA8iB6H,iBAAiB,CAAC7H,IAAD,CAA/jB,IAAykB8H,OAAO,CAAC9H,IAAD,CAAhlB,IAA0lB+H,YAAY,CAAC/H,IAAD,CAAtmB,IAAgnBgI,gBAAgB,CAAChI,IAAD,CAAhoB,IAA0oBiI,cAAc,CAACjI,IAAD,CAAxpB,IAAkqBkI,MAAM,CAAClI,IAAD,CAAxqB,IAAkrBmI,QAAQ,CAACnI,IAAD,CAA1rB,IAAosBoI,OAAO,CAACpI,IAAD,CAA3sB,IAAqtBqI,QAAQ,CAACrI,IAAD,CAA7tB,IAAuuBsI,iBAAiB,CAACtI,IAAD,CAAxvB,IAAkwBuI,cAAc,CAACvI,IAAD,CAAhxB,IAA0xBwI,mBAAmB,CAACxI,IAAD,CAA7yB,IAAuzByI,cAAc,CAACzI,IAAD,CAAr0B,IAA+0B0I,OAAO,CAAC1I,IAAD,CAAt1B,IAAg2B2I,WAAW,CAAC3I,IAAD,CAA32B,IAAq3B4I,SAAS,CAAC5I,IAAD,CAA93B,IAAw4B6I,YAAY,CAAC7I,IAAD,CAAp5B,IAA85B8I,kBAAkB,CAAC9I,IAAD,CAAh7B,IAA07B+I,iBAAiB,CAAC/I,IAAD,CAA38B,IAAq9BgJ,yBAAyB,CAAChJ,IAAD,CAA9+B,IAAw/BiJ,WAAW,CAACjJ,IAAD,CAAngC,IAA6gCkJ,MAAM,CAAClJ,IAAD,CAAnhC,IAA6hCmJ,kBAAkB,CAACnJ,IAAD,CAA/iC,IAAyjCoJ,cAAc,CAACpJ,IAAD,CAAvkC,IAAilCqJ,oBAAoB,CAACrJ,IAAD,CAArmC,IAA+mCsJ,sBAAsB,CAACtJ,IAAD,CAA5oC;AACD,CAFM;AAGP,OAAO,IAAIwJ,OAAO,GAAG,SAASA,OAAT,CAAiBxJ,IAAjB,EAAuB;EAC1C,OAAOmH,iBAAiB,CAACnH,IAAD,CAAjB,IAA2B8I,kBAAkB,CAAC9I,IAAD,CAA7C,IAAuDkJ,MAAM,CAAClJ,IAAD,CAApE;AACD,CAFM;AAGP,OAAO,IAAIyJ,aAAa,GAAG,SAASA,aAAT,CAAuBzJ,IAAvB,EAA6B;EACtD,OAAOmH,iBAAiB,CAACnH,IAAD,CAAjB,IAA2BoH,OAAO,CAACpH,IAAD,CAAlC,IAA4CqH,eAAe,CAACrH,IAAD,CAA3D,IAAqE6H,iBAAiB,CAAC7H,IAAD,CAAtF,IAAgG8I,kBAAkB,CAAC9I,IAAD,CAAlH,IAA4H+I,iBAAiB,CAAC/I,IAAD,CAA7I,IAAuJgJ,yBAAyB,CAAChJ,IAAD,CAAvL;AACD,CAFM;AAGP,OAAO,IAAI0J,YAAY,GAAG,SAASA,YAAT,CAAsB1J,IAAtB,EAA4B;EACpD,OAAOoH,OAAO,CAACpH,IAAD,CAAP,IAAiBsH,eAAe,CAACtH,IAAD,CAAhC,IAA0CuH,eAAe,CAACvH,IAAD,CAAzD,IAAmEwH,mBAAmB,CAACxH,IAAD,CAAtF,IAAgGyH,cAAc,CAACzH,IAAD,CAA9G,IAAwH4H,gBAAgB,CAAC5H,IAAD,CAAxI,IAAkJ6I,YAAY,CAAC7I,IAAD,CAArK;AACD,CAFM;AAGP,OAAO,IAAI2J,gBAAgB,GAAG,SAASA,gBAAT,CAA0B3J,IAA1B,EAAgC;EAC5D,OAAOuH,eAAe,CAACvH,IAAD,CAAf,IAAyBwH,mBAAmB,CAACxH,IAAD,CAA5C,IAAsDyH,cAAc,CAACzH,IAAD,CAA3E;AACD,CAFM;AAGP,OAAO,IAAI4J,aAAa,GAAG,SAASA,aAAT,CAAuB5J,IAAvB,EAA6B;EACtD,OAAO+H,YAAY,CAAC/H,IAAD,CAAZ,IAAsBoI,OAAO,CAACpI,IAAD,CAA7B,IAAuCqI,QAAQ,CAACrI,IAAD,CAA/C,IAAyDsI,iBAAiB,CAACtI,IAAD,CAAjF;AACD,CAFM;AAGP,OAAO,IAAI6J,WAAW,GAAG,SAASA,WAAT,CAAqB7J,IAArB,EAA2B;EAClD,OAAOmJ,kBAAkB,CAACnJ,IAAD,CAAlB,IAA4BoJ,cAAc,CAACpJ,IAAD,CAA1C,IAAoDqJ,oBAAoB,CAACrJ,IAAD,CAAxE,IAAkFsJ,sBAAsB,CAACtJ,IAAD,CAA/G;AACD,CAFM;AAGP,OAAO,IAAI8J,YAAY,GAAGtK,YAAY,CAAC,QAAD,CAA/B;AACP,OAAO,IAAIuK,oBAAoB,GAAGvK,YAAY,CAAC,gBAAD,CAAvC;AACP,OAAO,IAAIwK,wBAAwB,GAAGxK,YAAY,CAAC,oBAAD,CAA3C;AACP,OAAO,IAAIyK,0BAA0B,GAAGzK,YAAY,CAAC,sBAAD,CAA7C;AACP,OAAO,IAAI0K,uBAAuB,GAAG1K,YAAY,CAAC,mBAAD,CAA1C;AACP,OAAO,IAAI2K,kBAAkB,GAAG3K,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAI4K,iBAAiB,GAAG5K,YAAY,CAAC,aAAD,CAApC;AACP,OAAO,IAAI6K,qBAAqB,GAAG7K,YAAY,CAAC,iBAAD,CAAxC;AACP,OAAO,IAAI8K,8BAA8B,GAAG9K,YAAY,CAAC,0BAAD,CAAjD;AACP,OAAO,IAAI+K,sBAAsB,GAAG/K,YAAY,CAAC,kBAAD,CAAzC;AACP,OAAO,IAAIgL,mCAAmC,GAAGhL,YAAY,CAAC,+BAAD,CAAtD;AACP,OAAO,IAAIiL,qBAAqB,GAAGjL,YAAY,CAAC,iBAAD,CAAxC;AACP,OAAO,IAAIkL,WAAW,GAAGlL,YAAY,CAAC,OAAD,CAA9B;AACP,OAAO,IAAImL,mBAAmB,GAAGnL,YAAY,CAAC,eAAD,CAAtC;AACP,OAAO,IAAIoL,mBAAmB,GAAGpL,YAAY,CAAC,eAAD,CAAtC;AACP,OAAO,IAAIqL,mBAAmB,GAAGrL,YAAY,CAAC,eAAD,CAAtC;AACP,OAAO,IAAIsL,uBAAuB,GAAGtL,YAAY,CAAC,mBAAD,CAA1C;AACP,OAAO,IAAIuL,kBAAkB,GAAGvL,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAIwL,UAAU,GAAGxL,YAAY,CAAC,MAAD,CAA7B;AACP,OAAO,IAAIyL,wBAAwB,GAAGzL,YAAY,CAAC,oBAAD,CAA3C;AACP,OAAO,IAAI0L,oBAAoB,GAAG1L,YAAY,CAAC,gBAAD,CAAvC;AACP,OAAO,IAAI2L,qBAAqB,GAAG3L,YAAY,CAAC,iBAAD,CAAxC;AACP,OAAO,IAAI4L,WAAW,GAAG5L,YAAY,CAAC,OAAD,CAA9B;AACP,OAAO,IAAI6L,gBAAgB,GAAG7L,YAAY,CAAC,YAAD,CAAnC;AACP,OAAO,IAAI8L,oBAAoB,GAAG9L,YAAY,CAAC,gBAAD,CAAvC;AACP,OAAO,IAAI+L,kBAAkB,GAAG/L,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAIgM,UAAU,GAAGhM,YAAY,CAAC,MAAD,CAA7B;AACP,OAAO,IAAIiM,YAAY,GAAGjM,YAAY,CAAC,QAAD,CAA/B;AACP,OAAO,IAAIkM,WAAW,GAAGlM,YAAY,CAAC,OAAD,CAA9B;AACP,OAAO,IAAImM,YAAY,GAAGnM,YAAY,CAAC,QAAD,CAA/B;AACP,OAAO,IAAIoM,qBAAqB,GAAGpM,YAAY,CAAC,iBAAD,CAAxC;AACP,OAAO,IAAIqM,kBAAkB,GAAGrM,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAIsM,uBAAuB,GAAGtM,YAAY,CAAC,mBAAD,CAA1C;AACP,OAAO,IAAIuM,kBAAkB,GAAGvM,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAIwM,WAAW,GAAGxM,YAAY,CAAC,OAAD,CAA9B;AACP,OAAO,IAAIyM,eAAe,GAAGzM,YAAY,CAAC,WAAD,CAAlC;AACP,OAAO,IAAI0M,aAAa,GAAG1M,YAAY,CAAC,SAAD,CAAhC;AACP,OAAO,IAAI2M,gBAAgB,GAAG3M,YAAY,CAAC,YAAD,CAAnC;AACP,OAAO,IAAI4M,sBAAsB,GAAG5M,YAAY,CAAC,kBAAD,CAAzC;AACP,OAAO,IAAI6M,qBAAqB,GAAG7M,YAAY,CAAC,iBAAD,CAAxC;AACP,OAAO,IAAI8M,6BAA6B,GAAG9M,YAAY,CAAC,yBAAD,CAAhD;AACP,OAAO,IAAI+M,eAAe,GAAG/M,YAAY,CAAC,WAAD,CAAlC;AACP,OAAO,IAAIgN,UAAU,GAAGhN,YAAY,CAAC,MAAD,CAA7B;AACP,OAAO,IAAIiN,sBAAsB,GAAGjN,YAAY,CAAC,kBAAD,CAAzC;AACP,OAAO,IAAIkN,kBAAkB,GAAGlN,YAAY,CAAC,cAAD,CAArC;AACP,OAAO,IAAImN,wBAAwB,GAAGnN,YAAY,CAAC,oBAAD,CAA3C;AACP,OAAO,IAAIoN,0BAA0B,GAAGpN,YAAY,CAAC,sBAAD,CAA7C;AACP,OAAO,IAAIqN,aAAa,GAAG;EACzBC,MAAM,EAAE,CAAC,MAAD,CADiB;EAEzBC,cAAc,EAAE,CAAC,MAAD,CAFS;EAGzBC,kBAAkB,EAAE,CAAC,MAAD,CAHK;EAIzBC,oBAAoB,EAAE,CAAC,MAAD,CAJG;EAKzBC,iBAAiB,EAAE,CAAC,MAAD,CALM;EAMzBC,YAAY,EAAE,CAAC,MAAD,CANW;EAOzBC,WAAW,EAAE,CAAC,MAAD,CAPY;EAQzBC,eAAe,EAAE,CAAC,MAAD,CARQ;EASzBC,wBAAwB,EAAE,CAAC,MAAD,CATD;EAUzBC,gBAAgB,EAAE,CAAC,MAAD,CAVO;EAWzBC,6BAA6B,EAAE,CAAC,MAAD,CAXN;EAYzBC,eAAe,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,aAAlB,CAZQ;EAazBC,KAAK,EAAE,CAAC,MAAD,EAAS,YAAT,EAAuB,aAAvB,CAbkB;EAczBC,aAAa,EAAE,CAAC,MAAD,EAAS,aAAT,CAdU;EAezBC,aAAa,EAAE,CAAC,MAAD,EAAS,YAAT,CAfU;EAgBzBC,aAAa,EAAE,CAAC,MAAD,EAAS,gBAAT,EAA2B,YAA3B,CAhBU;EAiBzBC,iBAAiB,EAAE,CAAC,MAAD,EAAS,gBAAT,EAA2B,YAA3B,CAjBM;EAkBzBC,YAAY,EAAE,CAAC,MAAD,EAAS,gBAAT,EAA2B,YAA3B,CAlBW;EAmBzBC,IAAI,EAAE,CAAC,MAAD,CAnBmB;EAoBzBC,kBAAkB,EAAE,CAAC,MAAD,CApBK;EAqBzBC,cAAc,EAAE,CAAC,MAAD,EAAS,YAAT,CArBS;EAsBzBC,eAAe,EAAE,CAAC,MAAD,EAAS,aAAT,CAtBQ;EAuBzBC,KAAK,EAAE,CAAC,MAAD,CAvBkB;EAwBzBC,UAAU,EAAE,CAAC,MAAD,EAAS,aAAT,CAxBa;EAyBzBC,cAAc,EAAE,CAAC,MAAD,CAzBS;EA0BzBC,YAAY,EAAE,CAAC,MAAD,CA1BW;EA2BzBC,IAAI,EAAE,CAAC,MAAD,CA3BmB;EA4BzBC,MAAM,EAAE,CAAC,MAAD,CA5BiB;EA6BzBC,KAAK,EAAE,CAAC,MAAD,EAAS,aAAT,CA7BkB;EA8BzBC,MAAM,EAAE,CAAC,MAAD,EAAS,aAAT,CA9BiB;EA+BzBC,eAAe,EAAE,CAAC,MAAD,EAAS,aAAT,CA/BQ;EAgCzBC,YAAY,EAAE,CAAC,MAAD,CAhCW;EAiCzBC,iBAAiB,EAAE,CAAC,MAAD,CAjCM;EAkCzBC,YAAY,EAAE,CAAC,MAAD,CAlCW;EAmCzBC,KAAK,EAAE,CAAC,MAAD,CAnCkB;EAoCzBC,SAAS,EAAE,CAAC,MAAD,CApCc;EAqCzBC,OAAO,EAAE,CAAC,MAAD,CArCgB;EAsCzBC,UAAU,EAAE,CAAC,MAAD,EAAS,YAAT,CAtCa;EAuCzBC,gBAAgB,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,aAAlB,CAvCO;EAwCzBC,eAAe,EAAE,CAAC,MAAD,EAAS,aAAT,CAxCQ;EAyCzBC,uBAAuB,EAAE,CAAC,MAAD,EAAS,aAAT,CAzCA;EA0CzBC,SAAS,EAAE,CAAC,MAAD,CA1Cc;EA2CzBC,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CA3CmB;EA4CzBC,gBAAgB,EAAE,CAAC,MAAD,EAAS,WAAT,CA5CO;EA6CzBC,YAAY,EAAE,CAAC,MAAD,EAAS,WAAT,CA7CW;EA8CzBC,kBAAkB,EAAE,CAAC,MAAD,EAAS,WAAT,CA9CK;EA+CzBC,oBAAoB,EAAE,CAAC,MAAD,EAAS,WAAT;AA/CG,CAApB;AAiDP,OAAO,IAAIC,iBAAiB,GAAG,CAAC,QAAD,EAAW,gBAAX,EAA6B,oBAA7B,EAAmD,sBAAnD,EAA2E,mBAA3E,EAAgG,cAAhG,EAAgH,aAAhH,EAA+H,iBAA/H,EAAkJ,0BAAlJ,EAA8K,kBAA9K,EAAkM,+BAAlM,EAAmO,iBAAnO,EAAsP,OAAtP,EAA+P,eAA/P,EAAgR,eAAhR,EAAiS,eAAjS,EAAkT,mBAAlT,EAAuU,cAAvU,EAAuV,MAAvV,EAA+V,oBAA/V,EAAqX,gBAArX,EAAuY,iBAAvY,EAA0Z,OAA1Z,EAAma,YAAna,EAAib,gBAAjb,EAAmc,cAAnc,EAAmd,MAAnd,EAA2d,QAA3d,EAAqe,OAAre,EAA8e,QAA9e,EAAwf,iBAAxf,EAA2gB,cAA3gB,EAA2hB,mBAA3hB,EAAgjB,cAAhjB,EAAgkB,OAAhkB,EAAykB,WAAzkB,EAAslB,SAAtlB,EAAimB,YAAjmB,EAA+mB,kBAA/mB,EAAmoB,iBAAnoB,EAAspB,yBAAtpB,EAAirB,WAAjrB,EAA8rB,MAA9rB,EAAssB,kBAAtsB,EAA0tB,cAA1tB,EAA0uB,oBAA1uB,EAAgwB,sBAAhwB,EAAwxB,MAAxxB,EAAgyB,OAAhyB,EAAyyB,aAAzyB,EAAwzB,YAAxzB,EAAs0B,gBAAt0B,EAAw1B,aAAx1B,EAAu2B,WAAv2B,CAAxB"},"metadata":{},"sourceType":"module"}