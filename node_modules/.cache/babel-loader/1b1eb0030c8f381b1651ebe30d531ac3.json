{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst errCode = require('err-code');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async function (name, password) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');\n  };\n\n  return exportKey;\n});","map":{"version":3,"names":["configure","require","errCode","module","exports","api","exportKey","name","password","options","Error"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/key/export.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,SAAS,GAAG,gBAAOC,IAAP,EAAaC,QAAb,EAAwC;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;IACxD,MAAMP,OAAO,CAAC,IAAIQ,KAAJ,CAAU,iBAAV,CAAD,EAA+B,qBAA/B,CAAb;EACD,CAFD;;EAIA,OAAOJ,SAAP;AACD,CATyB,CAA1B"},"metadata":{},"sourceType":"script"}