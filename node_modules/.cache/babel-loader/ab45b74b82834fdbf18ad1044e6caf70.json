{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\n\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\n\nconst MANGLED_MODULE = \"a\";\n/**\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\n\nconst getUsedDependencies = (module, mangle) => {\n  /** @type {UsedWasmDependency[]} */\n  const array = [];\n  let importIndex = 0;\n\n  for (const dep of module.dependencies) {\n    if (dep instanceof WebAssemblyImportDependency) {\n      if (dep.description.type === \"GlobalType\" || dep.module === null) {\n        continue;\n      }\n\n      const exportName = dep.name; // TODO add the following 3 lines when removing of ModuleExport is possible\n      // const importedModule = dep.module;\n      // const usedName = importedModule && importedModule.isUsed(exportName);\n      // if (usedName !== false) {\n\n      if (mangle) {\n        array.push({\n          dependency: dep,\n          name: Template.numberToIdentifer(importIndex++),\n          module: MANGLED_MODULE\n        });\n      } else {\n        array.push({\n          dependency: dep,\n          name: exportName,\n          module: dep.request\n        });\n      }\n    }\n  }\n\n  return array;\n};\n\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;","map":{"version":3,"names":["Template","require","WebAssemblyImportDependency","MANGLED_MODULE","getUsedDependencies","module","mangle","array","importIndex","dep","dependencies","description","type","exportName","name","push","dependency","numberToIdentifer","request","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/wasm/WebAssemblyUtils.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nconst MANGLED_MODULE = \"a\";\n\n/**\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nconst getUsedDependencies = (module, mangle) => {\n\t/** @type {UsedWasmDependency[]} */\n\tconst array = [];\n\tlet importIndex = 0;\n\tfor (const dep of module.dependencies) {\n\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\tif (dep.description.type === \"GlobalType\" || dep.module === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst exportName = dep.name;\n\t\t\t// TODO add the following 3 lines when removing of ModuleExport is possible\n\t\t\t// const importedModule = dep.module;\n\t\t\t// const usedName = importedModule && importedModule.isUsed(exportName);\n\t\t\t// if (usedName !== false) {\n\t\t\tif (mangle) {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: Template.numberToIdentifer(importIndex++),\n\t\t\t\t\tmodule: MANGLED_MODULE\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: exportName,\n\t\t\t\t\tmodule: dep.request\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n};\n\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAMC,2BAA2B,GAAGD,OAAO,CAAC,6CAAD,CAA3C;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,cAAc,GAAG,GAAvB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;EAC/C;EACA,MAAMC,KAAK,GAAG,EAAd;EACA,IAAIC,WAAW,GAAG,CAAlB;;EACA,KAAK,MAAMC,GAAX,IAAkBJ,MAAM,CAACK,YAAzB,EAAuC;IACtC,IAAID,GAAG,YAAYP,2BAAnB,EAAgD;MAC/C,IAAIO,GAAG,CAACE,WAAJ,CAAgBC,IAAhB,KAAyB,YAAzB,IAAyCH,GAAG,CAACJ,MAAJ,KAAe,IAA5D,EAAkE;QACjE;MACA;;MAED,MAAMQ,UAAU,GAAGJ,GAAG,CAACK,IAAvB,CAL+C,CAM/C;MACA;MACA;MACA;;MACA,IAAIR,MAAJ,EAAY;QACXC,KAAK,CAACQ,IAAN,CAAW;UACVC,UAAU,EAAEP,GADF;UAEVK,IAAI,EAAEd,QAAQ,CAACiB,iBAAT,CAA2BT,WAAW,EAAtC,CAFI;UAGVH,MAAM,EAAEF;QAHE,CAAX;MAKA,CAND,MAMO;QACNI,KAAK,CAACQ,IAAN,CAAW;UACVC,UAAU,EAAEP,GADF;UAEVK,IAAI,EAAED,UAFI;UAGVR,MAAM,EAAEI,GAAG,CAACS;QAHF,CAAX;MAKA;IACD;EACD;;EACD,OAAOX,KAAP;AACA,CA/BD;;AAiCAY,OAAO,CAACf,mBAAR,GAA8BA,mBAA9B;AACAe,OAAO,CAAChB,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}