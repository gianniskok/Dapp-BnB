{"ast":null,"code":"'use strict';\n\nvar extend = require('extend-shallow');\n\nvar safe = require('safe-regex');\n/**\n * The main export is a function that takes a `pattern` string and an `options` object.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not('foo'));\n & //=> /^(?:(?!^(?:foo)$).)*$/\n * ```\n *\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {RegExp} Converts the given `pattern` to a regex using the specified `options`.\n * @api public\n */\n\n\nfunction toRegex(pattern, options) {\n  return new RegExp(toRegex.create(pattern, options));\n}\n/**\n * Create a regex-compatible string from the given `pattern` and `options`.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not.create('foo'));\n & //=> '^(?:(?!^(?:foo)$).)*$'\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\n\ntoRegex.create = function (pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  var opts = extend({}, options);\n\n  if (opts.contains === true) {\n    opts.strictNegate = false;\n  }\n\n  var open = opts.strictOpen !== false ? '^' : '';\n  var close = opts.strictClose !== false ? '$' : '';\n  var endChar = opts.endChar ? opts.endChar : '+';\n  var str = pattern;\n\n  if (opts.strictNegate === false) {\n    str = '(?:(?!(?:' + pattern + ')).)' + endChar;\n  } else {\n    str = '(?:(?!^(?:' + pattern + ')$).)' + endChar;\n  }\n\n  var res = open + str + close;\n\n  if (opts.safe === true && safe(res) === false) {\n    throw new Error('potentially unsafe regular expression: ' + res);\n  }\n\n  return res;\n};\n/**\n * Expose `toRegex`\n */\n\n\nmodule.exports = toRegex;","map":{"version":3,"names":["extend","require","safe","toRegex","pattern","options","RegExp","create","TypeError","opts","contains","strictNegate","open","strictOpen","close","strictClose","endChar","str","res","Error","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/regex-not/index.js"],"sourcesContent":["'use strict';\n\nvar extend = require('extend-shallow');\nvar safe = require('safe-regex');\n\n/**\n * The main export is a function that takes a `pattern` string and an `options` object.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not('foo'));\n & //=> /^(?:(?!^(?:foo)$).)*$/\n * ```\n *\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {RegExp} Converts the given `pattern` to a regex using the specified `options`.\n * @api public\n */\n\nfunction toRegex(pattern, options) {\n  return new RegExp(toRegex.create(pattern, options));\n}\n\n/**\n * Create a regex-compatible string from the given `pattern` and `options`.\n *\n * ```js\n & var not = require('regex-not');\n & console.log(not.create('foo'));\n & //=> '^(?:(?!^(?:foo)$).)*$'\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\ntoRegex.create = function(pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  var opts = extend({}, options);\n  if (opts.contains === true) {\n    opts.strictNegate = false;\n  }\n\n  var open = opts.strictOpen !== false ? '^' : '';\n  var close = opts.strictClose !== false ? '$' : '';\n  var endChar = opts.endChar ? opts.endChar : '+';\n  var str = pattern;\n\n  if (opts.strictNegate === false) {\n    str = '(?:(?!(?:' + pattern + ')).)' + endChar;\n  } else {\n    str = '(?:(?!^(?:' + pattern + ')$).)' + endChar;\n  }\n\n  var res = open + str + close;\n  if (opts.safe === true && safe(res) === false) {\n    throw new Error('potentially unsafe regular expression: ' + res);\n  }\n\n  return res;\n};\n\n/**\n * Expose `toRegex`\n */\n\nmodule.exports = toRegex;\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,YAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,OAAT,CAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;EACjC,OAAO,IAAIC,MAAJ,CAAWH,OAAO,CAACI,MAAR,CAAeH,OAAf,EAAwBC,OAAxB,CAAX,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAF,OAAO,CAACI,MAAR,GAAiB,UAASH,OAAT,EAAkBC,OAAlB,EAA2B;EAC1C,IAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;IAC/B,MAAM,IAAII,SAAJ,CAAc,mBAAd,CAAN;EACD;;EAED,IAAIC,IAAI,GAAGT,MAAM,CAAC,EAAD,EAAKK,OAAL,CAAjB;;EACA,IAAII,IAAI,CAACC,QAAL,KAAkB,IAAtB,EAA4B;IAC1BD,IAAI,CAACE,YAAL,GAAoB,KAApB;EACD;;EAED,IAAIC,IAAI,GAAGH,IAAI,CAACI,UAAL,KAAoB,KAApB,GAA4B,GAA5B,GAAkC,EAA7C;EACA,IAAIC,KAAK,GAAGL,IAAI,CAACM,WAAL,KAAqB,KAArB,GAA6B,GAA7B,GAAmC,EAA/C;EACA,IAAIC,OAAO,GAAGP,IAAI,CAACO,OAAL,GAAeP,IAAI,CAACO,OAApB,GAA8B,GAA5C;EACA,IAAIC,GAAG,GAAGb,OAAV;;EAEA,IAAIK,IAAI,CAACE,YAAL,KAAsB,KAA1B,EAAiC;IAC/BM,GAAG,GAAG,cAAcb,OAAd,GAAwB,MAAxB,GAAiCY,OAAvC;EACD,CAFD,MAEO;IACLC,GAAG,GAAG,eAAeb,OAAf,GAAyB,OAAzB,GAAmCY,OAAzC;EACD;;EAED,IAAIE,GAAG,GAAGN,IAAI,GAAGK,GAAP,GAAaH,KAAvB;;EACA,IAAIL,IAAI,CAACP,IAAL,KAAc,IAAd,IAAsBA,IAAI,CAACgB,GAAD,CAAJ,KAAc,KAAxC,EAA+C;IAC7C,MAAM,IAAIC,KAAJ,CAAU,4CAA4CD,GAAtD,CAAN;EACD;;EAED,OAAOA,GAAP;AACD,CA3BD;AA6BA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBlB,OAAjB"},"metadata":{},"sourceType":"script"}