{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\n\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\n\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\n\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\n\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n  constructor(moduleOptions) {\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n  }\n\n  apply(parser) {\n    parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", statement => {\n      const dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(\"\", statement.range);\n      clearDep.loc = Object.create(statement.loc);\n      clearDep.loc.index = -1;\n      parser.state.current.addDependency(clearDep);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n      sideEffectDep.loc = Object.create(statement.loc);\n      sideEffectDep.loc.index = -1;\n      parser.state.current.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", (statement, expr) => {\n      const comments = parser.getComments([statement.range[0], expr.range[0]]);\n      const dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range, comments.map(c => {\n        switch (c.type) {\n          case \"Block\":\n            return `/*${c.value}*/`;\n\n          case \"Line\":\n            return `//${c.value}\\n`;\n        }\n\n        return \"\";\n      }).join(\"\"));\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = -1;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportDeclaration.tap(\"HarmonyExportDependencyParserPlugin\", statement => {});\n    parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, id, name, idx) => {\n      const rename = parser.scope.renames.get(id);\n      let dep;\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      harmonyNamedExports.add(name);\n\n      if (rename === \"imported var\") {\n        const settings = parser.state.harmonySpecifier.get(id);\n        dep = new HarmonyExportImportedSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, harmonyNamedExports, null, this.strictExportPresence);\n      } else {\n        dep = new HarmonyExportSpecifierDependency(parser.state.module, id, name);\n      }\n\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n    parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", (statement, source, id, name, idx) => {\n      const harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n      let harmonyStarExports = null;\n\n      if (name) {\n        harmonyNamedExports.add(name);\n      } else {\n        harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || [];\n      }\n\n      const dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope, id, name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), this.strictExportPresence);\n\n      if (harmonyStarExports) {\n        harmonyStarExports.push(dep);\n      }\n\n      dep.loc = Object.create(statement.loc);\n      dep.loc.index = idx;\n      parser.state.current.addDependency(dep);\n      return true;\n    });\n  }\n\n};","map":{"version":3,"names":["HarmonyExportExpressionDependency","require","HarmonyImportSideEffectDependency","HarmonyExportHeaderDependency","HarmonyExportSpecifierDependency","HarmonyExportImportedSpecifierDependency","ConstDependency","module","exports","HarmonyExportDependencyParserPlugin","constructor","moduleOptions","strictExportPresence","apply","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","current","addDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","harmonyParserScope","exportExpression","expr","comments","getComments","map","c","type","value","join","exportDeclaration","exportSpecifier","id","name","idx","rename","scope","renames","get","harmonyNamedExports","Set","add","settings","harmonySpecifier","sourceOrder","exportImportSpecifier","harmonyStarExports","slice","push"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportDeclaration.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst rename = parser.scope.renames.get(id);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tif (rename === \"imported var\") {\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(id);\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\tsettings.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || [];\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}