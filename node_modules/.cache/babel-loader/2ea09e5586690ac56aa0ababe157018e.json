{"ast":null,"code":"import { isJsonRpcRequest, isJsonRpcResponseSuccess, isJsonRpcResponseError, isInternalEvent, isReservedEvent } from \"@walletconnect/utils\";\n\nclass EventManager {\n  constructor() {\n    this._eventEmitters = [];\n  }\n\n  subscribe(eventEmitter) {\n    this._eventEmitters.push(eventEmitter);\n  }\n\n  unsubscribe(event) {\n    this._eventEmitters = this._eventEmitters.filter(x => x.event !== event);\n  }\n\n  trigger(payload) {\n    let eventEmitters = [];\n    let event;\n\n    if (isJsonRpcRequest(payload)) {\n      event = payload.method;\n    } else if (isJsonRpcResponseSuccess(payload) || isJsonRpcResponseError(payload)) {\n      event = `response:${payload.id}`;\n    } else if (isInternalEvent(payload)) {\n      event = payload.event;\n    } else {\n      event = \"\";\n    }\n\n    if (event) {\n      eventEmitters = this._eventEmitters.filter(eventEmitter => eventEmitter.event === event);\n    }\n\n    if ((!eventEmitters || !eventEmitters.length) && !isReservedEvent(event) && !isInternalEvent(event)) {\n      eventEmitters = this._eventEmitters.filter(eventEmitter => eventEmitter.event === \"call_request\");\n    }\n\n    eventEmitters.forEach(eventEmitter => {\n      if (isJsonRpcResponseError(payload)) {\n        const error = new Error(payload.error.message);\n        eventEmitter.callback(error, null);\n      } else {\n        eventEmitter.callback(null, payload);\n      }\n    });\n  }\n\n}\n\nexport default EventManager;","map":{"version":3,"mappings":"AAAA,SACEA,gBADF,EAEEC,wBAFF,EAGEC,sBAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,sBANP;;AAiBA,MAAMC,YAAN,CAAkB;EAGhBC;IACE,KAAKC,cAAL,GAAsB,EAAtB;EACD;;EAEMC,SAAS,CAACC,YAAD,EAA4B;IAC1C,KAAKF,cAAL,CAAoBG,IAApB,CAAyBD,YAAzB;EACD;;EAEME,WAAW,CAACC,KAAD,EAAc;IAC9B,KAAKL,cAAL,GAAsB,KAAKA,cAAL,CAAoBM,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACF,KAAF,KAAYA,KAA5C,CAAtB;EACD;;EAEMG,OAAO,CACZC,OADY,EAC+E;IAE3F,IAAIC,aAAa,GAAoB,EAArC;IACA,IAAIL,KAAJ;;IAEA,IAAIZ,gBAAgB,CAACgB,OAAD,CAApB,EAA+B;MAC7BJ,KAAK,GAAGI,OAAO,CAACE,MAAhB;IACD,CAFD,MAEO,IAAIjB,wBAAwB,CAACe,OAAD,CAAxB,IAAqCd,sBAAsB,CAACc,OAAD,CAA/D,EAA0E;MAC/EJ,KAAK,GAAG,YAAYI,OAAO,CAACG,EAAE,EAA9B;IACD,CAFM,MAEA,IAAIhB,eAAe,CAACa,OAAD,CAAnB,EAA8B;MACnCJ,KAAK,GAAGI,OAAO,CAACJ,KAAhB;IACD,CAFM,MAEA;MACLA,KAAK,GAAG,EAAR;IACD;;IAED,IAAIA,KAAJ,EAAW;MACTK,aAAa,GAAG,KAAKV,cAAL,CAAoBM,MAApB,CACbJ,YAAD,IAAiCA,YAAY,CAACG,KAAb,KAAuBA,KAD1C,CAAhB;IAGD;;IAED,IACE,CAAC,CAACK,aAAD,IAAkB,CAACA,aAAa,CAACG,MAAlC,KACA,CAAChB,eAAe,CAACQ,KAAD,CADhB,IAEA,CAACT,eAAe,CAACS,KAAD,CAHlB,EAIE;MACAK,aAAa,GAAG,KAAKV,cAAL,CAAoBM,MAApB,CACbJ,YAAD,IAAiCA,YAAY,CAACG,KAAb,KAAuB,cAD1C,CAAhB;IAGD;;IAEDK,aAAa,CAACI,OAAd,CAAuBZ,YAAD,IAAgC;MACpD,IAAIP,sBAAsB,CAACc,OAAD,CAA1B,EAAqC;QACnC,MAAMM,KAAK,GAAG,IAAIC,KAAJ,CAAUP,OAAO,CAACM,KAAR,CAAcE,OAAxB,CAAd;QACAf,YAAY,CAACgB,QAAb,CAAsBH,KAAtB,EAA6B,IAA7B;MACD,CAHD,MAGO;QACLb,YAAY,CAACgB,QAAb,CAAsB,IAAtB,EAA4BT,OAA5B;MACD;IACF,CAPD;EAQD;;AAvDe;;AA0DlB,eAAeX,YAAf","names":["isJsonRpcRequest","isJsonRpcResponseSuccess","isJsonRpcResponseError","isInternalEvent","isReservedEvent","EventManager","constructor","_eventEmitters","subscribe","eventEmitter","push","unsubscribe","event","filter","x","trigger","payload","eventEmitters","method","id","length","forEach","error","Error","message","callback"],"sourceRoot":"","sources":["../../src/events.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}