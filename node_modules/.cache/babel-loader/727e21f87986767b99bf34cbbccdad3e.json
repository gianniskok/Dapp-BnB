{"ast":null,"code":"'use strict';\n\nmodule.exports = inflight;\nlet Bluebird;\n\ntry {\n  Bluebird = require('bluebird');\n} catch (_) {\n  Bluebird = Promise;\n}\n\nconst active = {};\ninflight.active = active;\n\nfunction inflight(unique, doFly) {\n  return Bluebird.all([unique, doFly]).then(function (args) {\n    const unique = args[0];\n    const doFly = args[1];\n\n    if (Array.isArray(unique)) {\n      return Bluebird.all(unique).then(function (uniqueArr) {\n        return _inflight(uniqueArr.join(''), doFly);\n      });\n    } else {\n      return _inflight(unique, doFly);\n    }\n  });\n\n  function _inflight(unique, doFly) {\n    if (!active[unique]) {\n      active[unique] = new Bluebird(function (resolve) {\n        return resolve(doFly());\n      });\n      active[unique].then(cleanup, cleanup);\n\n      function cleanup() {\n        delete active[unique];\n      }\n    }\n\n    return active[unique];\n  }\n}","map":{"version":3,"names":["module","exports","inflight","Bluebird","require","_","Promise","active","unique","doFly","all","then","args","Array","isArray","uniqueArr","_inflight","join","resolve","cleanup"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/promise-inflight/inflight.js"],"sourcesContent":["'use strict'\nmodule.exports = inflight\n\nlet Bluebird\ntry {\n  Bluebird = require('bluebird')\n} catch (_) {\n  Bluebird = Promise\n}\n\nconst active = {}\ninflight.active = active\nfunction inflight (unique, doFly) {\n  return Bluebird.all([unique, doFly]).then(function (args) {\n    const unique = args[0]\n    const doFly = args[1]\n    if (Array.isArray(unique)) {\n      return Bluebird.all(unique).then(function (uniqueArr) {\n        return _inflight(uniqueArr.join(''), doFly)\n      })\n    } else {\n      return _inflight(unique, doFly)\n    }\n  })\n\n  function _inflight (unique, doFly) {\n    if (!active[unique]) {\n      active[unique] = (new Bluebird(function (resolve) {\n        return resolve(doFly())\n      }))\n      active[unique].then(cleanup, cleanup)\n      function cleanup() { delete active[unique] }\n    }\n    return active[unique]\n  }\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AAEA,IAAIC,QAAJ;;AACA,IAAI;EACFA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAlB;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU;EACVF,QAAQ,GAAGG,OAAX;AACD;;AAED,MAAMC,MAAM,GAAG,EAAf;AACAL,QAAQ,CAACK,MAAT,GAAkBA,MAAlB;;AACA,SAASL,QAAT,CAAmBM,MAAnB,EAA2BC,KAA3B,EAAkC;EAChC,OAAON,QAAQ,CAACO,GAAT,CAAa,CAACF,MAAD,EAASC,KAAT,CAAb,EAA8BE,IAA9B,CAAmC,UAAUC,IAAV,EAAgB;IACxD,MAAMJ,MAAM,GAAGI,IAAI,CAAC,CAAD,CAAnB;IACA,MAAMH,KAAK,GAAGG,IAAI,CAAC,CAAD,CAAlB;;IACA,IAAIC,KAAK,CAACC,OAAN,CAAcN,MAAd,CAAJ,EAA2B;MACzB,OAAOL,QAAQ,CAACO,GAAT,CAAaF,MAAb,EAAqBG,IAArB,CAA0B,UAAUI,SAAV,EAAqB;QACpD,OAAOC,SAAS,CAACD,SAAS,CAACE,IAAV,CAAe,EAAf,CAAD,EAAqBR,KAArB,CAAhB;MACD,CAFM,CAAP;IAGD,CAJD,MAIO;MACL,OAAOO,SAAS,CAACR,MAAD,EAASC,KAAT,CAAhB;IACD;EACF,CAVM,CAAP;;EAYA,SAASO,SAAT,CAAoBR,MAApB,EAA4BC,KAA5B,EAAmC;IACjC,IAAI,CAACF,MAAM,CAACC,MAAD,CAAX,EAAqB;MACnBD,MAAM,CAACC,MAAD,CAAN,GAAkB,IAAIL,QAAJ,CAAa,UAAUe,OAAV,EAAmB;QAChD,OAAOA,OAAO,CAACT,KAAK,EAAN,CAAd;MACD,CAFiB,CAAlB;MAGAF,MAAM,CAACC,MAAD,CAAN,CAAeG,IAAf,CAAoBQ,OAApB,EAA6BA,OAA7B;;MACA,SAASA,OAAT,GAAmB;QAAE,OAAOZ,MAAM,CAACC,MAAD,CAAb;MAAuB;IAC7C;;IACD,OAAOD,MAAM,CAACC,MAAD,CAAb;EACD;AACF"},"metadata":{},"sourceType":"script"}