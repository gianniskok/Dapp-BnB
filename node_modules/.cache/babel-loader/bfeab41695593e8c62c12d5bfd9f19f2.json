{"ast":null,"code":"'use strict';\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply(profile) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      original: data.OldCfg,\n      updated: data.NewCfg\n    };\n  }\n\n  return apply;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","apply","profile","options","res","post","signal","searchParams","arg","headers","data","json","original","OldCfg","updated","NewCfg"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/config/profiles/apply.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,KAAf,CAAsBC,OAAtB,EAA6C;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC3C,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,sBAAT,EAAiC;MACjDC,MAAM,EAAEH,OAAO,CAACG,MADiC;MAEjDC,YAAY,EAAEV,iBAAiB,CAAC;QAC9BW,GAAG,EAAEN,OADyB;QAE9B,GAAGC;MAF2B,CAAD,CAFkB;MAMjDM,OAAO,EAAEN,OAAO,CAACM;IANgC,CAAjC,CAAlB;IAQA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;IAEA,OAAO;MACLC,QAAQ,EAAEF,IAAI,CAACG,MADV;MACkBC,OAAO,EAAEJ,IAAI,CAACK;IADhC,CAAP;EAGD;;EAED,OAAOd,KAAP;AACD,CArByB,CAA1B"},"metadata":{},"sourceType":"script"}