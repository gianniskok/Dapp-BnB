{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRCode = void 0;\n\nvar isEqual = require(\"lodash.isequal\");\n\nvar qrGenerator = require(\"qrcode-generator\");\n\nvar React = require(\"react\");\n\nvar ReactDOM = require(\"react-dom\");\n\nvar QRCode =\n/** @class */\nfunction (_super) {\n  __extends(QRCode, _super);\n\n  function QRCode(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.canvas = React.createRef();\n    return _this;\n  }\n\n  QRCode.utf16to8 = function (str) {\n    var out = '',\n        i,\n        c;\n    var len = str.length;\n\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n\n      if (c >= 0x0001 && c <= 0x007F) {\n        out += str.charAt(i);\n      } else if (c > 0x07FF) {\n        out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      } else {\n        out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n      }\n    }\n\n    return out;\n  };\n  /**\r\n   * Draw a rounded square in the canvas\r\n   */\n\n\n  QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\n    ctx.lineWidth = lineWidth;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color; // Adjust coordinates so that the outside of the stroke is aligned to the edges\n\n    y += lineWidth / 2;\n    x += lineWidth / 2;\n    size -= lineWidth;\n\n    if (!Array.isArray(radii)) {\n      radii = [radii, radii, radii, radii];\n    } // Radius should not be greater than half the size or less than zero\n\n\n    radii = radii.map(function (r) {\n      r = Math.min(r, size / 2);\n      return r < 0 ? 0 : r;\n    });\n    var rTopLeft = radii[0] || 0;\n    var rTopRight = radii[1] || 0;\n    var rBottomRight = radii[2] || 0;\n    var rBottomLeft = radii[3] || 0;\n    ctx.beginPath();\n    ctx.moveTo(x + rTopLeft, y);\n    ctx.lineTo(x + size - rTopRight, y);\n    if (rTopRight) ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\n    ctx.lineTo(x + size, y + size - rBottomRight);\n    if (rBottomRight) ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\n    ctx.lineTo(x + rBottomLeft, y + size);\n    if (rBottomLeft) ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\n    ctx.lineTo(x, y + rTopLeft);\n    if (rTopLeft) ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\n    ctx.closePath();\n    ctx.stroke();\n\n    if (fill) {\n      ctx.fill();\n    }\n  };\n  /**\r\n   * Draw a single positional pattern eye.\r\n   */\n\n\n  QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\n    if (radii === void 0) {\n      radii = [0, 0, 0, 0];\n    }\n\n    var lineWidth = Math.ceil(cellSize);\n    var radiiOuter;\n    var radiiInner;\n\n    if (typeof radii !== 'number' && !Array.isArray(radii)) {\n      radiiOuter = radii.outer || 0;\n      radiiInner = radii.inner || 0;\n    } else {\n      radiiOuter = radii;\n      radiiInner = radiiOuter;\n    }\n\n    var colorOuter;\n    var colorInner;\n\n    if (typeof color !== 'string') {\n      colorOuter = color.outer;\n      colorInner = color.inner;\n    } else {\n      colorOuter = color;\n      colorInner = color;\n    }\n\n    var y = row * cellSize + offset;\n    var x = col * cellSize + offset;\n    var size = cellSize * 7; // Outer box\n\n    this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx); // Inner box\n\n    size = cellSize * 3;\n    y += cellSize * 2;\n    x += cellSize * 2;\n    this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\n  };\n\n  ;\n  /**\r\n   * Is this dot inside a positional pattern zone.\r\n   */\n\n  QRCode.prototype.isInPositioninZone = function (col, row, zones) {\n    return zones.some(function (zone) {\n      return row >= zone.row && row <= zone.row + 7 && col >= zone.col && col <= zone.col + 7;\n    });\n  };\n\n  QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\n    return pixelLength / cellSize;\n  };\n\n  QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\n    if (logoImage) {\n      var numberOfCellsMargin = 2;\n      var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\n      var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\n      var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\n      var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\n      return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\n      && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\n    } else {\n      return false;\n    }\n  };\n\n  QRCode.prototype.shouldComponentUpdate = function (nextProps) {\n    return !isEqual(this.props, nextProps);\n  };\n\n  QRCode.prototype.componentDidMount = function () {\n    this.update();\n  };\n\n  QRCode.prototype.componentDidUpdate = function () {\n    this.update();\n  };\n\n  QRCode.prototype.update = function () {\n    var _a = this.props,\n        value = _a.value,\n        ecLevel = _a.ecLevel,\n        enableCORS = _a.enableCORS,\n        size = _a.size,\n        quietZone = _a.quietZone,\n        bgColor = _a.bgColor,\n        fgColor = _a.fgColor,\n        logoImage = _a.logoImage,\n        logoWidth = _a.logoWidth,\n        logoHeight = _a.logoHeight,\n        logoOpacity = _a.logoOpacity,\n        removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo,\n        qrStyle = _a.qrStyle,\n        eyeRadius = _a.eyeRadius,\n        eyeColor = _a.eyeColor;\n    var qrCode = qrGenerator(0, ecLevel);\n    qrCode.addData(QRCode.utf16to8(value));\n    qrCode.make();\n    var canvas = ReactDOM.findDOMNode(this.canvas.current);\n    var ctx = canvas.getContext('2d');\n    var canvasSize = +size + 2 * +quietZone;\n    var length = qrCode.getModuleCount();\n    var cellSize = size / length;\n    var scale = window.devicePixelRatio || 1;\n    canvas.height = canvas.width = canvasSize * scale;\n    ctx.scale(scale, scale);\n    ctx.fillStyle = bgColor;\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n    var offset = +quietZone;\n    var dWidthLogo = logoWidth || size * 0.2;\n    var dHeightLogo = logoHeight || dWidthLogo;\n    var dxLogo = (size - dWidthLogo) / 2;\n    var dyLogo = (size - dHeightLogo) / 2;\n    var positioningZones = [{\n      row: 0,\n      col: 0\n    }, {\n      row: 0,\n      col: length - 7\n    }, {\n      row: length - 7,\n      col: 0\n    }];\n    ctx.strokeStyle = fgColor;\n\n    if (qrStyle === 'dots') {\n      ctx.fillStyle = fgColor;\n      var radius = cellSize / 2;\n\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\n            ctx.beginPath();\n            ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, radius / 100 * 75, 0, 2 * Math.PI, false);\n            ctx.closePath();\n            ctx.fill();\n          }\n        }\n      }\n    } else {\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\n            ctx.fillStyle = fgColor;\n            var w = Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize);\n            var h = Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize);\n            ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\n          }\n        }\n      }\n    } // Draw positioning patterns\n\n\n    for (var i = 0; i < 3; i++) {\n      var _b = positioningZones[i],\n          row = _b.row,\n          col = _b.col;\n      var radii = eyeRadius;\n      var color = void 0;\n\n      if (Array.isArray(radii)) {\n        radii = radii[i];\n      }\n\n      if (typeof radii == 'number') {\n        radii = [radii, radii, radii, radii];\n      }\n\n      if (!eyeColor) {\n        // if not specified, eye color is the same as foreground, \n        color = fgColor;\n      } else {\n        if (Array.isArray(eyeColor)) {\n          // if array, we pass the single color\n          color = eyeColor[i];\n        } else {\n          color = eyeColor;\n        }\n      }\n\n      this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\n    }\n\n    if (logoImage) {\n      var image_1 = new Image();\n\n      if (enableCORS) {\n        image_1.crossOrigin = 'Anonymous';\n      }\n\n      image_1.onload = function () {\n        ctx.save();\n        ctx.globalAlpha = logoOpacity;\n        ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\n        ctx.restore();\n      };\n\n      image_1.src = logoImage;\n    }\n  };\n\n  QRCode.prototype.render = function () {\n    var _a;\n\n    var size = +this.props.size + 2 * +this.props.quietZone;\n    return React.createElement('canvas', {\n      id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\n      height: size,\n      width: size,\n      style: {\n        height: size + 'px',\n        width: size + 'px'\n      },\n      ref: this.canvas\n    });\n  };\n\n  QRCode.defaultProps = {\n    value: 'https://reactjs.org/',\n    ecLevel: 'M',\n    enableCORS: false,\n    size: 150,\n    quietZone: 10,\n    bgColor: '#FFFFFF',\n    fgColor: '#000000',\n    logoOpacity: 1,\n    removeQrCodeBehindLogo: false,\n    qrStyle: 'squares',\n    eyeRadius: [0, 0, 0]\n  };\n  return QRCode;\n}(React.Component);\n\nexports.QRCode = QRCode;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","QRCode","isEqual","require","qrGenerator","React","ReactDOM","_super","props","_this","call","canvas","createRef","utf16to8","str","out","i","c","len","length","charCodeAt","charAt","String","fromCharCode","drawRoundedSquare","lineWidth","x","y","size","color","radii","fill","ctx","fillStyle","strokeStyle","isArray","map","r","Math","min","rTopLeft","rTopRight","rBottomRight","rBottomLeft","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","drawPositioningPattern","cellSize","offset","row","col","ceil","radiiOuter","radiiInner","outer","inner","colorOuter","colorInner","isInPositioninZone","zones","some","zone","transformPixelLengthIntoNumberOfCells","pixelLength","isCoordinateInImage","dWidthLogo","dHeightLogo","dxLogo","dyLogo","logoImage","numberOfCellsMargin","firstRowOfLogo","firstColumnOfLogo","logoWidthInCells","logoHeightInCells","shouldComponentUpdate","nextProps","componentDidMount","update","componentDidUpdate","_a","ecLevel","enableCORS","quietZone","bgColor","fgColor","logoWidth","logoHeight","logoOpacity","removeQrCodeBehindLogo","qrStyle","eyeRadius","eyeColor","qrCode","addData","make","findDOMNode","current","getContext","canvasSize","getModuleCount","scale","window","devicePixelRatio","height","width","fillRect","positioningZones","radius","isDark","arc","round","PI","w","floor","h","_b","image_1","Image","crossOrigin","onload","save","globalAlpha","drawImage","restore","src","render","createElement","id","style","ref","defaultProps","Component"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/react-qrcode-logo/dist/index.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.QRCode = void 0;\r\nvar isEqual = require(\"lodash.isequal\");\r\nvar qrGenerator = require(\"qrcode-generator\");\r\nvar React = require(\"react\");\r\nvar ReactDOM = require(\"react-dom\");\r\nvar QRCode = /** @class */ (function (_super) {\r\n    __extends(QRCode, _super);\r\n    function QRCode(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.canvas = React.createRef();\r\n        return _this;\r\n    }\r\n    QRCode.utf16to8 = function (str) {\r\n        var out = '', i, c;\r\n        var len = str.length;\r\n        for (i = 0; i < len; i++) {\r\n            c = str.charCodeAt(i);\r\n            if ((c >= 0x0001) && (c <= 0x007F)) {\r\n                out += str.charAt(i);\r\n            }\r\n            else if (c > 0x07FF) {\r\n                out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\r\n                out += String.fromCharCode(0x80 | ((c >> 6) & 0x3F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n            else {\r\n                out += String.fromCharCode(0xC0 | ((c >> 6) & 0x1F));\r\n                out += String.fromCharCode(0x80 | ((c >> 0) & 0x3F));\r\n            }\r\n        }\r\n        return out;\r\n    };\r\n    /**\r\n     * Draw a rounded square in the canvas\r\n     */\r\n    QRCode.prototype.drawRoundedSquare = function (lineWidth, x, y, size, color, radii, fill, ctx) {\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = color;\r\n        // Adjust coordinates so that the outside of the stroke is aligned to the edges\r\n        y += lineWidth / 2;\r\n        x += lineWidth / 2;\r\n        size -= lineWidth;\r\n        if (!Array.isArray(radii)) {\r\n            radii = [radii, radii, radii, radii];\r\n        }\r\n        // Radius should not be greater than half the size or less than zero\r\n        radii = radii.map(function (r) {\r\n            r = Math.min(r, size / 2);\r\n            return (r < 0) ? 0 : r;\r\n        });\r\n        var rTopLeft = radii[0] || 0;\r\n        var rTopRight = radii[1] || 0;\r\n        var rBottomRight = radii[2] || 0;\r\n        var rBottomLeft = radii[3] || 0;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + rTopLeft, y);\r\n        ctx.lineTo(x + size - rTopRight, y);\r\n        if (rTopRight)\r\n            ctx.quadraticCurveTo(x + size, y, x + size, y + rTopRight);\r\n        ctx.lineTo(x + size, y + size - rBottomRight);\r\n        if (rBottomRight)\r\n            ctx.quadraticCurveTo(x + size, y + size, x + size - rBottomRight, y + size);\r\n        ctx.lineTo(x + rBottomLeft, y + size);\r\n        if (rBottomLeft)\r\n            ctx.quadraticCurveTo(x, y + size, x, y + size - rBottomLeft);\r\n        ctx.lineTo(x, y + rTopLeft);\r\n        if (rTopLeft)\r\n            ctx.quadraticCurveTo(x, y, x + rTopLeft, y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        if (fill) {\r\n            ctx.fill();\r\n        }\r\n    };\r\n    /**\r\n     * Draw a single positional pattern eye.\r\n     */\r\n    QRCode.prototype.drawPositioningPattern = function (ctx, cellSize, offset, row, col, color, radii) {\r\n        if (radii === void 0) { radii = [0, 0, 0, 0]; }\r\n        var lineWidth = Math.ceil(cellSize);\r\n        var radiiOuter;\r\n        var radiiInner;\r\n        if (typeof radii !== 'number' && !Array.isArray(radii)) {\r\n            radiiOuter = radii.outer || 0;\r\n            radiiInner = radii.inner || 0;\r\n        }\r\n        else {\r\n            radiiOuter = radii;\r\n            radiiInner = radiiOuter;\r\n        }\r\n        var colorOuter;\r\n        var colorInner;\r\n        if (typeof color !== 'string') {\r\n            colorOuter = color.outer;\r\n            colorInner = color.inner;\r\n        }\r\n        else {\r\n            colorOuter = color;\r\n            colorInner = color;\r\n        }\r\n        var y = (row * cellSize) + offset;\r\n        var x = (col * cellSize) + offset;\r\n        var size = cellSize * 7;\r\n        // Outer box\r\n        this.drawRoundedSquare(lineWidth, x, y, size, colorOuter, radiiOuter, false, ctx);\r\n        // Inner box\r\n        size = cellSize * 3;\r\n        y += cellSize * 2;\r\n        x += cellSize * 2;\r\n        this.drawRoundedSquare(lineWidth, x, y, size, colorInner, radiiInner, true, ctx);\r\n    };\r\n    ;\r\n    /**\r\n     * Is this dot inside a positional pattern zone.\r\n     */\r\n    QRCode.prototype.isInPositioninZone = function (col, row, zones) {\r\n        return zones.some(function (zone) { return (row >= zone.row && row <= zone.row + 7 &&\r\n            col >= zone.col && col <= zone.col + 7); });\r\n    };\r\n    QRCode.prototype.transformPixelLengthIntoNumberOfCells = function (pixelLength, cellSize) {\r\n        return pixelLength / cellSize;\r\n    };\r\n    QRCode.prototype.isCoordinateInImage = function (col, row, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage) {\r\n        if (logoImage) {\r\n            var numberOfCellsMargin = 2;\r\n            var firstRowOfLogo = this.transformPixelLengthIntoNumberOfCells(dxLogo, cellSize);\r\n            var firstColumnOfLogo = this.transformPixelLengthIntoNumberOfCells(dyLogo, cellSize);\r\n            var logoWidthInCells = this.transformPixelLengthIntoNumberOfCells(dWidthLogo, cellSize) - 1;\r\n            var logoHeightInCells = this.transformPixelLengthIntoNumberOfCells(dHeightLogo, cellSize) - 1;\r\n            return row >= firstRowOfLogo - numberOfCellsMargin && row <= firstRowOfLogo + logoWidthInCells + numberOfCellsMargin // check rows\r\n                && col >= firstColumnOfLogo - numberOfCellsMargin && col <= firstColumnOfLogo + logoHeightInCells + numberOfCellsMargin; // check cols\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    QRCode.prototype.shouldComponentUpdate = function (nextProps) {\r\n        return !isEqual(this.props, nextProps);\r\n    };\r\n    QRCode.prototype.componentDidMount = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.componentDidUpdate = function () {\r\n        this.update();\r\n    };\r\n    QRCode.prototype.update = function () {\r\n        var _a = this.props, value = _a.value, ecLevel = _a.ecLevel, enableCORS = _a.enableCORS, size = _a.size, quietZone = _a.quietZone, bgColor = _a.bgColor, fgColor = _a.fgColor, logoImage = _a.logoImage, logoWidth = _a.logoWidth, logoHeight = _a.logoHeight, logoOpacity = _a.logoOpacity, removeQrCodeBehindLogo = _a.removeQrCodeBehindLogo, qrStyle = _a.qrStyle, eyeRadius = _a.eyeRadius, eyeColor = _a.eyeColor;\r\n        var qrCode = qrGenerator(0, ecLevel);\r\n        qrCode.addData(QRCode.utf16to8(value));\r\n        qrCode.make();\r\n        var canvas = ReactDOM.findDOMNode(this.canvas.current);\r\n        var ctx = canvas.getContext('2d');\r\n        var canvasSize = +size + (2 * +quietZone);\r\n        var length = qrCode.getModuleCount();\r\n        var cellSize = size / length;\r\n        var scale = (window.devicePixelRatio || 1);\r\n        canvas.height = canvas.width = canvasSize * scale;\r\n        ctx.scale(scale, scale);\r\n        ctx.fillStyle = bgColor;\r\n        ctx.fillRect(0, 0, canvasSize, canvasSize);\r\n        var offset = +quietZone;\r\n        var dWidthLogo = logoWidth || size * 0.2;\r\n        var dHeightLogo = logoHeight || dWidthLogo;\r\n        var dxLogo = ((size - dWidthLogo) / 2);\r\n        var dyLogo = ((size - dHeightLogo) / 2);\r\n        var positioningZones = [\r\n            { row: 0, col: 0 },\r\n            { row: 0, col: length - 7 },\r\n            { row: length - 7, col: 0 },\r\n        ];\r\n        ctx.strokeStyle = fgColor;\r\n        if (qrStyle === 'dots') {\r\n            ctx.fillStyle = fgColor;\r\n            var radius = cellSize / 2;\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\r\n                        ctx.beginPath();\r\n                        ctx.arc(Math.round(col * cellSize) + radius + offset, Math.round(row * cellSize) + radius + offset, (radius / 100) * 75, 0, 2 * Math.PI, false);\r\n                        ctx.closePath();\r\n                        ctx.fill();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var row = 0; row < length; row++) {\r\n                for (var col = 0; col < length; col++) {\r\n                    if (qrCode.isDark(row, col) && !this.isInPositioninZone(row, col, positioningZones) && !(removeQrCodeBehindLogo && this.isCoordinateInImage(row, col, dWidthLogo, dHeightLogo, dxLogo, dyLogo, cellSize, logoImage))) {\r\n                        ctx.fillStyle = fgColor;\r\n                        var w = (Math.ceil((col + 1) * cellSize) - Math.floor(col * cellSize));\r\n                        var h = (Math.ceil((row + 1) * cellSize) - Math.floor(row * cellSize));\r\n                        ctx.fillRect(Math.round(col * cellSize) + offset, Math.round(row * cellSize) + offset, w, h);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Draw positioning patterns\r\n        for (var i = 0; i < 3; i++) {\r\n            var _b = positioningZones[i], row = _b.row, col = _b.col;\r\n            var radii = eyeRadius;\r\n            var color = void 0;\r\n            if (Array.isArray(radii)) {\r\n                radii = radii[i];\r\n            }\r\n            if (typeof radii == 'number') {\r\n                radii = [radii, radii, radii, radii];\r\n            }\r\n            if (!eyeColor) { // if not specified, eye color is the same as foreground, \r\n                color = fgColor;\r\n            }\r\n            else {\r\n                if (Array.isArray(eyeColor)) { // if array, we pass the single color\r\n                    color = eyeColor[i];\r\n                }\r\n                else {\r\n                    color = eyeColor;\r\n                }\r\n            }\r\n            this.drawPositioningPattern(ctx, cellSize, offset, row, col, color, radii);\r\n        }\r\n        if (logoImage) {\r\n            var image_1 = new Image();\r\n            if (enableCORS) {\r\n                image_1.crossOrigin = 'Anonymous';\r\n            }\r\n            image_1.onload = function () {\r\n                ctx.save();\r\n                ctx.globalAlpha = logoOpacity;\r\n                ctx.drawImage(image_1, dxLogo + offset, dyLogo + offset, dWidthLogo, dHeightLogo);\r\n                ctx.restore();\r\n            };\r\n            image_1.src = logoImage;\r\n        }\r\n    };\r\n    QRCode.prototype.render = function () {\r\n        var _a;\r\n        var size = +this.props.size + (2 * +this.props.quietZone);\r\n        return React.createElement('canvas', {\r\n            id: (_a = this.props.id) !== null && _a !== void 0 ? _a : 'react-qrcode-logo',\r\n            height: size,\r\n            width: size,\r\n            style: { height: size + 'px', width: size + 'px' },\r\n            ref: this.canvas\r\n        });\r\n    };\r\n    QRCode.defaultProps = {\r\n        value: 'https://reactjs.org/',\r\n        ecLevel: 'M',\r\n        enableCORS: false,\r\n        size: 150,\r\n        quietZone: 10,\r\n        bgColor: '#FFFFFF',\r\n        fgColor: '#000000',\r\n        logoOpacity: 1,\r\n        removeQrCodeBehindLogo: false,\r\n        qrStyle: 'squares',\r\n        eyeRadius: [0, 0, 0]\r\n    };\r\n    return QRCode;\r\n}(React.Component));\r\nexports.QRCode = QRCode;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}