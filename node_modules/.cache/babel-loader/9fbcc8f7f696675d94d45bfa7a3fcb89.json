{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst UnsupportedFeatureWarning = require(\"./UnsupportedFeatureWarning\");\n\nconst ParserHelpers = exports;\n\nParserHelpers.addParsedVariableToModule = (parser, name, expression) => {\n  if (!parser.state.current.addVariable) return false;\n  var deps = [];\n  parser.parse(expression, {\n    current: {\n      addDependency: dep => {\n        dep.userRequest = name;\n        deps.push(dep);\n      }\n    },\n    module: parser.state.module\n  });\n  parser.state.current.addVariable(name, expression, deps);\n  return true;\n};\n\nParserHelpers.requireFileAsExpression = (context, pathToModule) => {\n  var moduleJsPath = path.relative(context, pathToModule);\n\n  if (!/^[A-Z]:/i.test(moduleJsPath)) {\n    moduleJsPath = \"./\" + moduleJsPath.replace(/\\\\/g, \"/\");\n  }\n\n  return \"require(\" + JSON.stringify(moduleJsPath) + \")\";\n};\n\nParserHelpers.toConstantDependency = (parser, value) => {\n  return function constDependency(expr) {\n    var dep = new ConstDependency(value, expr.range, false);\n    dep.loc = expr.loc;\n    parser.state.current.addDependency(dep);\n    return true;\n  };\n};\n\nParserHelpers.toConstantDependencyWithWebpackRequire = (parser, value) => {\n  return function constDependencyWithWebpackRequire(expr) {\n    var dep = new ConstDependency(value, expr.range, true);\n    dep.loc = expr.loc;\n    parser.state.current.addDependency(dep);\n    return true;\n  };\n};\n\nParserHelpers.evaluateToString = value => {\n  return function stringExpression(expr) {\n    return new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n  };\n};\n\nParserHelpers.evaluateToBoolean = value => {\n  return function booleanExpression(expr) {\n    return new BasicEvaluatedExpression().setBoolean(value).setRange(expr.range);\n  };\n};\n\nParserHelpers.evaluateToIdentifier = (identifier, truthy) => {\n  return function identifierExpression(expr) {\n    let evex = new BasicEvaluatedExpression().setIdentifier(identifier).setRange(expr.range);\n\n    if (truthy === true) {\n      evex = evex.setTruthy();\n    } else if (truthy === false) {\n      evex = evex.setFalsy();\n    }\n\n    return evex;\n  };\n};\n\nParserHelpers.expressionIsUnsupported = (parser, message) => {\n  return function unsupportedExpression(expr) {\n    var dep = new ConstDependency(\"(void 0)\", expr.range, false);\n    dep.loc = expr.loc;\n    parser.state.current.addDependency(dep);\n    if (!parser.state.module) return;\n    parser.state.module.warnings.push(new UnsupportedFeatureWarning(parser.state.module, message, expr.loc));\n    return true;\n  };\n};\n\nParserHelpers.skipTraversal = function skipTraversal() {\n  return true;\n};\n\nParserHelpers.approve = function approve() {\n  return true;\n};","map":{"version":3,"names":["path","require","BasicEvaluatedExpression","ConstDependency","UnsupportedFeatureWarning","ParserHelpers","exports","addParsedVariableToModule","parser","name","expression","state","current","addVariable","deps","parse","addDependency","dep","userRequest","push","module","requireFileAsExpression","context","pathToModule","moduleJsPath","relative","test","replace","JSON","stringify","toConstantDependency","value","constDependency","expr","range","loc","toConstantDependencyWithWebpackRequire","constDependencyWithWebpackRequire","evaluateToString","stringExpression","setString","setRange","evaluateToBoolean","booleanExpression","setBoolean","evaluateToIdentifier","identifier","truthy","identifierExpression","evex","setIdentifier","setTruthy","setFalsy","expressionIsUnsupported","message","unsupportedExpression","warnings","skipTraversal","approve"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/ParserHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst path = require(\"path\");\n\nconst BasicEvaluatedExpression = require(\"./BasicEvaluatedExpression\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst UnsupportedFeatureWarning = require(\"./UnsupportedFeatureWarning\");\n\nconst ParserHelpers = exports;\n\nParserHelpers.addParsedVariableToModule = (parser, name, expression) => {\n\tif (!parser.state.current.addVariable) return false;\n\tvar deps = [];\n\tparser.parse(expression, {\n\t\tcurrent: {\n\t\t\taddDependency: dep => {\n\t\t\t\tdep.userRequest = name;\n\t\t\t\tdeps.push(dep);\n\t\t\t}\n\t\t},\n\t\tmodule: parser.state.module\n\t});\n\tparser.state.current.addVariable(name, expression, deps);\n\treturn true;\n};\n\nParserHelpers.requireFileAsExpression = (context, pathToModule) => {\n\tvar moduleJsPath = path.relative(context, pathToModule);\n\tif (!/^[A-Z]:/i.test(moduleJsPath)) {\n\t\tmoduleJsPath = \"./\" + moduleJsPath.replace(/\\\\/g, \"/\");\n\t}\n\treturn \"require(\" + JSON.stringify(moduleJsPath) + \")\";\n};\n\nParserHelpers.toConstantDependency = (parser, value) => {\n\treturn function constDependency(expr) {\n\t\tvar dep = new ConstDependency(value, expr.range, false);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.toConstantDependencyWithWebpackRequire = (parser, value) => {\n\treturn function constDependencyWithWebpackRequire(expr) {\n\t\tvar dep = new ConstDependency(value, expr.range, true);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.evaluateToString = value => {\n\treturn function stringExpression(expr) {\n\t\treturn new BasicEvaluatedExpression().setString(value).setRange(expr.range);\n\t};\n};\n\nParserHelpers.evaluateToBoolean = value => {\n\treturn function booleanExpression(expr) {\n\t\treturn new BasicEvaluatedExpression()\n\t\t\t.setBoolean(value)\n\t\t\t.setRange(expr.range);\n\t};\n};\n\nParserHelpers.evaluateToIdentifier = (identifier, truthy) => {\n\treturn function identifierExpression(expr) {\n\t\tlet evex = new BasicEvaluatedExpression()\n\t\t\t.setIdentifier(identifier)\n\t\t\t.setRange(expr.range);\n\t\tif (truthy === true) {\n\t\t\tevex = evex.setTruthy();\n\t\t} else if (truthy === false) {\n\t\t\tevex = evex.setFalsy();\n\t\t}\n\t\treturn evex;\n\t};\n};\n\nParserHelpers.expressionIsUnsupported = (parser, message) => {\n\treturn function unsupportedExpression(expr) {\n\t\tvar dep = new ConstDependency(\"(void 0)\", expr.range, false);\n\t\tdep.loc = expr.loc;\n\t\tparser.state.current.addDependency(dep);\n\t\tif (!parser.state.module) return;\n\t\tparser.state.module.warnings.push(\n\t\t\tnew UnsupportedFeatureWarning(parser.state.module, message, expr.loc)\n\t\t);\n\t\treturn true;\n\t};\n};\n\nParserHelpers.skipTraversal = function skipTraversal() {\n\treturn true;\n};\n\nParserHelpers.approve = function approve() {\n\treturn true;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}