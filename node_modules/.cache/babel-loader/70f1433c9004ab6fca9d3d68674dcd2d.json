{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\n\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nclass EvalSourceMapDevToolPlugin {\n  constructor(options) {\n    if (arguments.length > 1) {\n      throw new Error(\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\");\n    }\n\n    if (typeof options === \"string\") {\n      options = {\n        append: options\n      };\n    }\n\n    if (!options) options = {};\n    this.options = options;\n  }\n\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"EvalSourceMapDevToolPlugin\", compilation => {\n      new SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n      new EvalSourceMapDevToolModuleTemplatePlugin(compilation, options).apply(compilation.moduleTemplates.javascript);\n    });\n  }\n\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;","map":{"version":3,"names":["EvalSourceMapDevToolModuleTemplatePlugin","require","SourceMapDevToolModuleOptionsPlugin","EvalSourceMapDevToolPlugin","constructor","options","arguments","length","Error","append","apply","compiler","hooks","compilation","tap","moduleTemplates","javascript","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/EvalSourceMapDevToolPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst EvalSourceMapDevToolModuleTemplatePlugin = require(\"./EvalSourceMapDevToolModuleTemplatePlugin\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\n\nclass EvalSourceMapDevToolPlugin {\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"EvalSourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\t\tif (typeof options === \"string\") {\n\t\t\toptions = {\n\t\t\t\tappend: options\n\t\t\t};\n\t\t}\n\t\tif (!options) options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"EvalSourceMapDevToolPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\t\t\t\tnew EvalSourceMapDevToolModuleTemplatePlugin(\n\t\t\t\t\tcompilation,\n\t\t\t\t\toptions\n\t\t\t\t).apply(compilation.moduleTemplates.javascript);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = EvalSourceMapDevToolPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,wCAAwC,GAAGC,OAAO,CAAC,4CAAD,CAAxD;;AACA,MAAMC,mCAAmC,GAAGD,OAAO,CAAC,uCAAD,CAAnD;;AAEA,MAAME,0BAAN,CAAiC;EAChCC,WAAW,CAACC,OAAD,EAAU;IACpB,IAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;MACzB,MAAM,IAAIC,KAAJ,CACL,6EADK,CAAN;IAGA;;IACD,IAAI,OAAOH,OAAP,KAAmB,QAAvB,EAAiC;MAChCA,OAAO,GAAG;QACTI,MAAM,EAAEJ;MADC,CAAV;IAGA;;IACD,IAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;IACd,KAAKA,OAAL,GAAeA,OAAf;EACA;;EAEDK,KAAK,CAACC,QAAD,EAAW;IACf,MAAMN,OAAO,GAAG,KAAKA,OAArB;IACAM,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,4BADD,EAECD,WAAW,IAAI;MACd,IAAIX,mCAAJ,CAAwCG,OAAxC,EAAiDK,KAAjD,CAAuDG,WAAvD;MACA,IAAIb,wCAAJ,CACCa,WADD,EAECR,OAFD,EAGEK,KAHF,CAGQG,WAAW,CAACE,eAAZ,CAA4BC,UAHpC;IAIA,CARF;EAUA;;AA5B+B;;AA+BjCC,MAAM,CAACC,OAAP,GAAiBf,0BAAjB"},"metadata":{},"sourceType":"script"}