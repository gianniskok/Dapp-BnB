{"ast":null,"code":"'use strict';\n\nvar brackets = require('expand-brackets');\n/**\n * Extglob compilers\n */\n\n\nmodule.exports = function (extglob) {\n  function star() {\n    if (typeof extglob.options.star === 'function') {\n      return extglob.options.star.apply(this, arguments);\n    }\n\n    if (typeof extglob.options.star === 'string') {\n      return extglob.options.star;\n    }\n\n    return '.*?';\n  }\n  /**\n   * Use `expand-brackets` compilers\n   */\n\n\n  extglob.use(brackets.compilers);\n  extglob.compiler\n  /**\n   * Escaped: \"\\\\*\"\n   */\n  .set('escape', function (node) {\n    return this.emit(node.val, node);\n  })\n  /**\n   * Dot: \".\"\n   */\n  .set('dot', function (node) {\n    return this.emit('\\\\' + node.val, node);\n  })\n  /**\n   * Question mark: \"?\"\n   */\n  .set('qmark', function (node) {\n    var val = '[^\\\\\\\\/.]';\n    var prev = this.prev();\n\n    if (node.parsed.slice(-1) === '(') {\n      var ch = node.rest.charAt(0);\n\n      if (ch !== '!' && ch !== '=' && ch !== ':') {\n        return this.emit(val, node);\n      }\n\n      return this.emit(node.val, node);\n    }\n\n    if (prev.type === 'text' && prev.val) {\n      return this.emit(val, node);\n    }\n\n    if (node.val.length > 1) {\n      val += '{' + node.val.length + '}';\n    }\n\n    return this.emit(val, node);\n  })\n  /**\n   * Plus: \"+\"\n   */\n  .set('plus', function (node) {\n    var prev = node.parsed.slice(-1);\n\n    if (prev === ']' || prev === ')') {\n      return this.emit(node.val, node);\n    }\n\n    var ch = this.output.slice(-1);\n\n    if (!this.output || /[?*+]/.test(ch) && node.parent.type !== 'bracket') {\n      return this.emit('\\\\+', node);\n    }\n\n    if (/\\w/.test(ch) && !node.inside) {\n      return this.emit('+\\\\+?', node);\n    }\n\n    return this.emit('+', node);\n  })\n  /**\n   * Star: \"*\"\n   */\n  .set('star', function (node) {\n    var prev = this.prev();\n    var prefix = prev.type !== 'text' && prev.type !== 'escape' ? '(?!\\\\.)' : '';\n    return this.emit(prefix + star.call(this, node), node);\n  })\n  /**\n   * Parens\n   */\n  .set('paren', function (node) {\n    return this.mapVisit(node.nodes);\n  }).set('paren.open', function (node) {\n    var capture = this.options.capture ? '(' : '';\n\n    switch (node.parent.prefix) {\n      case '!':\n      case '^':\n        return this.emit(capture + '(?:(?!(?:', node);\n\n      case '*':\n      case '+':\n      case '?':\n      case '@':\n        return this.emit(capture + '(?:', node);\n\n      default:\n        {\n          var val = node.val;\n\n          if (this.options.bash === true) {\n            val = '\\\\' + val;\n          } else if (!this.options.capture && val === '(' && node.parent.rest[0] !== '?') {\n            val += '?:';\n          }\n\n          return this.emit(val, node);\n        }\n    }\n  }).set('paren.close', function (node) {\n    var capture = this.options.capture ? ')' : '';\n\n    switch (node.prefix) {\n      case '!':\n      case '^':\n        var prefix = /^(\\)|$)/.test(node.rest) ? '$' : '';\n        var str = star.call(this, node); // if the extglob has a slash explicitly defined, we know the user wants\n        // to match slashes, so we need to ensure the \"star\" regex allows for it\n\n        if (node.parent.hasSlash && !this.options.star && this.options.slash !== false) {\n          str = '.*?';\n        }\n\n        return this.emit(prefix + ('))' + str + ')') + capture, node);\n\n      case '*':\n      case '+':\n      case '?':\n        return this.emit(')' + node.prefix + capture, node);\n\n      case '@':\n        return this.emit(')' + capture, node);\n\n      default:\n        {\n          var val = (this.options.bash === true ? '\\\\' : '') + ')';\n          return this.emit(val, node);\n        }\n    }\n  })\n  /**\n   * Text\n   */\n  .set('text', function (node) {\n    var val = node.val.replace(/[\\[\\]]/g, '\\\\$&');\n    return this.emit(val, node);\n  });\n};","map":{"version":3,"names":["brackets","require","module","exports","extglob","star","options","apply","arguments","use","compilers","compiler","set","node","emit","val","prev","parsed","slice","ch","rest","charAt","type","length","output","test","parent","inside","prefix","call","mapVisit","nodes","capture","bash","str","hasSlash","slash","replace"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/extglob/lib/compilers.js"],"sourcesContent":["'use strict';\n\nvar brackets = require('expand-brackets');\n\n/**\n * Extglob compilers\n */\n\nmodule.exports = function(extglob) {\n  function star() {\n    if (typeof extglob.options.star === 'function') {\n      return extglob.options.star.apply(this, arguments);\n    }\n    if (typeof extglob.options.star === 'string') {\n      return extglob.options.star;\n    }\n    return '.*?';\n  }\n\n  /**\n   * Use `expand-brackets` compilers\n   */\n\n  extglob.use(brackets.compilers);\n  extglob.compiler\n\n    /**\n     * Escaped: \"\\\\*\"\n     */\n\n    .set('escape', function(node) {\n      return this.emit(node.val, node);\n    })\n\n    /**\n     * Dot: \".\"\n     */\n\n    .set('dot', function(node) {\n      return this.emit('\\\\' + node.val, node);\n    })\n\n    /**\n     * Question mark: \"?\"\n     */\n\n    .set('qmark', function(node) {\n      var val = '[^\\\\\\\\/.]';\n      var prev = this.prev();\n\n      if (node.parsed.slice(-1) === '(') {\n        var ch = node.rest.charAt(0);\n        if (ch !== '!' && ch !== '=' && ch !== ':') {\n          return this.emit(val, node);\n        }\n        return this.emit(node.val, node);\n      }\n\n      if (prev.type === 'text' && prev.val) {\n        return this.emit(val, node);\n      }\n\n      if (node.val.length > 1) {\n        val += '{' + node.val.length + '}';\n      }\n      return this.emit(val, node);\n    })\n\n    /**\n     * Plus: \"+\"\n     */\n\n    .set('plus', function(node) {\n      var prev = node.parsed.slice(-1);\n      if (prev === ']' || prev === ')') {\n        return this.emit(node.val, node);\n      }\n      var ch = this.output.slice(-1);\n      if (!this.output || (/[?*+]/.test(ch) && node.parent.type !== 'bracket')) {\n        return this.emit('\\\\+', node);\n      }\n      if (/\\w/.test(ch) && !node.inside) {\n        return this.emit('+\\\\+?', node);\n      }\n      return this.emit('+', node);\n    })\n\n    /**\n     * Star: \"*\"\n     */\n\n    .set('star', function(node) {\n      var prev = this.prev();\n      var prefix = prev.type !== 'text' && prev.type !== 'escape'\n        ? '(?!\\\\.)'\n        : '';\n\n      return this.emit(prefix + star.call(this, node), node);\n    })\n\n    /**\n     * Parens\n     */\n\n    .set('paren', function(node) {\n      return this.mapVisit(node.nodes);\n    })\n    .set('paren.open', function(node) {\n      var capture = this.options.capture ? '(' : '';\n\n      switch (node.parent.prefix) {\n        case '!':\n        case '^':\n          return this.emit(capture + '(?:(?!(?:', node);\n        case '*':\n        case '+':\n        case '?':\n        case '@':\n          return this.emit(capture + '(?:', node);\n        default: {\n          var val = node.val;\n          if (this.options.bash === true) {\n            val = '\\\\' + val;\n          } else if (!this.options.capture && val === '(' && node.parent.rest[0] !== '?') {\n            val += '?:';\n          }\n\n          return this.emit(val, node);\n        }\n      }\n    })\n    .set('paren.close', function(node) {\n      var capture = this.options.capture ? ')' : '';\n\n      switch (node.prefix) {\n        case '!':\n        case '^':\n          var prefix = /^(\\)|$)/.test(node.rest) ? '$' : '';\n          var str = star.call(this, node);\n\n          // if the extglob has a slash explicitly defined, we know the user wants\n          // to match slashes, so we need to ensure the \"star\" regex allows for it\n          if (node.parent.hasSlash && !this.options.star && this.options.slash !== false) {\n            str = '.*?';\n          }\n\n          return this.emit(prefix + ('))' + str + ')') + capture, node);\n        case '*':\n        case '+':\n        case '?':\n          return this.emit(')' + node.prefix + capture, node);\n        case '@':\n          return this.emit(')' + capture, node);\n        default: {\n          var val = (this.options.bash === true ? '\\\\' : '') + ')';\n          return this.emit(val, node);\n        }\n      }\n    })\n\n    /**\n     * Text\n     */\n\n    .set('text', function(node) {\n      var val = node.val.replace(/[\\[\\]]/g, '\\\\$&');\n      return this.emit(val, node);\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}