{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nmodule.exports = class MainFieldPlugin {\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n      if (request.path !== request.descriptionFileRoot) return callback();\n      if (request.alreadyTriedMainField === request.descriptionFilePath) return callback();\n      const content = request.descriptionFileData;\n      const filename = path.basename(request.descriptionFilePath);\n      let mainModule;\n      const field = this.options.name;\n\n      if (Array.isArray(field)) {\n        let current = content;\n\n        for (let j = 0; j < field.length; j++) {\n          if (current === null || typeof current !== \"object\") {\n            current = null;\n            break;\n          }\n\n          current = current[field[j]];\n        }\n\n        if (typeof current === \"string\") {\n          mainModule = current;\n        }\n      } else {\n        if (typeof content[field] === \"string\") {\n          mainModule = content[field];\n        }\n      }\n\n      if (!mainModule) return callback();\n      if (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule)) mainModule = \"./\" + mainModule;\n      const obj = Object.assign({}, request, {\n        request: mainModule,\n        alreadyTriedMainField: request.descriptionFilePath\n      });\n      return resolver.doResolve(target, obj, \"use \" + mainModule + \" from \" + this.options.name + \" in \" + filename, resolveContext, callback);\n    });\n  }\n\n};","map":{"version":3,"names":["path","require","module","exports","MainFieldPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileRoot","alreadyTriedMainField","descriptionFilePath","content","descriptionFileData","filename","basename","mainModule","field","name","Array","isArray","current","j","length","forceRelative","test","obj","Object","assign","doResolve"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/enhanced-resolve/lib/MainFieldPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\n\nmodule.exports = class MainFieldPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"MainFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (request.path !== request.descriptionFileRoot) return callback();\n\t\t\t\tif (request.alreadyTriedMainField === request.descriptionFilePath)\n\t\t\t\t\treturn callback();\n\t\t\t\tconst content = request.descriptionFileData;\n\t\t\t\tconst filename = path.basename(request.descriptionFilePath);\n\t\t\t\tlet mainModule;\n\t\t\t\tconst field = this.options.name;\n\t\t\t\tif (Array.isArray(field)) {\n\t\t\t\t\tlet current = content;\n\t\t\t\t\tfor (let j = 0; j < field.length; j++) {\n\t\t\t\t\t\tif (current === null || typeof current !== \"object\") {\n\t\t\t\t\t\t\tcurrent = null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrent = current[field[j]];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof current === \"string\") {\n\t\t\t\t\t\tmainModule = current;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof content[field] === \"string\") {\n\t\t\t\t\t\tmainModule = content[field];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!mainModule) return callback();\n\t\t\t\tif (this.options.forceRelative && !/^\\.\\.?\\//.test(mainModule))\n\t\t\t\t\tmainModule = \"./\" + mainModule;\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\trequest: mainModule,\n\t\t\t\t\talreadyTriedMainField: request.descriptionFilePath\n\t\t\t\t});\n\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"use \" +\n\t\t\t\t\t\tmainModule +\n\t\t\t\t\t\t\" from \" +\n\t\t\t\t\t\tthis.options.name +\n\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\tfilename,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,eAAN,CAAsB;EACtCC,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA0B;IACpC,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAEW,iBAFX,EAE8B,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACnE,IAAIF,OAAO,CAACd,IAAR,KAAiBc,OAAO,CAACG,mBAA7B,EAAkD,OAAOD,QAAQ,EAAf;MAClD,IAAIF,OAAO,CAACI,qBAAR,KAAkCJ,OAAO,CAACK,mBAA9C,EACC,OAAOH,QAAQ,EAAf;MACD,MAAMI,OAAO,GAAGN,OAAO,CAACO,mBAAxB;MACA,MAAMC,QAAQ,GAAGtB,IAAI,CAACuB,QAAL,CAAcT,OAAO,CAACK,mBAAtB,CAAjB;MACA,IAAIK,UAAJ;MACA,MAAMC,KAAK,GAAG,KAAKlB,OAAL,CAAamB,IAA3B;;MACA,IAAIC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,EAA0B;QACzB,IAAII,OAAO,GAAGT,OAAd;;QACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;UACtC,IAAID,OAAO,KAAK,IAAZ,IAAoB,OAAOA,OAAP,KAAmB,QAA3C,EAAqD;YACpDA,OAAO,GAAG,IAAV;YACA;UACA;;UACDA,OAAO,GAAGA,OAAO,CAACJ,KAAK,CAACK,CAAD,CAAN,CAAjB;QACA;;QACD,IAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;UAChCL,UAAU,GAAGK,OAAb;QACA;MACD,CAZD,MAYO;QACN,IAAI,OAAOT,OAAO,CAACK,KAAD,CAAd,KAA0B,QAA9B,EAAwC;UACvCD,UAAU,GAAGJ,OAAO,CAACK,KAAD,CAApB;QACA;MACD;;MACD,IAAI,CAACD,UAAL,EAAiB,OAAOR,QAAQ,EAAf;MACjB,IAAI,KAAKT,OAAL,CAAayB,aAAb,IAA8B,CAAC,WAAWC,IAAX,CAAgBT,UAAhB,CAAnC,EACCA,UAAU,GAAG,OAAOA,UAApB;MACD,MAAMU,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBtB,OAAlB,EAA2B;QACtCA,OAAO,EAAEU,UAD6B;QAEtCN,qBAAqB,EAAEJ,OAAO,CAACK;MAFO,CAA3B,CAAZ;MAIA,OAAOT,QAAQ,CAAC2B,SAAT,CACN7B,MADM,EAEN0B,GAFM,EAGN,SACCV,UADD,GAEC,QAFD,GAGC,KAAKjB,OAAL,CAAamB,IAHd,GAIC,MAJD,GAKCJ,QARK,EASNP,cATM,EAUNC,QAVM,CAAP;IAYA,CA9CF;EA+CA;;AAxDqC,CAAvC"},"metadata":{},"sourceType":"script"}