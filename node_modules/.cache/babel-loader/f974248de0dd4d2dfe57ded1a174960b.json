{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Gajus Kuizinas @gajus\n*/\n\"use strict\";\n\nconst Ajv = require(\"ajv\");\n\nconst ajv = new Ajv({\n  errorDataPath: \"configuration\",\n  allErrors: true,\n  verbose: true\n});\n\nrequire(\"ajv-keywords\")(ajv, [\"instanceof\"]);\n\nrequire(\"../schemas/ajv.absolutePath\")(ajv);\n\nconst validateSchema = (schema, options) => {\n  if (Array.isArray(options)) {\n    const errors = options.map(options => validateObject(schema, options));\n    errors.forEach((list, idx) => {\n      const applyPrefix = err => {\n        err.dataPath = `[${idx}]${err.dataPath}`;\n\n        if (err.children) {\n          err.children.forEach(applyPrefix);\n        }\n      };\n\n      list.forEach(applyPrefix);\n    });\n    return errors.reduce((arr, items) => {\n      return arr.concat(items);\n    }, []);\n  } else {\n    return validateObject(schema, options);\n  }\n};\n\nconst validateObject = (schema, options) => {\n  const validate = ajv.compile(schema);\n  const valid = validate(options);\n  return valid ? [] : filterErrors(validate.errors);\n};\n\nconst filterErrors = errors => {\n  let newErrors = [];\n\n  for (const err of errors) {\n    const dataPath = err.dataPath;\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.dataPath.includes(dataPath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        }\n\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (children.length) {\n      err.children = children;\n    }\n\n    newErrors.push(err);\n  }\n\n  return newErrors;\n};\n\nmodule.exports = validateSchema;","map":{"version":3,"names":["Ajv","require","ajv","errorDataPath","allErrors","verbose","validateSchema","schema","options","Array","isArray","errors","map","validateObject","forEach","list","idx","applyPrefix","err","dataPath","children","reduce","arr","items","concat","validate","compile","valid","filterErrors","newErrors","filter","oldError","includes","slice","undefined","push","length","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/validateSchema.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Gajus Kuizinas @gajus\n*/\n\"use strict\";\n\nconst Ajv = require(\"ajv\");\nconst ajv = new Ajv({\n\terrorDataPath: \"configuration\",\n\tallErrors: true,\n\tverbose: true\n});\nrequire(\"ajv-keywords\")(ajv, [\"instanceof\"]);\nrequire(\"../schemas/ajv.absolutePath\")(ajv);\n\nconst validateSchema = (schema, options) => {\n\tif (Array.isArray(options)) {\n\t\tconst errors = options.map(options => validateObject(schema, options));\n\t\terrors.forEach((list, idx) => {\n\t\t\tconst applyPrefix = err => {\n\t\t\t\terr.dataPath = `[${idx}]${err.dataPath}`;\n\t\t\t\tif (err.children) {\n\t\t\t\t\terr.children.forEach(applyPrefix);\n\t\t\t\t}\n\t\t\t};\n\t\t\tlist.forEach(applyPrefix);\n\t\t});\n\t\treturn errors.reduce((arr, items) => {\n\t\t\treturn arr.concat(items);\n\t\t}, []);\n\t} else {\n\t\treturn validateObject(schema, options);\n\t}\n};\n\nconst validateObject = (schema, options) => {\n\tconst validate = ajv.compile(schema);\n\tconst valid = validate(options);\n\treturn valid ? [] : filterErrors(validate.errors);\n};\n\nconst filterErrors = errors => {\n\tlet newErrors = [];\n\tfor (const err of errors) {\n\t\tconst dataPath = err.dataPath;\n\t\tlet children = [];\n\t\tnewErrors = newErrors.filter(oldError => {\n\t\t\tif (oldError.dataPath.includes(dataPath)) {\n\t\t\t\tif (oldError.children) {\n\t\t\t\t\tchildren = children.concat(oldError.children.slice(0));\n\t\t\t\t}\n\t\t\t\toldError.children = undefined;\n\t\t\t\tchildren.push(oldError);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tif (children.length) {\n\t\t\terr.children = children;\n\t\t}\n\t\tnewErrors.push(err);\n\t}\n\n\treturn newErrors;\n};\n\nmodule.exports = validateSchema;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,GAAG,GAAG,IAAIF,GAAJ,CAAQ;EACnBG,aAAa,EAAE,eADI;EAEnBC,SAAS,EAAE,IAFQ;EAGnBC,OAAO,EAAE;AAHU,CAAR,CAAZ;;AAKAJ,OAAO,CAAC,cAAD,CAAP,CAAwBC,GAAxB,EAA6B,CAAC,YAAD,CAA7B;;AACAD,OAAO,CAAC,6BAAD,CAAP,CAAuCC,GAAvC;;AAEA,MAAMI,cAAc,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;EAC3C,IAAIC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;IAC3B,MAAMG,MAAM,GAAGH,OAAO,CAACI,GAAR,CAAYJ,OAAO,IAAIK,cAAc,CAACN,MAAD,EAASC,OAAT,CAArC,CAAf;IACAG,MAAM,CAACG,OAAP,CAAe,CAACC,IAAD,EAAOC,GAAP,KAAe;MAC7B,MAAMC,WAAW,GAAGC,GAAG,IAAI;QAC1BA,GAAG,CAACC,QAAJ,GAAgB,IAAGH,GAAI,IAAGE,GAAG,CAACC,QAAS,EAAvC;;QACA,IAAID,GAAG,CAACE,QAAR,EAAkB;UACjBF,GAAG,CAACE,QAAJ,CAAaN,OAAb,CAAqBG,WAArB;QACA;MACD,CALD;;MAMAF,IAAI,CAACD,OAAL,CAAaG,WAAb;IACA,CARD;IASA,OAAON,MAAM,CAACU,MAAP,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;MACpC,OAAOD,GAAG,CAACE,MAAJ,CAAWD,KAAX,CAAP;IACA,CAFM,EAEJ,EAFI,CAAP;EAGA,CAdD,MAcO;IACN,OAAOV,cAAc,CAACN,MAAD,EAASC,OAAT,CAArB;EACA;AACD,CAlBD;;AAoBA,MAAMK,cAAc,GAAG,CAACN,MAAD,EAASC,OAAT,KAAqB;EAC3C,MAAMiB,QAAQ,GAAGvB,GAAG,CAACwB,OAAJ,CAAYnB,MAAZ,CAAjB;EACA,MAAMoB,KAAK,GAAGF,QAAQ,CAACjB,OAAD,CAAtB;EACA,OAAOmB,KAAK,GAAG,EAAH,GAAQC,YAAY,CAACH,QAAQ,CAACd,MAAV,CAAhC;AACA,CAJD;;AAMA,MAAMiB,YAAY,GAAGjB,MAAM,IAAI;EAC9B,IAAIkB,SAAS,GAAG,EAAhB;;EACA,KAAK,MAAMX,GAAX,IAAkBP,MAAlB,EAA0B;IACzB,MAAMQ,QAAQ,GAAGD,GAAG,CAACC,QAArB;IACA,IAAIC,QAAQ,GAAG,EAAf;IACAS,SAAS,GAAGA,SAAS,CAACC,MAAV,CAAiBC,QAAQ,IAAI;MACxC,IAAIA,QAAQ,CAACZ,QAAT,CAAkBa,QAAlB,CAA2Bb,QAA3B,CAAJ,EAA0C;QACzC,IAAIY,QAAQ,CAACX,QAAb,EAAuB;UACtBA,QAAQ,GAAGA,QAAQ,CAACI,MAAT,CAAgBO,QAAQ,CAACX,QAAT,CAAkBa,KAAlB,CAAwB,CAAxB,CAAhB,CAAX;QACA;;QACDF,QAAQ,CAACX,QAAT,GAAoBc,SAApB;QACAd,QAAQ,CAACe,IAAT,CAAcJ,QAAd;QACA,OAAO,KAAP;MACA;;MACD,OAAO,IAAP;IACA,CAVW,CAAZ;;IAWA,IAAIX,QAAQ,CAACgB,MAAb,EAAqB;MACpBlB,GAAG,CAACE,QAAJ,GAAeA,QAAf;IACA;;IACDS,SAAS,CAACM,IAAV,CAAejB,GAAf;EACA;;EAED,OAAOW,SAAP;AACA,CAvBD;;AAyBAQ,MAAM,CAACC,OAAP,GAAiBhC,cAAjB"},"metadata":{},"sourceType":"script"}