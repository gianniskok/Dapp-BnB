{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class DirectoryExistsPlugin {\n  constructor(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"DirectoryExistsPlugin\", (request, resolveContext, callback) => {\n      const fs = resolver.fileSystem;\n      const directory = request.path;\n      fs.stat(directory, (err, stat) => {\n        if (err || !stat) {\n          if (resolveContext.missing) resolveContext.missing.add(directory);\n          if (resolveContext.log) resolveContext.log(directory + \" doesn't exist\");\n          return callback();\n        }\n\n        if (!stat.isDirectory()) {\n          if (resolveContext.missing) resolveContext.missing.add(directory);\n          if (resolveContext.log) resolveContext.log(directory + \" is not a directory\");\n          return callback();\n        }\n\n        resolver.doResolve(target, request, \"existing directory\", resolveContext, callback);\n      });\n    });\n  }\n\n};","map":{"version":3,"names":["module","exports","DirectoryExistsPlugin","constructor","source","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","fs","fileSystem","directory","path","stat","err","missing","add","log","isDirectory","doResolve"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/enhanced-resolve/lib/DirectoryExistsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nmodule.exports = class DirectoryExistsPlugin {\n\tconstructor(source, target) {\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\n\t\t\t\t\"DirectoryExistsPlugin\",\n\t\t\t\t(request, resolveContext, callback) => {\n\t\t\t\t\tconst fs = resolver.fileSystem;\n\t\t\t\t\tconst directory = request.path;\n\t\t\t\t\tfs.stat(directory, (err, stat) => {\n\t\t\t\t\t\tif (err || !stat) {\n\t\t\t\t\t\t\tif (resolveContext.missing) resolveContext.missing.add(directory);\n\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\tresolveContext.log(directory + \" doesn't exist\");\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!stat.isDirectory()) {\n\t\t\t\t\t\t\tif (resolveContext.missing) resolveContext.missing.add(directory);\n\t\t\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\t\t\tresolveContext.log(directory + \" is not a directory\");\n\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t\"existing directory\",\n\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,qBAAN,CAA4B;EAC5CC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC3B,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKL,MADf,EAEEM,QAFF,CAGE,uBAHF,EAIE,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACtC,MAAMC,EAAE,GAAGP,QAAQ,CAACQ,UAApB;MACA,MAAMC,SAAS,GAAGL,OAAO,CAACM,IAA1B;MACAH,EAAE,CAACI,IAAH,CAAQF,SAAR,EAAmB,CAACG,GAAD,EAAMD,IAAN,KAAe;QACjC,IAAIC,GAAG,IAAI,CAACD,IAAZ,EAAkB;UACjB,IAAIN,cAAc,CAACQ,OAAnB,EAA4BR,cAAc,CAACQ,OAAf,CAAuBC,GAAvB,CAA2BL,SAA3B;UAC5B,IAAIJ,cAAc,CAACU,GAAnB,EACCV,cAAc,CAACU,GAAf,CAAmBN,SAAS,GAAG,gBAA/B;UACD,OAAOH,QAAQ,EAAf;QACA;;QACD,IAAI,CAACK,IAAI,CAACK,WAAL,EAAL,EAAyB;UACxB,IAAIX,cAAc,CAACQ,OAAnB,EAA4BR,cAAc,CAACQ,OAAf,CAAuBC,GAAvB,CAA2BL,SAA3B;UAC5B,IAAIJ,cAAc,CAACU,GAAnB,EACCV,cAAc,CAACU,GAAf,CAAmBN,SAAS,GAAG,qBAA/B;UACD,OAAOH,QAAQ,EAAf;QACA;;QACDN,QAAQ,CAACiB,SAAT,CACCnB,MADD,EAECM,OAFD,EAGC,oBAHD,EAICC,cAJD,EAKCC,QALD;MAOA,CApBD;IAqBA,CA5BH;EA8BA;;AAtC2C,CAA7C"},"metadata":{},"sourceType":"script"}