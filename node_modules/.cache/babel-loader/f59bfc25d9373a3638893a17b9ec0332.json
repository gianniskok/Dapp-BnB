{"ast":null,"code":"'use strict';\n\nvar isObject = require('isobject');\n\nvar Emitter = require('component-emitter');\n\nvar visit = require('collection-visit');\n\nvar toPath = require('to-object-path');\n\nvar union = require('union-value');\n\nvar del = require('unset-value');\n\nvar get = require('get-value');\n\nvar has = require('has-value');\n\nvar set = require('set-value');\n/**\n * Create a `Cache` constructor that when instantiated will\n * store values on the given `prop`.\n *\n * ```js\n * var Cache = require('cache-base').namespace('data');\n * var cache = new Cache();\n *\n * cache.set('foo', 'bar');\n * //=> {data: {foo: 'bar'}}\n * ```\n * @param {String} `prop` The property name to use for storing values.\n * @return {Function} Returns a custom `Cache` constructor\n * @api public\n */\n\n\nfunction namespace(prop) {\n  /**\n   * Create a new `Cache`. Internally the `Cache` constructor is created using\n   * the `namespace` function, with `cache` defined as the storage object.\n   *\n   * ```js\n   * var app = new Cache();\n   * ```\n   * @param {Object} `cache` Optionally pass an object to initialize with.\n   * @constructor\n   * @api public\n   */\n  function Cache(cache) {\n    if (prop) {\n      this[prop] = {};\n    }\n\n    if (cache) {\n      this.set(cache);\n    }\n  }\n  /**\n   * Inherit Emitter\n   */\n\n\n  Emitter(Cache.prototype);\n  /**\n   * Assign `value` to `key`. Also emits `set` with\n   * the key and value.\n   *\n   * ```js\n   * app.on('set', function(key, val) {\n   *   // do something when `set` is emitted\n   * });\n   *\n   * app.set(key, value);\n   *\n   * // also takes an object or array\n   * app.set({name: 'Halle'});\n   * app.set([{foo: 'bar'}, {baz: 'quux'}]);\n   * console.log(app);\n   * //=> {name: 'Halle', foo: 'bar', baz: 'quux'}\n   * ```\n   *\n   * @name .set\n   * @emits `set` with `key` and `value` as arguments.\n   * @param {String} `key`\n   * @param {any} `value`\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n  Cache.prototype.set = function (key, val) {\n    if (Array.isArray(key) && arguments.length === 2) {\n      key = toPath(key);\n    }\n\n    if (isObject(key) || Array.isArray(key)) {\n      this.visit('set', key);\n    } else {\n      set(prop ? this[prop] : this, key, val);\n      this.emit('set', key, val);\n    }\n\n    return this;\n  };\n  /**\n   * Union `array` to `key`. Also emits `set` with\n   * the key and value.\n   *\n   * ```js\n   * app.union('a.b', ['foo']);\n   * app.union('a.b', ['bar']);\n   * console.log(app.get('a'));\n   * //=> {b: ['foo', 'bar']}\n   * ```\n   * @name .union\n   * @param {String} `key`\n   * @param {any} `value`\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n\n  Cache.prototype.union = function (key, val) {\n    if (Array.isArray(key) && arguments.length === 2) {\n      key = toPath(key);\n    }\n\n    var ctx = prop ? this[prop] : this;\n    union(ctx, key, arrayify(val));\n    this.emit('union', val);\n    return this;\n  };\n  /**\n   * Return the value of `key`. Dot notation may be used\n   * to get [nested property values][get-value].\n   *\n   * ```js\n   * app.set('a.b.c', 'd');\n   * app.get('a.b');\n   * //=> {c: 'd'}\n   *\n   * app.get(['a', 'b']);\n   * //=> {c: 'd'}\n   * ```\n   *\n   * @name .get\n   * @emits `get` with `key` and `value` as arguments.\n   * @param {String} `key` The name of the property to get. Dot-notation may be used.\n   * @return {any} Returns the value of `key`\n   * @api public\n   */\n\n\n  Cache.prototype.get = function (key) {\n    key = toPath(arguments);\n    var ctx = prop ? this[prop] : this;\n    var val = get(ctx, key);\n    this.emit('get', key, val);\n    return val;\n  };\n  /**\n   * Return true if app has a stored value for `key`,\n   * false only if value is `undefined`.\n   *\n   * ```js\n   * app.set('foo', 'bar');\n   * app.has('foo');\n   * //=> true\n   * ```\n   *\n   * @name .has\n   * @emits `has` with `key` and true or false as arguments.\n   * @param {String} `key`\n   * @return {Boolean}\n   * @api public\n   */\n\n\n  Cache.prototype.has = function (key) {\n    key = toPath(arguments);\n    var ctx = prop ? this[prop] : this;\n    var val = get(ctx, key);\n    var has = typeof val !== 'undefined';\n    this.emit('has', key, has);\n    return has;\n  };\n  /**\n   * Delete one or more properties from the instance.\n   *\n   * ```js\n   * app.del(); // delete all\n   * // or\n   * app.del('foo');\n   * // or\n   * app.del(['foo', 'bar']);\n   * ```\n   * @name .del\n   * @emits `del` with the `key` as the only argument.\n   * @param {String|Array} `key` Property name or array of property names.\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n\n  Cache.prototype.del = function (key) {\n    if (Array.isArray(key)) {\n      this.visit('del', key);\n    } else {\n      del(prop ? this[prop] : this, key);\n      this.emit('del', key);\n    }\n\n    return this;\n  };\n  /**\n   * Reset the entire cache to an empty object.\n   *\n   * ```js\n   * app.clear();\n   * ```\n   * @api public\n   */\n\n\n  Cache.prototype.clear = function () {\n    if (prop) {\n      this[prop] = {};\n    }\n  };\n  /**\n   * Visit `method` over the properties in the given object, or map\n   * visit over the object-elements in an array.\n   *\n   * @name .visit\n   * @param {String} `method` The name of the `base` method to call.\n   * @param {Object|Array} `val` The object or array to iterate over.\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n\n  Cache.prototype.visit = function (method, val) {\n    visit(this, method, val);\n    return this;\n  };\n\n  return Cache;\n}\n/**\n * Cast val to an array\n */\n\n\nfunction arrayify(val) {\n  return val ? Array.isArray(val) ? val : [val] : [];\n}\n/**\n * Expose `Cache`\n */\n\n\nmodule.exports = namespace();\n/**\n * Expose `Cache.namespace`\n */\n\nmodule.exports.namespace = namespace;","map":{"version":3,"names":["isObject","require","Emitter","visit","toPath","union","del","get","has","set","namespace","prop","Cache","cache","prototype","key","val","Array","isArray","arguments","length","emit","ctx","arrayify","clear","method","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/cache-base/index.js"],"sourcesContent":["'use strict';\n\nvar isObject = require('isobject');\nvar Emitter = require('component-emitter');\nvar visit = require('collection-visit');\nvar toPath = require('to-object-path');\nvar union = require('union-value');\nvar del = require('unset-value');\nvar get = require('get-value');\nvar has = require('has-value');\nvar set = require('set-value');\n\n/**\n * Create a `Cache` constructor that when instantiated will\n * store values on the given `prop`.\n *\n * ```js\n * var Cache = require('cache-base').namespace('data');\n * var cache = new Cache();\n *\n * cache.set('foo', 'bar');\n * //=> {data: {foo: 'bar'}}\n * ```\n * @param {String} `prop` The property name to use for storing values.\n * @return {Function} Returns a custom `Cache` constructor\n * @api public\n */\n\nfunction namespace(prop) {\n\n  /**\n   * Create a new `Cache`. Internally the `Cache` constructor is created using\n   * the `namespace` function, with `cache` defined as the storage object.\n   *\n   * ```js\n   * var app = new Cache();\n   * ```\n   * @param {Object} `cache` Optionally pass an object to initialize with.\n   * @constructor\n   * @api public\n   */\n\n  function Cache(cache) {\n    if (prop) {\n      this[prop] = {};\n    }\n    if (cache) {\n      this.set(cache);\n    }\n  }\n\n  /**\n   * Inherit Emitter\n   */\n\n  Emitter(Cache.prototype);\n\n  /**\n   * Assign `value` to `key`. Also emits `set` with\n   * the key and value.\n   *\n   * ```js\n   * app.on('set', function(key, val) {\n   *   // do something when `set` is emitted\n   * });\n   *\n   * app.set(key, value);\n   *\n   * // also takes an object or array\n   * app.set({name: 'Halle'});\n   * app.set([{foo: 'bar'}, {baz: 'quux'}]);\n   * console.log(app);\n   * //=> {name: 'Halle', foo: 'bar', baz: 'quux'}\n   * ```\n   *\n   * @name .set\n   * @emits `set` with `key` and `value` as arguments.\n   * @param {String} `key`\n   * @param {any} `value`\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n  Cache.prototype.set = function(key, val) {\n    if (Array.isArray(key) && arguments.length === 2) {\n      key = toPath(key);\n    }\n    if (isObject(key) || Array.isArray(key)) {\n      this.visit('set', key);\n    } else {\n      set(prop ? this[prop] : this, key, val);\n      this.emit('set', key, val);\n    }\n    return this;\n  };\n\n  /**\n   * Union `array` to `key`. Also emits `set` with\n   * the key and value.\n   *\n   * ```js\n   * app.union('a.b', ['foo']);\n   * app.union('a.b', ['bar']);\n   * console.log(app.get('a'));\n   * //=> {b: ['foo', 'bar']}\n   * ```\n   * @name .union\n   * @param {String} `key`\n   * @param {any} `value`\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n  Cache.prototype.union = function(key, val) {\n    if (Array.isArray(key) && arguments.length === 2) {\n      key = toPath(key);\n    }\n    var ctx = prop ? this[prop] : this;\n    union(ctx, key, arrayify(val));\n    this.emit('union', val);\n    return this;\n  };\n\n  /**\n   * Return the value of `key`. Dot notation may be used\n   * to get [nested property values][get-value].\n   *\n   * ```js\n   * app.set('a.b.c', 'd');\n   * app.get('a.b');\n   * //=> {c: 'd'}\n   *\n   * app.get(['a', 'b']);\n   * //=> {c: 'd'}\n   * ```\n   *\n   * @name .get\n   * @emits `get` with `key` and `value` as arguments.\n   * @param {String} `key` The name of the property to get. Dot-notation may be used.\n   * @return {any} Returns the value of `key`\n   * @api public\n   */\n\n  Cache.prototype.get = function(key) {\n    key = toPath(arguments);\n\n    var ctx = prop ? this[prop] : this;\n    var val = get(ctx, key);\n\n    this.emit('get', key, val);\n    return val;\n  };\n\n  /**\n   * Return true if app has a stored value for `key`,\n   * false only if value is `undefined`.\n   *\n   * ```js\n   * app.set('foo', 'bar');\n   * app.has('foo');\n   * //=> true\n   * ```\n   *\n   * @name .has\n   * @emits `has` with `key` and true or false as arguments.\n   * @param {String} `key`\n   * @return {Boolean}\n   * @api public\n   */\n\n  Cache.prototype.has = function(key) {\n    key = toPath(arguments);\n\n    var ctx = prop ? this[prop] : this;\n    var val = get(ctx, key);\n\n    var has = typeof val !== 'undefined';\n    this.emit('has', key, has);\n    return has;\n  };\n\n  /**\n   * Delete one or more properties from the instance.\n   *\n   * ```js\n   * app.del(); // delete all\n   * // or\n   * app.del('foo');\n   * // or\n   * app.del(['foo', 'bar']);\n   * ```\n   * @name .del\n   * @emits `del` with the `key` as the only argument.\n   * @param {String|Array} `key` Property name or array of property names.\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n  Cache.prototype.del = function(key) {\n    if (Array.isArray(key)) {\n      this.visit('del', key);\n    } else {\n      del(prop ? this[prop] : this, key);\n      this.emit('del', key);\n    }\n    return this;\n  };\n\n  /**\n   * Reset the entire cache to an empty object.\n   *\n   * ```js\n   * app.clear();\n   * ```\n   * @api public\n   */\n\n  Cache.prototype.clear = function() {\n    if (prop) {\n      this[prop] = {};\n    }\n  };\n\n  /**\n   * Visit `method` over the properties in the given object, or map\n   * visit over the object-elements in an array.\n   *\n   * @name .visit\n   * @param {String} `method` The name of the `base` method to call.\n   * @param {Object|Array} `val` The object or array to iterate over.\n   * @return {Object} Returns the instance for chaining.\n   * @api public\n   */\n\n  Cache.prototype.visit = function(method, val) {\n    visit(this, method, val);\n    return this;\n  };\n\n  return Cache;\n}\n\n/**\n * Cast val to an array\n */\n\nfunction arrayify(val) {\n  return val ? (Array.isArray(val) ? val : [val]) : [];\n}\n\n/**\n * Expose `Cache`\n */\n\nmodule.exports = namespace();\n\n/**\n * Expose `Cache.namespace`\n */\n\nmodule.exports.namespace = namespace;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}