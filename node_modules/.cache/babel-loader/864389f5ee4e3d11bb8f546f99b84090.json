{"ast":null,"code":"export function promisify(originalFn, thisArg) {\n  const promisifiedFunction = async function () {\n    for (var _len = arguments.length, callArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      callArgs[_key] = arguments[_key];\n    }\n\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err === null || typeof err === \"undefined\") {\n          reject(err);\n        }\n\n        resolve(data);\n      };\n\n      originalFn.apply(thisArg, [...callArgs, callback]);\n    });\n  };\n\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  const message = error.message || \"Failed or Rejected Request\";\n  let code = -32000;\n\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n\n      case \"Invalid request\":\n        code = -32600;\n        break;\n\n      case \"Method not found\":\n        code = -32601;\n        break;\n\n      case \"Invalid params\":\n        code = -32602;\n        break;\n\n      case \"Internal error\":\n        code = -32603;\n        break;\n\n      default:\n        code = -32000;\n        break;\n    }\n  }\n\n  const result = {\n    code,\n    message\n  };\n\n  if (error.data) {\n    result.data = error.data;\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"AAMA,OAAM,SAAUA,SAAV,CACJC,UADI,EAEJC,OAFI,EAES;EAEb,MAAMC,mBAAmB,GAAG,kBAEkC;IAAA,kCADzDC,QACyD;MADzDA,QACyD;IAAA;;IAC5D,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;MACrC,MAAMC,QAAQ,GAAG,CACfC,GADe,EAEfC,IAFe,KAGb;QACF,IAAID,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;UAC9CF,MAAM,CAACE,GAAD,CAAN;QACD;;QACDH,OAAO,CAACI,IAAD,CAAP;MACD,CARD;;MASAT,UAAU,CAACU,KAAX,CAAiBT,OAAjB,EAA0B,CAAC,GAAGE,QAAJ,EAAcI,QAAd,CAA1B;IACD,CAXM,CAAP;EAYD,CAfD;;EAgBA,OAAOL,mBAAP;AACD;AAED,OAAM,SAAUS,cAAV,CACJC,KADI,EACgC;EAEpC,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,IAAiB,4BAAjC;EACA,IAAIC,IAAI,GAAG,CAAC,KAAZ;;EACA,IAAIF,KAAK,IAAI,CAACA,KAAK,CAACE,IAApB,EAA0B;IACxB,QAAQD,OAAR;MACE,KAAK,aAAL;QACEC,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,iBAAL;QACEA,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,kBAAL;QACEA,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,gBAAL;QACEA,IAAI,GAAG,CAAC,KAAR;QACA;;MACF,KAAK,gBAAL;QACEA,IAAI,GAAG,CAAC,KAAR;QACA;;MACF;QACEA,IAAI,GAAG,CAAC,KAAR;QACA;IAlBJ;EAoBD;;EACD,MAAMC,MAAM,GAAqD;IAC/DD,IAD+D;IAE/DD;EAF+D,CAAjE;;EAIA,IAAID,KAAK,CAACH,IAAV,EAAgB;IACdM,MAAM,CAACN,IAAP,GAAcG,KAAK,CAACH,IAApB;EACD;;EACD,OAAOM,MAAP;AACD","names":["promisify","originalFn","thisArg","promisifiedFunction","callArgs","Promise","resolve","reject","callback","err","data","apply","formatRpcError","error","message","code","result"],"sourceRoot":"","sources":["../../src/payload.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}