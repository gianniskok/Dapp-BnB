{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n\n        if (processedAssets.has(asset)) {\n          return;\n        }\n\n        try {\n          let input;\n\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          } // Handling comment extraction\n\n\n          let commentsFile = false;\n\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: _crypto.default.createHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          } // Handling results\n          // Error case: add errors, and go to next file\n\n\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n\n          let outputSource;\n\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          } // Write extracted comments to commentsFile\n\n\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          } // Updating assets\n\n\n          processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation; // Regenerate `contenthash` for minified assets\n\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_crypto","_interopRequireDefault","require","_path","_sourceMap","_webpackSources","_RequestShortener","_ModuleFilenameHelpers","_schemaUtils","_serializeJavascript","_package","_options","_TaskRunner","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","warningRegex","TerserPlugin","constructor","options","minify","terserOptions","test","chunkFilter","warningsFilter","extractComments","sourceMap","cache","cacheKeys","defaultCacheKeys","parallel","include","exclude","output","comments","isSourceMap","input","Boolean","version","sources","Array","isArray","mappings","buildSourceMap","inputSourceMap","SourceMapConsumer","buildError","err","file","requestShortener","line","original","originalPositionFor","column","col","Error","message","shorten","stack","buildWarning","warning","warningMessage","locationMessage","match","exec","replace","compiler","buildModuleFn","moduleArg","useSourceMap","optimizeFn","compilation","chunks","callback","taskRunner","processedAssets","WeakSet","tasks","from","chunk","reduce","acc","concat","files","additionalChunkAssets","matchObject","bind","asset","assets","has","sourceAndMap","map","warnings","commentsFile","filename","task","terser","node_version","process","hash","createHash","update","digest","error","errors","context","run","tasksError","results","data","index","code","extractedComments","outputSource","SourceMapSource","JSON","parse","RawSource","commentsFileSource","comment","includes","banner","posix","basename","ConcatSource","commentsSource","join","add","builtWarning","exit","plugin","name","hooks","tap","buildModule","mainTemplate","chunkTemplate","template","hashForChunk","optimizeChunkAssets","tapAsync","_default"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/node_modules/terser-webpack-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n\n        if (processedAssets.has(asset)) {\n          return;\n        }\n\n        try {\n          let input;\n\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          } // Handling comment extraction\n\n\n          let commentsFile = false;\n\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: _crypto.default.createHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          } // Handling results\n          // Error case: add errors, and go to next file\n\n\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n\n          let outputSource;\n\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          } // Write extracted comments to commentsFile\n\n\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          } // Updating assets\n\n\n          processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation; // Regenerate `contenthash` for minified assets\n\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}