{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nclass SingleEntryPlugin {\n  /**\n   * An entry plugin which will handle\n   * creation of the SingleEntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {string} name entry key name\n   */\n  constructor(context, entry, name) {\n    this.context = context;\n    this.entry = entry;\n    this.name = name;\n  }\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"SingleEntryPlugin\", (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n    });\n    compiler.hooks.make.tapAsync(\"SingleEntryPlugin\", (compilation, callback) => {\n      const {\n        entry,\n        name,\n        context\n      } = this;\n      const dep = SingleEntryPlugin.createDependency(entry, name);\n      compilation.addEntry(context, dep, name, callback);\n    });\n  }\n  /**\n   * @param {string} entry entry request\n   * @param {string} name entry name\n   * @returns {SingleEntryDependency} the dependency\n   */\n\n\n  static createDependency(entry, name) {\n    const dep = new SingleEntryDependency(entry);\n    dep.loc = {\n      name\n    };\n    return dep;\n  }\n\n}\n\nmodule.exports = SingleEntryPlugin;","map":{"version":3,"names":["SingleEntryDependency","require","SingleEntryPlugin","constructor","context","entry","name","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapAsync","callback","dep","createDependency","addEntry","loc","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/SingleEntryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass SingleEntryPlugin {\n\t/**\n\t * An entry plugin which will handle\n\t * creation of the SingleEntryDependency\n\t *\n\t * @param {string} context context path\n\t * @param {string} entry entry path\n\t * @param {string} name entry key name\n\t */\n\tconstructor(context, entry, name) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst { entry, name, context } = this;\n\n\t\t\t\tconst dep = SingleEntryPlugin.createDependency(entry, name);\n\t\t\t\tcompilation.addEntry(context, dep, name, callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} entry entry request\n\t * @param {string} name entry name\n\t * @returns {SingleEntryDependency} the dependency\n\t */\n\tstatic createDependency(entry, name) {\n\t\tconst dep = new SingleEntryDependency(entry);\n\t\tdep.loc = { name };\n\t\treturn dep;\n\t}\n}\n\nmodule.exports = SingleEntryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,sCAAD,CAArC;AAEA;;;AAEA,MAAMC,iBAAN,CAAwB;EACvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,EAAuB;IACjC,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACA;EAED;AACD;AACA;AACA;;;EACCC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACC,mBADD,EAEC,CAACD,WAAD,WAA0C;MAAA,IAA5B;QAAEE;MAAF,CAA4B;MACzCF,WAAW,CAACG,mBAAZ,CAAgCC,GAAhC,CACCd,qBADD,EAECY,mBAFD;IAIA,CAPF;IAUAJ,QAAQ,CAACC,KAAT,CAAeM,IAAf,CAAoBC,QAApB,CACC,mBADD,EAEC,CAACN,WAAD,EAAcO,QAAd,KAA2B;MAC1B,MAAM;QAAEZ,KAAF;QAASC,IAAT;QAAeF;MAAf,IAA2B,IAAjC;MAEA,MAAMc,GAAG,GAAGhB,iBAAiB,CAACiB,gBAAlB,CAAmCd,KAAnC,EAA0CC,IAA1C,CAAZ;MACAI,WAAW,CAACU,QAAZ,CAAqBhB,OAArB,EAA8Bc,GAA9B,EAAmCZ,IAAnC,EAAyCW,QAAzC;IACA,CAPF;EASA;EAED;AACD;AACA;AACA;AACA;;;EACwB,OAAhBE,gBAAgB,CAACd,KAAD,EAAQC,IAAR,EAAc;IACpC,MAAMY,GAAG,GAAG,IAAIlB,qBAAJ,CAA0BK,KAA1B,CAAZ;IACAa,GAAG,CAACG,GAAJ,GAAU;MAAEf;IAAF,CAAV;IACA,OAAOY,GAAP;EACA;;AAlDsB;;AAqDxBI,MAAM,CAACC,OAAP,GAAiBrB,iBAAjB"},"metadata":{},"sourceType":"script"}