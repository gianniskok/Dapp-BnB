{"ast":null,"code":"'use strict';\n\nconst figgyPudding = require('figgy-pudding');\n\nconst index = require('./lib/entry-index');\n\nconst memo = require('./lib/memoization');\n\nconst write = require('./lib/content/write');\n\nconst to = require('mississippi').to;\n\nconst PutOpts = figgyPudding({\n  algorithms: {\n    default: ['sha512']\n  },\n  integrity: {},\n  memoize: {},\n  metadata: {},\n  pickAlgorithm: {},\n  size: {},\n  tmpPrefix: {},\n  single: {},\n  sep: {},\n  error: {},\n  strict: {}\n});\nmodule.exports = putData;\n\nfunction putData(cache, key, data, opts) {\n  opts = PutOpts(opts);\n  return write(cache, data, opts).then(res => {\n    return index.insert(cache, key, res.integrity, opts.concat({\n      size: res.size\n    })).then(entry => {\n      if (opts.memoize) {\n        memo.put(cache, entry, data, opts);\n      }\n\n      return res.integrity;\n    });\n  });\n}\n\nmodule.exports.stream = putStream;\n\nfunction putStream(cache, key, opts) {\n  opts = PutOpts(opts);\n  let integrity;\n  let size;\n  const contentStream = write.stream(cache, opts).on('integrity', int => {\n    integrity = int;\n  }).on('size', s => {\n    size = s;\n  });\n  let memoData;\n  let memoTotal = 0;\n  const stream = to((chunk, enc, cb) => {\n    contentStream.write(chunk, enc, () => {\n      if (opts.memoize) {\n        if (!memoData) {\n          memoData = [];\n        }\n\n        memoData.push(chunk);\n        memoTotal += chunk.length;\n      }\n\n      cb();\n    });\n  }, cb => {\n    contentStream.end(() => {\n      index.insert(cache, key, integrity, opts.concat({\n        size\n      })).then(entry => {\n        if (opts.memoize) {\n          memo.put(cache, entry, Buffer.concat(memoData, memoTotal), opts);\n        }\n\n        stream.emit('integrity', integrity);\n        cb();\n      });\n    });\n  });\n  let erred = false;\n  stream.once('error', err => {\n    if (erred) {\n      return;\n    }\n\n    erred = true;\n    contentStream.emit('error', err);\n  });\n  contentStream.once('error', err => {\n    if (erred) {\n      return;\n    }\n\n    erred = true;\n    stream.emit('error', err);\n  });\n  return stream;\n}","map":{"version":3,"names":["figgyPudding","require","index","memo","write","to","PutOpts","algorithms","default","integrity","memoize","metadata","pickAlgorithm","size","tmpPrefix","single","sep","error","strict","module","exports","putData","cache","key","data","opts","then","res","insert","concat","entry","put","stream","putStream","contentStream","on","int","s","memoData","memoTotal","chunk","enc","cb","push","length","end","Buffer","emit","erred","once","err"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/node_modules/cacache/put.js"],"sourcesContent":["'use strict'\n\nconst figgyPudding = require('figgy-pudding')\nconst index = require('./lib/entry-index')\nconst memo = require('./lib/memoization')\nconst write = require('./lib/content/write')\nconst to = require('mississippi').to\n\nconst PutOpts = figgyPudding({\n  algorithms: {\n    default: ['sha512']\n  },\n  integrity: {},\n  memoize: {},\n  metadata: {},\n  pickAlgorithm: {},\n  size: {},\n  tmpPrefix: {},\n  single: {},\n  sep: {},\n  error: {},\n  strict: {}\n})\n\nmodule.exports = putData\nfunction putData (cache, key, data, opts) {\n  opts = PutOpts(opts)\n  return write(cache, data, opts).then(res => {\n    return index.insert(\n      cache, key, res.integrity, opts.concat({ size: res.size })\n    ).then(entry => {\n      if (opts.memoize) {\n        memo.put(cache, entry, data, opts)\n      }\n      return res.integrity\n    })\n  })\n}\n\nmodule.exports.stream = putStream\nfunction putStream (cache, key, opts) {\n  opts = PutOpts(opts)\n  let integrity\n  let size\n  const contentStream = write.stream(\n    cache, opts\n  ).on('integrity', int => {\n    integrity = int\n  }).on('size', s => {\n    size = s\n  })\n  let memoData\n  let memoTotal = 0\n  const stream = to((chunk, enc, cb) => {\n    contentStream.write(chunk, enc, () => {\n      if (opts.memoize) {\n        if (!memoData) { memoData = [] }\n        memoData.push(chunk)\n        memoTotal += chunk.length\n      }\n      cb()\n    })\n  }, cb => {\n    contentStream.end(() => {\n      index.insert(cache, key, integrity, opts.concat({ size })).then(entry => {\n        if (opts.memoize) {\n          memo.put(cache, entry, Buffer.concat(memoData, memoTotal), opts)\n        }\n        stream.emit('integrity', integrity)\n        cb()\n      })\n    })\n  })\n  let erred = false\n  stream.once('error', err => {\n    if (erred) { return }\n    erred = true\n    contentStream.emit('error', err)\n  })\n  contentStream.once('error', err => {\n    if (erred) { return }\n    erred = true\n    stream.emit('error', err)\n  })\n  return stream\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}