{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\")} Resolver */\n\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source hook\n   * @param {Array<string>} root roots\n   * @param {string | ResolveStepHook} target target hook\n   * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n   */\n  constructor(source, root, target, ignoreErrors) {\n    this.root = root;\n    this.source = source;\n    this.target = target;\n    this._ignoreErrors = ignoreErrors;\n  }\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"RootPlugin\", (request, resolveContext, callback) => {\n      const req = request.request;\n      if (!req) return callback();\n      if (!req.startsWith(\"/\")) return callback();\n      const path = resolver.join(this.root, req.slice(1));\n      const obj = Object.assign(request, {\n        path,\n        relativePath: request.relativePath && path\n      });\n      resolver.doResolve(target, obj, `root path ${this.root}`, resolveContext, this._ignoreErrors ? (err, result) => {\n        if (err) {\n          if (resolveContext.log) {\n            resolveContext.log(`Ignored fatal error while resolving root path:\\n${err}`);\n          }\n\n          return callback();\n        }\n\n        if (result) return callback(null, result);\n        callback();\n      } : callback);\n    });\n  }\n\n}\n\nmodule.exports = RootPlugin;","map":{"version":3,"names":["RootPlugin","constructor","source","root","target","ignoreErrors","_ignoreErrors","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","req","startsWith","path","join","slice","obj","Object","assign","relativePath","doResolve","err","result","log","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/enhanced-resolve/lib/RootPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nclass RootPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source hook\n\t * @param {Array<string>} root roots\n\t * @param {string | ResolveStepHook} target target hook\n\t * @param {boolean=} ignoreErrors ignore error during resolving of root paths\n\t */\n\tconstructor(source, root, target, ignoreErrors) {\n\t\tthis.root = root;\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t\tthis._ignoreErrors = ignoreErrors;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"RootPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst req = request.request;\n\t\t\t\tif (!req) return callback();\n\t\t\t\tif (!req.startsWith(\"/\")) return callback();\n\n\t\t\t\tconst path = resolver.join(this.root, req.slice(1));\n\t\t\t\tconst obj = Object.assign(request, {\n\t\t\t\t\tpath,\n\t\t\t\t\trelativePath: request.relativePath && path\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t`root path ${this.root}`,\n\t\t\t\t\tresolveContext,\n\t\t\t\t\tthis._ignoreErrors\n\t\t\t\t\t\t? (err, result) => {\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\tif (resolveContext.log) {\n\t\t\t\t\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\t\t\t\t`Ignored fatal error while resolving root path:\\n${err}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn callback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: callback\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n\nmodule.exports = RootPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,UAAN,CAAiB;EAChB;AACD;AACA;AACA;AACA;AACA;EACCC,WAAW,CAACC,MAAD,EAASC,IAAT,EAAeC,MAAf,EAAuBC,YAAvB,EAAqC;IAC/C,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKD,MAAL,GAAcA,MAAd;IACA,KAAKE,MAAL,GAAcA,MAAd;IACA,KAAKE,aAAL,GAAqBD,YAArB;EACA;EAED;AACD;AACA;AACA;;;EACCE,KAAK,CAACC,QAAD,EAAW;IACf,MAAMJ,MAAM,GAAGI,QAAQ,CAACC,UAAT,CAAoB,KAAKL,MAAzB,CAAf;IAEAI,QAAQ,CACNE,OADF,CACU,KAAKR,MADf,EAEES,QAFF,CAEW,YAFX,EAEyB,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MAC9D,MAAMC,GAAG,GAAGH,OAAO,CAACA,OAApB;MACA,IAAI,CAACG,GAAL,EAAU,OAAOD,QAAQ,EAAf;MACV,IAAI,CAACC,GAAG,CAACC,UAAJ,CAAe,GAAf,CAAL,EAA0B,OAAOF,QAAQ,EAAf;MAE1B,MAAMG,IAAI,GAAGT,QAAQ,CAACU,IAAT,CAAc,KAAKf,IAAnB,EAAyBY,GAAG,CAACI,KAAJ,CAAU,CAAV,CAAzB,CAAb;MACA,MAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcV,OAAd,EAAuB;QAClCK,IADkC;QAElCM,YAAY,EAAEX,OAAO,CAACW,YAAR,IAAwBN;MAFJ,CAAvB,CAAZ;MAIAT,QAAQ,CAACgB,SAAT,CACCpB,MADD,EAECgB,GAFD,EAGE,aAAY,KAAKjB,IAAK,EAHxB,EAICU,cAJD,EAKC,KAAKP,aAAL,GACG,CAACmB,GAAD,EAAMC,MAAN,KAAiB;QACjB,IAAID,GAAJ,EAAS;UACR,IAAIZ,cAAc,CAACc,GAAnB,EAAwB;YACvBd,cAAc,CAACc,GAAf,CACE,mDAAkDF,GAAI,EADxD;UAGA;;UACD,OAAOX,QAAQ,EAAf;QACA;;QACD,IAAIY,MAAJ,EAAY,OAAOZ,QAAQ,CAAC,IAAD,EAAOY,MAAP,CAAf;QACZZ,QAAQ;MACP,CAZJ,GAaGA,QAlBJ;IAoBA,CAhCF;EAiCA;;AAtDe;;AAyDjBc,MAAM,CAACC,OAAP,GAAiB7B,UAAjB"},"metadata":{},"sourceType":"script"}