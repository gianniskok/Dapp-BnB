{"ast":null,"code":"module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable; // Browser ReadableStream\n\n  if (readable.getReader) {\n    return async function* () {\n      const reader = readable.getReader();\n\n      try {\n        while (true) {\n          const {\n            done,\n            value\n          } = await reader.read();\n          if (done) return;\n          yield value;\n        }\n      } finally {\n        reader.releaseLock();\n      }\n    }();\n  }\n\n  throw new Error('unknown stream');\n};","map":{"version":3,"names":["module","exports","readable","Symbol","asyncIterator","getReader","reader","done","value","read","releaseLock","Error"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/stream-to-it/source.js"],"sourcesContent":["module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,QAAQ,IAAI;EAC3B;EACA,IAAIA,QAAQ,CAACC,MAAM,CAACC,aAAR,CAAZ,EAAoC,OAAOF,QAAP,CAFT,CAI3B;;EACA,IAAIA,QAAQ,CAACG,SAAb,EAAwB;IACtB,OAAQ,mBAAoB;MAC1B,MAAMC,MAAM,GAAGJ,QAAQ,CAACG,SAAT,EAAf;;MAEA,IAAI;QACF,OAAO,IAAP,EAAa;UACX,MAAM;YAAEE,IAAF;YAAQC;UAAR,IAAkB,MAAMF,MAAM,CAACG,IAAP,EAA9B;UACA,IAAIF,IAAJ,EAAU;UACV,MAAMC,KAAN;QACD;MACF,CAND,SAMU;QACRF,MAAM,CAACI,WAAP;MACD;IACF,CAZM,EAAP;EAaD;;EAED,MAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,CAtBD"},"metadata":{},"sourceType":"script"}