{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n\n  var $async = it.schema.$async === true,\n      $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n      $id = it.self._getId(it.schema);\n\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);else throw new Error($keywordsMsg);\n    }\n  }\n\n  if (it.isTop) {\n    out += ' var validate = ';\n\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + $valid + ' = false; ';\n      }\n\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = '';\n      /* istanbul ignore else */\n\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: {} ';\n\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n        }\n\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n\n      var __err = out;\n      out = $$outStack.pop();\n\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + __err + ']); ';\n        } else {\n          out += ' validate.errors = [' + __err + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + $valid + ' = true; ';\n      }\n    }\n\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n\n    return out;\n  }\n\n  if (it.isTop) {\n    var $top = it.isTop,\n        $lvl = it.level = 0,\n        $dataLvl = it.dataLevel = 0,\n        $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);else throw new Error($defaultMsg);\n    }\n\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n        $dataLvl = it.dataLevel,\n        $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + $lvl + ' = errors;';\n  }\n\n  var $valid = 'valid' + $lvl,\n      $breakOnError = !it.opts.allErrors,\n      $closingBraces1 = '',\n      $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n      $typeIsArray = Array.isArray($typeSchema);\n\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + it.RULES.all.$comment.code(it, '$comment');\n  }\n\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n\n    var $rulesGroup = it.RULES.types[$typeSchema];\n\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || $rulesGroup && !$shouldUseGroup($rulesGroup)) {\n      var $schemaPath = it.schemaPath + '.type',\n          $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n          $errSchemaPath = it.errSchemaPath + '/type',\n          $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true) + ') { ';\n\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n            $coerced = 'coerced' + $lvl;\n        out += ' var ' + $dataType + ' = typeof ' + $data + '; var ' + $coerced + ' = undefined; ';\n\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + $dataType + ' == \\'object\\' && Array.isArray(' + $data + ') && ' + $data + '.length == 1) { ' + $data + ' = ' + $data + '[0]; ' + $dataType + ' = typeof ' + $data + '; if (' + it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers) + ') ' + $coerced + ' = ' + $data + '; } ';\n        }\n\n        out += ' if (' + $coerced + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n\n        if (arr1) {\n          var $type,\n              $i = -1,\n              l1 = arr1.length - 1;\n\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n\n            if ($type == 'string') {\n              out += ' else if (' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\') ' + $coerced + ' = \\'\\' + ' + $data + '; else if (' + $data + ' === null) ' + $coerced + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + $dataType + ' == \\'boolean\\' || ' + $data + ' === null || (' + $dataType + ' == \\'string\\' && ' + $data + ' && ' + $data + ' == +' + $data + ' ';\n\n              if ($type == 'integer') {\n                out += ' && !(' + $data + ' % 1)';\n              }\n\n              out += ')) ' + $coerced + ' = +' + $data + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + $data + ' === \\'false\\' || ' + $data + ' === 0 || ' + $data + ' === null) ' + $coerced + ' = false; else if (' + $data + ' === \\'true\\' || ' + $data + ' === 1) ' + $coerced + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + $data + ' === \\'\\' || ' + $data + ' === 0 || ' + $data + ' === false) ' + $coerced + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + $dataType + ' == \\'string\\' || ' + $dataType + ' == \\'number\\' || ' + $dataType + ' == \\'boolean\\' || ' + $data + ' == null) ' + $coerced + ' = [' + $data + ']; ';\n            }\n          }\n        }\n\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = '';\n        /* istanbul ignore else */\n\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n\n          out += '\\' } ';\n\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n\n            out += '\\' ';\n          }\n\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n\n        var __err = out;\n        out = $$outStack.pop();\n\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n\n        out += ' } if (' + $coerced + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + ($dataLvl - 1 || '') : 'parentData',\n            $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + $data + ' = ' + $coerced + '; ';\n\n        if (!$dataLvl) {\n          out += 'if (' + $parentData + ' !== undefined)';\n        }\n\n        out += ' ' + $parentData + '[' + $parentDataProperty + '] = ' + $coerced + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = '';\n        /* istanbul ignore else */\n\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n          if ($typeIsArray) {\n            out += '' + $typeSchema.join(\",\");\n          } else {\n            out += '' + $typeSchema;\n          }\n\n          out += '\\' } ';\n\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n\n            if ($typeIsArray) {\n              out += '' + $typeSchema.join(\",\");\n            } else {\n              out += '' + $typeSchema;\n            }\n\n            out += '\\' ';\n          }\n\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n          }\n\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n\n        var __err = out;\n        out = $$outStack.pop();\n\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + __err + ']); ';\n          } else {\n            out += ' validate.errors = [' + __err + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n\n      out += ' } ';\n    }\n  }\n\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + it.RULES.all.$ref.code(it, '$ref') + ' ';\n\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + $lvl;\n      }\n\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n\n    if (arr2) {\n      var $rulesGroup,\n          i2 = -1,\n          l2 = arr2.length - 1;\n\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers) + ') { ';\n          }\n\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                  $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n\n              if (arr3) {\n                var $propertyKey,\n                    i3 = -1,\n                    l3 = arr3.length - 1;\n\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + $passData + ' === undefined ';\n\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + $passData + ' === null || ' + $passData + ' === \\'\\' ';\n                      }\n\n                      out += ' ) ' + $passData + ' = ';\n\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + it.useDefault($sch.default) + ' ';\n                      } else {\n                        out += ' ' + JSON.stringify($sch.default) + ' ';\n                      }\n\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n\n              if (arr4) {\n                var $sch,\n                    $i = -1,\n                    l4 = arr4.length - 1;\n\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + $passData + ' === undefined ';\n\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + $passData + ' === null || ' + $passData + ' === \\'\\' ';\n                      }\n\n                      out += ' ) ' + $passData + ' = ';\n\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + it.useDefault($sch.default) + ' ';\n                      } else {\n                        out += ' ' + JSON.stringify($sch.default) + ' ';\n                      }\n\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n\n          var arr5 = $rulesGroup.rules;\n\n          if (arr5) {\n            var $rule,\n                i5 = -1,\n                l5 = arr5.length - 1;\n\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n\n                if ($code) {\n                  out += ' ' + $code + ' ';\n\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' ' + $closingBraces1 + ' ';\n            $closingBraces1 = '';\n          }\n\n          if ($rulesGroup.type) {\n            out += ' } ';\n\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                  $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = '';\n              /* istanbul ignore else */\n\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { type: \\'';\n\n                if ($typeIsArray) {\n                  out += '' + $typeSchema.join(\",\");\n                } else {\n                  out += '' + $typeSchema;\n                }\n\n                out += '\\' } ';\n\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n\n                  if ($typeIsArray) {\n                    out += '' + $typeSchema.join(\",\");\n                  } else {\n                    out += '' + $typeSchema;\n                  }\n\n                  out += '\\' ';\n                }\n\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n                }\n\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n\n              var __err = out;\n              out = $$outStack.pop();\n\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + __err + ']); ';\n                } else {\n                  out += ' validate.errors = [' + __err + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n\n              out += ' } ';\n            }\n          }\n\n          if ($breakOnError) {\n            out += ' if (errors === ';\n\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + $lvl;\n            }\n\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n\n  if ($breakOnError) {\n    out += ' ' + $closingBraces2 + ' ';\n  }\n\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + $valid + ' = errors === errs_' + $lvl + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n\n    for (var i = 0; i < rules.length; i++) if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || $rule.implements && $ruleImplementsSomeKeyword($rule);\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n\n    for (var i = 0; i < impl.length; i++) if (it.schema[impl[i]] !== undefined) return true;\n  }\n\n  return out;\n};","map":{"version":3,"names":["module","exports","generate_validate","it","$keyword","$ruleType","out","$async","schema","$refKeywords","util","schemaHasRulesExcept","RULES","all","$id","self","_getId","opts","strictKeywords","$unknownKwd","schemaUnknownRules","keywords","$keywordsMsg","logger","warn","Error","isTop","async","sourceCode","processCode","$ref","$lvl","level","$dataLvl","dataLevel","$schema","$schemaPath","schemaPath","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","allErrors","$errorKeyword","$data","$valid","$$outStack","push","createErrors","errorPath","toQuotedString","messages","verbose","__err","pop","compositeRule","$top","rootId","resolve","fullPath","root","baseId","dataPathArr","default","undefined","useDefaults","strictDefaults","$defaultMsg","url","$closingBraces1","$closingBraces2","$typeSchema","type","$typeIsArray","Array","isArray","nullable","indexOf","concat","length","extendRefs","$comment","code","coerceTypes","$coerceToTypes","coerceToTypes","$rulesGroup","types","$shouldUseGroup","$method","strictNumbers","$dataType","$coerced","checkDataType","arr1","$type","$i","l1","join","$parentData","$parentDataProperty","arr2","i2","l2","properties","$schemaKeys","Object","keys","arr3","$propertyKey","i3","l3","$sch","$passData","useDefault","JSON","stringify","items","arr4","l4","arr5","rules","$rule","i5","l5","$shouldUseRule","$code","keyword","i","implements","$ruleImplementsSomeKeyword","impl"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ajv/lib/dotjs/validate.js"],"sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.opts.strictKeywords) {\n    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);\n    if ($unknownKwd) {\n      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;\n      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);\n      else throw new Error($keywordsMsg);\n    }\n  }\n  if (it.isTop) {\n    out += ' var validate = ';\n    if ($async) {\n      it.async = true;\n      out += 'async ';\n    }\n    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) {\n        /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }; return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [\"\"];\n    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {\n      var $defaultMsg = 'default is ignored in the schema root';\n      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n      else throw new Error($defaultMsg);\n    }\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {\n    if ($typeIsArray) {\n      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');\n    } else if ($typeSchema != 'null') {\n      $typeSchema = [$typeSchema, 'null'];\n      $typeIsArray = true;\n    }\n  }\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      it.logger.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if (it.schema.$comment && it.opts.$comment) {\n    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, it.opts.strictNumbers, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; var ' + ($coerced) + ' = undefined; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ') && ' + ($data) + '.length == 1) { ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + '; if (' + (it.util.checkDataType(it.schema.type, $data, it.opts.strictNumbers)) + ') ' + ($coerced) + ' = ' + ($data) + '; } ';\n        }\n        out += ' if (' + ($coerced) + ' !== undefined) ; ';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($type == 'string') {\n              out += ' else if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' else if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' else if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' else if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' else if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' else {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } if (' + ($coerced) + ' !== undefined) {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) {\n          /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data, it.opts.strictNumbers)) + ') { ';\n          }\n          if (it.opts.useDefaults) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    if (it.compositeRule) {\n                      if (it.opts.strictDefaults) {\n                        var $defaultMsg = 'default is ignored for: ' + $passData;\n                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);\n                        else throw new Error($defaultMsg);\n                      }\n                    } else {\n                      out += ' if (' + ($passData) + ' === undefined ';\n                      if (it.opts.useDefaults == 'empty') {\n                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \\'\\' ';\n                      }\n                      out += ' ) ' + ($passData) + ' = ';\n                      if (it.opts.useDefaults == 'shared') {\n                        out += ' ' + (it.useDefault($sch.default)) + ' ';\n                      } else {\n                        out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                      }\n                      out += '; ';\n                    }\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) {\n                /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }; return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));\n  }\n\n  function $ruleImplementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}