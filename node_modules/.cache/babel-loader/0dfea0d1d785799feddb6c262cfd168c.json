{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    };\n  }\n\n  return stat;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","stat","options","res","post","signal","searchParams","headers","data","json","numObjects","BigInt","NumObjects","repoSize","RepoSize","repoPath","RepoPath","version","Version","storageMax","StorageMax"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/repo/stat.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,IAAf,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,WAAT,EAAsB;MACtCC,MAAM,EAAEH,OAAO,CAACG,MADsB;MAEtCC,YAAY,EAAET,iBAAiB,CAACK,OAAD,CAFO;MAGtCK,OAAO,EAAEL,OAAO,CAACK;IAHqB,CAAtB,CAAlB;IAKA,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;IAEA,OAAO;MACLC,UAAU,EAAEC,MAAM,CAACH,IAAI,CAACI,UAAN,CADb;MAELC,QAAQ,EAAEF,MAAM,CAACH,IAAI,CAACM,QAAN,CAFX;MAGLC,QAAQ,EAAEP,IAAI,CAACQ,QAHV;MAILC,OAAO,EAAET,IAAI,CAACU,OAJT;MAKLC,UAAU,EAAER,MAAM,CAACH,IAAI,CAACY,UAAN;IALb,CAAP;EAOD;;EACD,OAAOnB,IAAP;AACD,CArByB,CAA1B"},"metadata":{},"sourceType":"script"}