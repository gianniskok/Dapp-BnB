{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MappingsContext {\n  constructor() {\n    this.sourcesIndices = new Map();\n    this.sourcesContent = new Map();\n    this.hasSourceContent = false;\n    this.currentOriginalLine = 1;\n    this.currentSource = 0;\n    this.unfinishedGeneratedLine = false;\n  }\n\n  ensureSource(source, originalSource) {\n    let idx = this.sourcesIndices.get(source);\n\n    if (typeof idx === \"number\") {\n      return idx;\n    }\n\n    idx = this.sourcesIndices.size;\n    this.sourcesIndices.set(source, idx);\n    this.sourcesContent.set(source, originalSource);\n    if (typeof originalSource === \"string\") this.hasSourceContent = true;\n    return idx;\n  }\n\n  getArrays() {\n    const sources = [];\n    const sourcesContent = [];\n\n    for (const pair of this.sourcesContent) {\n      sources.push(pair[0]);\n      sourcesContent.push(pair[1]);\n    }\n\n    return {\n      sources,\n      sourcesContent\n    };\n  }\n\n}\n\nmodule.exports = MappingsContext;","map":{"version":3,"names":["MappingsContext","constructor","sourcesIndices","Map","sourcesContent","hasSourceContent","currentOriginalLine","currentSource","unfinishedGeneratedLine","ensureSource","source","originalSource","idx","get","size","set","getArrays","sources","pair","push","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/source-list-map/lib/MappingsContext.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass MappingsContext {\n\tconstructor() {\n\t\tthis.sourcesIndices = new Map();\n\t\tthis.sourcesContent = new Map();\n\t\tthis.hasSourceContent = false;\n\t\tthis.currentOriginalLine = 1;\n\t\tthis.currentSource = 0;\n\t\tthis.unfinishedGeneratedLine = false;\n\t}\n\n\tensureSource(source, originalSource) {\n\t\tlet idx = this.sourcesIndices.get(source);\n\t\tif(typeof idx === \"number\") {\n\t\t\treturn idx;\n\t\t}\n\t\tidx = this.sourcesIndices.size;\n\t\tthis.sourcesIndices.set(source, idx);\n\t\tthis.sourcesContent.set(source, originalSource)\n\t\tif(typeof originalSource === \"string\")\n\t\t\tthis.hasSourceContent = true;\n\t\treturn idx;\n\t}\n\n\tgetArrays() {\n\t\tconst sources = [];\n\t\tconst sourcesContent = [];\n\n\t\tfor(const pair of this.sourcesContent) {\n\t\t\tsources.push(pair[0]);\n\t\t\tsourcesContent.push(pair[1]);\n\t\t}\n\n\t\treturn {\n\t\t\tsources,\n\t\t\tsourcesContent\n\t\t};\n\t}\n}\nmodule.exports = MappingsContext;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,eAAN,CAAsB;EACrBC,WAAW,GAAG;IACb,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;IACA,KAAKC,cAAL,GAAsB,IAAID,GAAJ,EAAtB;IACA,KAAKE,gBAAL,GAAwB,KAAxB;IACA,KAAKC,mBAAL,GAA2B,CAA3B;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,uBAAL,GAA+B,KAA/B;EACA;;EAEDC,YAAY,CAACC,MAAD,EAASC,cAAT,EAAyB;IACpC,IAAIC,GAAG,GAAG,KAAKV,cAAL,CAAoBW,GAApB,CAAwBH,MAAxB,CAAV;;IACA,IAAG,OAAOE,GAAP,KAAe,QAAlB,EAA4B;MAC3B,OAAOA,GAAP;IACA;;IACDA,GAAG,GAAG,KAAKV,cAAL,CAAoBY,IAA1B;IACA,KAAKZ,cAAL,CAAoBa,GAApB,CAAwBL,MAAxB,EAAgCE,GAAhC;IACA,KAAKR,cAAL,CAAoBW,GAApB,CAAwBL,MAAxB,EAAgCC,cAAhC;IACA,IAAG,OAAOA,cAAP,KAA0B,QAA7B,EACC,KAAKN,gBAAL,GAAwB,IAAxB;IACD,OAAOO,GAAP;EACA;;EAEDI,SAAS,GAAG;IACX,MAAMC,OAAO,GAAG,EAAhB;IACA,MAAMb,cAAc,GAAG,EAAvB;;IAEA,KAAI,MAAMc,IAAV,IAAkB,KAAKd,cAAvB,EAAuC;MACtCa,OAAO,CAACE,IAAR,CAAaD,IAAI,CAAC,CAAD,CAAjB;MACAd,cAAc,CAACe,IAAf,CAAoBD,IAAI,CAAC,CAAD,CAAxB;IACA;;IAED,OAAO;MACND,OADM;MAENb;IAFM,CAAP;EAIA;;AApCoB;;AAsCtBgB,MAAM,CAACC,OAAP,GAAiBrB,eAAjB"},"metadata":{},"sourceType":"script"}