{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\nvar normalize = require(\"./normalize\");\n\nvar errors = require(\"errno\");\n\nvar stream = require(\"readable-stream\");\n\nvar ReadableStream = stream.Readable;\nvar WritableStream = stream.Writable;\n\nfunction MemoryFileSystemError(err, path) {\n  Error.call(this);\n  if (Error.captureStackTrace) Error.captureStackTrace(this, arguments.callee);\n  this.code = err.code;\n  this.errno = err.errno;\n  this.message = err.description;\n  this.path = path;\n}\n\nMemoryFileSystemError.prototype = new Error();\n\nfunction MemoryFileSystem(data) {\n  this.data = data || {};\n}\n\nmodule.exports = MemoryFileSystem;\n\nfunction isDir(item) {\n  if (typeof item !== \"object\") return false;\n  return item[\"\"] === true;\n}\n\nfunction isFile(item) {\n  if (typeof item !== \"object\") return false;\n  return !item[\"\"];\n}\n\nfunction pathToArray(path) {\n  path = normalize(path);\n  var nix = /^\\//.test(path);\n\n  if (!nix) {\n    if (!/^[A-Za-z]:/.test(path)) {\n      throw new MemoryFileSystemError(errors.code.EINVAL, path);\n    }\n\n    path = path.replace(/[\\\\\\/]+/g, \"\\\\\"); // multi slashs\n\n    path = path.split(/[\\\\\\/]/);\n    path[0] = path[0].toUpperCase();\n  } else {\n    path = path.replace(/\\/+/g, \"/\"); // multi slashs\n\n    path = path.substr(1).split(\"/\");\n  }\n\n  if (!path[path.length - 1]) path.pop();\n  return path;\n}\n\nfunction trueFn() {\n  return true;\n}\n\nfunction falseFn() {\n  return false;\n}\n\nMemoryFileSystem.prototype.meta = function (_path) {\n  var path = pathToArray(_path);\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) return;\n    current = current[path[i]];\n  }\n\n  return current[path[i]];\n};\n\nMemoryFileSystem.prototype.existsSync = function (_path) {\n  return !!this.meta(_path);\n};\n\nMemoryFileSystem.prototype.statSync = function (_path) {\n  var current = this.meta(_path);\n\n  if (_path === \"/\" || isDir(current)) {\n    return {\n      isFile: falseFn,\n      isDirectory: trueFn,\n      isBlockDevice: falseFn,\n      isCharacterDevice: falseFn,\n      isSymbolicLink: falseFn,\n      isFIFO: falseFn,\n      isSocket: falseFn\n    };\n  } else if (isFile(current)) {\n    return {\n      isFile: trueFn,\n      isDirectory: falseFn,\n      isBlockDevice: falseFn,\n      isCharacterDevice: falseFn,\n      isSymbolicLink: falseFn,\n      isFIFO: falseFn,\n      isSocket: falseFn\n    };\n  } else {\n    throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n  }\n};\n\nMemoryFileSystem.prototype.readFileSync = function (_path, encoding) {\n  var path = pathToArray(_path);\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n    current = current[path[i]];\n  }\n\n  if (!isFile(current[path[i]])) {\n    if (isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.EISDIR, _path);else throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n  }\n\n  current = current[path[i]];\n  return encoding ? current.toString(encoding) : current;\n};\n\nMemoryFileSystem.prototype.readdirSync = function (_path) {\n  if (_path === \"/\") return Object.keys(this.data).filter(Boolean);\n  var path = pathToArray(_path);\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n    current = current[path[i]];\n  }\n\n  if (!isDir(current[path[i]])) {\n    if (isFile(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);else throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n  }\n\n  return Object.keys(current[path[i]]).filter(Boolean);\n};\n\nMemoryFileSystem.prototype.mkdirpSync = function (_path) {\n  var path = pathToArray(_path);\n  if (path.length === 0) return;\n  var current = this.data;\n\n  for (var i = 0; i < path.length; i++) {\n    if (isFile(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);else if (!isDir(current[path[i]])) current[path[i]] = {\n      \"\": true\n    };\n    current = current[path[i]];\n  }\n\n  return;\n};\n\nMemoryFileSystem.prototype.mkdirSync = function (_path) {\n  var path = pathToArray(_path);\n  if (path.length === 0) return;\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n    current = current[path[i]];\n  }\n\n  if (isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.EEXIST, _path);else if (isFile(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOTDIR, _path);\n  current[path[i]] = {\n    \"\": true\n  };\n  return;\n};\n\nMemoryFileSystem.prototype._remove = function (_path, name, testFn) {\n  var path = pathToArray(_path);\n\n  if (path.length === 0) {\n    throw new MemoryFileSystemError(errors.code.EPERM, _path);\n  }\n\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n    current = current[path[i]];\n  }\n\n  if (!testFn(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n  delete current[path[i]];\n  return;\n};\n\nMemoryFileSystem.prototype.rmdirSync = function (_path) {\n  return this._remove(_path, \"Directory\", isDir);\n};\n\nMemoryFileSystem.prototype.unlinkSync = function (_path) {\n  return this._remove(_path, \"File\", isFile);\n};\n\nMemoryFileSystem.prototype.readlinkSync = function (_path) {\n  throw new MemoryFileSystemError(errors.code.ENOSYS, _path);\n};\n\nMemoryFileSystem.prototype.writeFileSync = function (_path, content, encoding) {\n  if (!content && !encoding) throw new Error(\"No content\");\n  var path = pathToArray(_path);\n\n  if (path.length === 0) {\n    throw new MemoryFileSystemError(errors.code.EISDIR, _path);\n  }\n\n  var current = this.data;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    if (!isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.ENOENT, _path);\n    current = current[path[i]];\n  }\n\n  if (isDir(current[path[i]])) throw new MemoryFileSystemError(errors.code.EISDIR, _path);\n  current[path[i]] = encoding || typeof content === \"string\" ? new Buffer(content, encoding) : content;\n  return;\n};\n\nMemoryFileSystem.prototype.join = require(\"./join\");\nMemoryFileSystem.prototype.pathToArray = pathToArray;\nMemoryFileSystem.prototype.normalize = normalize; // stream functions\n\nMemoryFileSystem.prototype.createReadStream = function (path, options) {\n  var stream = new ReadableStream();\n  var done = false;\n  var data;\n\n  try {\n    data = this.readFileSync(path);\n  } catch (e) {\n    stream._read = function () {\n      if (done) {\n        return;\n      }\n\n      done = true;\n      this.emit('error', e);\n      this.push(null);\n    };\n\n    return stream;\n  }\n\n  options = options || {};\n  options.start = options.start || 0;\n  options.end = options.end || data.length;\n\n  stream._read = function () {\n    if (done) {\n      return;\n    }\n\n    done = true;\n    this.push(data.slice(options.start, options.end));\n    this.push(null);\n  };\n\n  return stream;\n};\n\nMemoryFileSystem.prototype.createWriteStream = function (path, options) {\n  var stream = new WritableStream(),\n      self = this;\n\n  try {\n    // Zero the file and make sure it is writable\n    this.writeFileSync(path, new Buffer(0));\n  } catch (e) {\n    // This or setImmediate?\n    stream.once('prefinish', function () {\n      stream.emit('error', e);\n    });\n    return stream;\n  }\n\n  var bl = [],\n      len = 0;\n\n  stream._write = function (chunk, encoding, callback) {\n    bl.push(chunk);\n    len += chunk.length;\n    self.writeFile(path, Buffer.concat(bl, len), callback);\n  };\n\n  return stream;\n}; // async functions\n\n\n[\"stat\", \"readdir\", \"mkdirp\", \"rmdir\", \"unlink\", \"readlink\"].forEach(function (fn) {\n  MemoryFileSystem.prototype[fn] = function (path, callback) {\n    try {\n      var result = this[fn + \"Sync\"](path);\n    } catch (e) {\n      setImmediate(function () {\n        callback(e);\n      });\n      return;\n    }\n\n    setImmediate(function () {\n      callback(null, result);\n    });\n  };\n});\n[\"mkdir\", \"readFile\"].forEach(function (fn) {\n  MemoryFileSystem.prototype[fn] = function (path, optArg, callback) {\n    if (!callback) {\n      callback = optArg;\n      optArg = undefined;\n    }\n\n    try {\n      var result = this[fn + \"Sync\"](path, optArg);\n    } catch (e) {\n      setImmediate(function () {\n        callback(e);\n      });\n      return;\n    }\n\n    setImmediate(function () {\n      callback(null, result);\n    });\n  };\n});\n\nMemoryFileSystem.prototype.exists = function (path, callback) {\n  return callback(this.existsSync(path));\n};\n\nMemoryFileSystem.prototype.writeFile = function (path, content, encoding, callback) {\n  if (!callback) {\n    callback = encoding;\n    encoding = undefined;\n  }\n\n  try {\n    this.writeFileSync(path, content, encoding);\n  } catch (e) {\n    return callback(e);\n  }\n\n  return callback();\n};","map":{"version":3,"names":["normalize","require","errors","stream","ReadableStream","Readable","WritableStream","Writable","MemoryFileSystemError","err","path","Error","call","captureStackTrace","arguments","callee","code","errno","message","description","prototype","MemoryFileSystem","data","module","exports","isDir","item","isFile","pathToArray","nix","test","EINVAL","replace","split","toUpperCase","substr","length","pop","trueFn","falseFn","meta","_path","current","i","existsSync","statSync","isDirectory","isBlockDevice","isCharacterDevice","isSymbolicLink","isFIFO","isSocket","ENOENT","readFileSync","encoding","EISDIR","toString","readdirSync","Object","keys","filter","Boolean","ENOTDIR","mkdirpSync","mkdirSync","EEXIST","_remove","name","testFn","EPERM","rmdirSync","unlinkSync","readlinkSync","ENOSYS","writeFileSync","content","Buffer","join","createReadStream","options","done","e","_read","emit","push","start","end","slice","createWriteStream","self","once","bl","len","_write","chunk","callback","writeFile","concat","forEach","fn","result","setImmediate","optArg","undefined","exists"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/memory-fs/lib/MemoryFileSystem.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n\r\nvar normalize = require(\"./normalize\");\r\nvar errors = require(\"errno\");\r\nvar stream = require(\"readable-stream\");\r\n\r\nvar ReadableStream = stream.Readable;\r\nvar WritableStream = stream.Writable;\r\n\r\nfunction MemoryFileSystemError(err, path) {\r\n\tError.call(this)\r\n\tif (Error.captureStackTrace)\r\n\t\tError.captureStackTrace(this, arguments.callee)\r\n\tthis.code = err.code;\r\n\tthis.errno = err.errno;\r\n\tthis.message = err.description;\r\n\tthis.path = path;\r\n}\r\nMemoryFileSystemError.prototype = new Error();\r\n\r\nfunction MemoryFileSystem(data) {\r\n\tthis.data = data || {};\r\n}\r\nmodule.exports = MemoryFileSystem;\r\n\r\nfunction isDir(item) {\r\n\tif(typeof item !== \"object\") return false;\r\n\treturn item[\"\"] === true;\r\n}\r\n\r\nfunction isFile(item) {\r\n\tif(typeof item !== \"object\") return false;\r\n\treturn !item[\"\"];\r\n}\r\n\r\nfunction pathToArray(path) {\r\n\tpath = normalize(path);\r\n\tvar nix = /^\\//.test(path);\r\n\tif(!nix) {\r\n\t\tif(!/^[A-Za-z]:/.test(path)) {\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.EINVAL, path);\r\n\t\t}\r\n\t\tpath = path.replace(/[\\\\\\/]+/g, \"\\\\\"); // multi slashs\r\n\t\tpath = path.split(/[\\\\\\/]/);\r\n\t\tpath[0] = path[0].toUpperCase();\r\n\t} else {\r\n\t\tpath = path.replace(/\\/+/g, \"/\"); // multi slashs\r\n\t\tpath = path.substr(1).split(\"/\");\r\n\t}\r\n\tif(!path[path.length-1]) path.pop();\r\n\treturn path;\r\n}\r\n\r\nfunction trueFn() { return true; }\r\nfunction falseFn() { return false; }\r\n\r\nMemoryFileSystem.prototype.meta = function(_path) {\r\n\tvar path = pathToArray(_path);\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\treturn;\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\treturn current[path[i]];\r\n}\r\n\r\nMemoryFileSystem.prototype.existsSync = function(_path) {\r\n\treturn !!this.meta(_path);\r\n}\r\n\r\nMemoryFileSystem.prototype.statSync = function(_path) {\r\n\tvar current = this.meta(_path);\r\n\tif(_path === \"/\" || isDir(current)) {\r\n\t\treturn {\r\n\t\t\tisFile: falseFn,\r\n\t\t\tisDirectory: trueFn,\r\n\t\t\tisBlockDevice: falseFn,\r\n\t\t\tisCharacterDevice: falseFn,\r\n\t\t\tisSymbolicLink: falseFn,\r\n\t\t\tisFIFO: falseFn,\r\n\t\t\tisSocket: falseFn\r\n\t\t};\r\n\t} else if(isFile(current)) {\r\n\t\treturn {\r\n\t\t\tisFile: trueFn,\r\n\t\t\tisDirectory: falseFn,\r\n\t\t\tisBlockDevice: falseFn,\r\n\t\t\tisCharacterDevice: falseFn,\r\n\t\t\tisSymbolicLink: falseFn,\r\n\t\t\tisFIFO: falseFn,\r\n\t\t\tisSocket: falseFn\r\n\t\t};\r\n\t} else {\r\n\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t}\r\n};\r\n\r\nMemoryFileSystem.prototype.readFileSync = function(_path, encoding) {\r\n\tvar path = pathToArray(_path);\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\tif(!isFile(current[path[i]])) {\r\n\t\tif(isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.EISDIR, _path);\r\n\t\telse\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t}\r\n\tcurrent = current[path[i]];\r\n\treturn encoding ? current.toString(encoding) : current;\r\n};\r\n\r\nMemoryFileSystem.prototype.readdirSync = function(_path) {\r\n\tif(_path === \"/\") return Object.keys(this.data).filter(Boolean);\r\n\tvar path = pathToArray(_path);\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\tif(!isDir(current[path[i]])) {\r\n\t\tif(isFile(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOTDIR, _path);\r\n\t\telse\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t}\r\n\treturn Object.keys(current[path[i]]).filter(Boolean);\r\n};\r\n\r\nMemoryFileSystem.prototype.mkdirpSync = function(_path) {\r\n\tvar path = pathToArray(_path);\r\n\tif(path.length === 0) return;\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length; i++) {\r\n\t\tif(isFile(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOTDIR, _path);\r\n\t\telse if(!isDir(current[path[i]]))\r\n\t\t\tcurrent[path[i]] = {\"\":true};\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\treturn;\r\n};\r\n\r\nMemoryFileSystem.prototype.mkdirSync = function(_path) {\r\n\tvar path = pathToArray(_path);\r\n\tif(path.length === 0) return;\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\tif(isDir(current[path[i]]))\r\n\t\tthrow new MemoryFileSystemError(errors.code.EEXIST, _path);\r\n\telse if(isFile(current[path[i]]))\r\n\t\tthrow new MemoryFileSystemError(errors.code.ENOTDIR, _path);\r\n\tcurrent[path[i]] = {\"\":true};\r\n\treturn;\r\n};\r\n\r\nMemoryFileSystem.prototype._remove = function(_path, name, testFn) {\r\n\tvar path = pathToArray(_path);\r\n\tif(path.length === 0) {\r\n\t\tthrow new MemoryFileSystemError(errors.code.EPERM, _path);\r\n\t}\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\tif(!testFn(current[path[i]]))\r\n\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\tdelete current[path[i]];\r\n\treturn;\r\n};\r\n\r\nMemoryFileSystem.prototype.rmdirSync = function(_path) {\r\n\treturn this._remove(_path, \"Directory\", isDir);\r\n};\r\n\r\nMemoryFileSystem.prototype.unlinkSync = function(_path) {\r\n\treturn this._remove(_path, \"File\", isFile);\r\n};\r\n\r\nMemoryFileSystem.prototype.readlinkSync = function(_path) {\r\n\tthrow new MemoryFileSystemError(errors.code.ENOSYS, _path);\r\n};\r\n\r\nMemoryFileSystem.prototype.writeFileSync = function(_path, content, encoding) {\r\n\tif(!content && !encoding) throw new Error(\"No content\");\r\n\tvar path = pathToArray(_path);\r\n\tif(path.length === 0) {\r\n\t\tthrow new MemoryFileSystemError(errors.code.EISDIR, _path);\r\n\t}\r\n\tvar current = this.data;\r\n\tfor(var i = 0; i < path.length - 1; i++) {\r\n\t\tif(!isDir(current[path[i]]))\r\n\t\t\tthrow new MemoryFileSystemError(errors.code.ENOENT, _path);\r\n\t\tcurrent = current[path[i]];\r\n\t}\r\n\tif(isDir(current[path[i]]))\r\n\t\tthrow new MemoryFileSystemError(errors.code.EISDIR, _path);\r\n\tcurrent[path[i]] = encoding || typeof content === \"string\" ? new Buffer(content, encoding) : content;\r\n\treturn;\r\n};\r\n\r\nMemoryFileSystem.prototype.join = require(\"./join\");\r\nMemoryFileSystem.prototype.pathToArray = pathToArray;\r\nMemoryFileSystem.prototype.normalize = normalize;\r\n\r\n// stream functions\r\n\r\nMemoryFileSystem.prototype.createReadStream = function(path, options) {\r\n\tvar stream = new ReadableStream();\r\n\tvar done = false;\r\n\tvar data;\r\n\ttry {\r\n\t\tdata = this.readFileSync(path);\r\n\t} catch (e) {\r\n\t\tstream._read = function() {\r\n\t\t\tif (done) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdone = true;\r\n\t\t\tthis.emit('error', e);\r\n\t\t\tthis.push(null);\r\n\t\t};\r\n\t\treturn stream;\r\n\t}\r\n\toptions = options || { };\r\n\toptions.start = options.start || 0;\r\n\toptions.end = options.end || data.length;\r\n\tstream._read = function() {\r\n\t\tif (done) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdone = true;\r\n\t\tthis.push(data.slice(options.start, options.end));\r\n\t\tthis.push(null);\r\n\t};\r\n\treturn stream;\r\n};\r\n\r\nMemoryFileSystem.prototype.createWriteStream = function(path, options) {\r\n\tvar stream = new WritableStream(), self = this;\r\n\ttry {\r\n\t\t// Zero the file and make sure it is writable\r\n\t\tthis.writeFileSync(path, new Buffer(0));\r\n\t} catch(e) {\r\n\t\t// This or setImmediate?\r\n\t\tstream.once('prefinish', function() {\r\n\t\t\tstream.emit('error', e);\r\n\t\t});\r\n\t\treturn stream;\r\n\t}\r\n\tvar bl = [ ], len = 0;\r\n\tstream._write = function(chunk, encoding, callback) {\r\n\t\tbl.push(chunk);\r\n\t\tlen += chunk.length;\r\n\t\tself.writeFile(path, Buffer.concat(bl, len), callback);\r\n\t}\r\n\treturn stream;\r\n};\r\n\r\n// async functions\r\n\r\n[\"stat\", \"readdir\", \"mkdirp\", \"rmdir\", \"unlink\", \"readlink\"].forEach(function(fn) {\r\n\tMemoryFileSystem.prototype[fn] = function(path, callback) {\r\n\t\ttry {\r\n\t\t\tvar result = this[fn + \"Sync\"](path);\r\n\t\t} catch(e) {\r\n\t\t\tsetImmediate(function() {\r\n\t\t\t\tcallback(e);\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetImmediate(function() {\r\n\t\t\tcallback(null, result);\r\n\t\t});\r\n\t};\r\n});\r\n\r\n[\"mkdir\", \"readFile\"].forEach(function(fn) {\r\n\tMemoryFileSystem.prototype[fn] = function(path, optArg, callback) {\r\n\t\tif(!callback) {\r\n\t\t\tcallback = optArg;\r\n\t\t\toptArg = undefined;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tvar result = this[fn + \"Sync\"](path, optArg);\r\n\t\t} catch(e) {\r\n\t\t\tsetImmediate(function() {\r\n\t\t\t\tcallback(e);\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetImmediate(function() {\r\n\t\t\tcallback(null, result);\r\n\t\t});\r\n\t};\r\n});\r\n\r\nMemoryFileSystem.prototype.exists = function(path, callback) {\r\n\treturn callback(this.existsSync(path));\r\n}\r\n\r\nMemoryFileSystem.prototype.writeFile = function (path, content, encoding, callback) {\r\n\tif(!callback) {\r\n\t\tcallback = encoding;\r\n\t\tencoding = undefined;\r\n\t}\r\n\ttry {\r\n\t\tthis.writeFileSync(path, content, encoding);\r\n\t} catch(e) {\r\n\t\treturn callback(e);\r\n\t}\r\n\treturn callback();\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}