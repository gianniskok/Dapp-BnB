{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../lib/object-to-camel');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey(name, pem, password) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json(); // @ts-ignore server output is not typed\n\n    return toCamel(data);\n  }\n\n  return importKey;\n});","map":{"version":3,"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","importKey","name","pem","password","options","res","post","signal","searchParams","arg","headers","data","json"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/key/import.js"],"sourcesContent":["'use strict'\n\nconst toCamel = require('../lib/object-to-camel')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-ignore server output is not typed\n    return toCamel(data)\n  }\n  return importKey\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,wBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,SAAf,CAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,QAArC,EAA6D;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IAC3D,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,IAAJ,CAAS,YAAT,EAAuB;MACvCC,MAAM,EAAEH,OAAO,CAACG,MADuB;MAEvCC,YAAY,EAAEZ,iBAAiB,CAAC;QAC9Ba,GAAG,EAAER,IADyB;QAE9BC,GAF8B;QAG9BC,QAH8B;QAI9B,GAAGC;MAJ2B,CAAD,CAFQ;MAQvCM,OAAO,EAAEN,OAAO,CAACM;IARsB,CAAvB,CAAlB;IAUA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB,CAX2D,CAa3D;;IACA,OAAOnB,OAAO,CAACkB,IAAD,CAAd;EACD;;EACD,OAAOX,SAAP;AACD,CArByB,CAA1B"},"metadata":{},"sourceType":"script"}