{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n\n/** @typedef {import(\"./Module\")} Module */\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\n/** @typedef {TODO} GroupOptions */\n\n\nmodule.exports = class AsyncDependenciesBlock extends DependenciesBlock {\n  /**\n   * @param {GroupOptions} groupOptions options for the group\n   * @param {Module} module the Module object\n   * @param {DependencyLocation=} loc the line of code\n   * @param {TODO=} request the request\n   */\n  constructor(groupOptions, module, loc, request) {\n    super();\n\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    } else if (!groupOptions) {\n      groupOptions = {\n        name: undefined\n      };\n    }\n\n    this.groupOptions = groupOptions;\n    /** @type {ChunkGroup=} */\n\n    this.chunkGroup = undefined;\n    this.module = module;\n    this.loc = loc;\n    this.request = request;\n    /** @type {DependenciesBlock} */\n\n    this.parent = undefined;\n  }\n  /**\n   * @returns {string} The name of the chunk\n   */\n\n\n  get chunkName() {\n    return this.groupOptions.name;\n  }\n  /**\n   * @param {string} value The new chunk name\n   * @returns {void}\n   */\n\n\n  set chunkName(value) {\n    this.groupOptions.name = value;\n  }\n  /**\n   * @returns {never} this throws and should never be called\n   */\n\n\n  get chunks() {\n    throw new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n  }\n  /**\n   * @param {never} value setter value\n   * @returns {never} this is going to throw therefore we should throw type\n   * assertions by returning never\n   */\n\n\n  set chunks(value) {\n    throw new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n  }\n  /**\n   * @param {Hash} hash the hash used to track block changes, from \"crypto\" module\n   * @returns {void}\n   */\n\n\n  updateHash(hash) {\n    hash.update(JSON.stringify(this.groupOptions));\n    hash.update(this.chunkGroup && this.chunkGroup.chunks.map(chunk => {\n      return chunk.id !== null ? chunk.id : \"\";\n    }).join(\",\") || \"\");\n    super.updateHash(hash);\n  }\n  /**\n   * @returns {void}\n   */\n\n\n  disconnect() {\n    this.chunkGroup = undefined;\n    super.disconnect();\n  }\n  /**\n   * @returns {void}\n   */\n\n\n  unseal() {\n    this.chunkGroup = undefined;\n    super.unseal();\n  }\n  /**\n   * @returns {void}\n   */\n\n\n  sortItems() {\n    super.sortItems();\n  }\n\n};","map":{"version":3,"names":["DependenciesBlock","require","module","exports","AsyncDependenciesBlock","constructor","groupOptions","loc","request","name","undefined","chunkGroup","parent","chunkName","value","chunks","Error","updateHash","hash","update","JSON","stringify","map","chunk","id","join","disconnect","unseal","sortItems"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/AsyncDependenciesBlock.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {TODO} GroupOptions */\n\nmodule.exports = class AsyncDependenciesBlock extends DependenciesBlock {\n\t/**\n\t * @param {GroupOptions} groupOptions options for the group\n\t * @param {Module} module the Module object\n\t * @param {DependencyLocation=} loc the line of code\n\t * @param {TODO=} request the request\n\t */\n\tconstructor(groupOptions, module, loc, request) {\n\t\tsuper();\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t} else if (!groupOptions) {\n\t\t\tgroupOptions = { name: undefined };\n\t\t}\n\t\tthis.groupOptions = groupOptions;\n\t\t/** @type {ChunkGroup=} */\n\t\tthis.chunkGroup = undefined;\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.request = request;\n\t\t/** @type {DependenciesBlock} */\n\t\tthis.parent = undefined;\n\t}\n\n\t/**\n\t * @returns {string} The name of the chunk\n\t */\n\tget chunkName() {\n\t\treturn this.groupOptions.name;\n\t}\n\n\t/**\n\t * @param {string} value The new chunk name\n\t * @returns {void}\n\t */\n\tset chunkName(value) {\n\t\tthis.groupOptions.name = value;\n\t}\n\n\t/**\n\t * @returns {never} this throws and should never be called\n\t */\n\tget chunks() {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {never} value setter value\n\t * @returns {never} this is going to throw therefore we should throw type\n\t * assertions by returning never\n\t */\n\tset chunks(value) {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track block changes, from \"crypto\" module\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(JSON.stringify(this.groupOptions));\n\t\thash.update(\n\t\t\t(this.chunkGroup &&\n\t\t\t\tthis.chunkGroup.chunks\n\t\t\t\t\t.map(chunk => {\n\t\t\t\t\t\treturn chunk.id !== null ? chunk.id : \"\";\n\t\t\t\t\t})\n\t\t\t\t\t.join(\",\")) ||\n\t\t\t\t\"\"\n\t\t);\n\t\tsuper.updateHash(hash);\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tdisconnect() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.disconnect();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tunseal() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.unseal();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tsortItems() {\n\t\tsuper.sortItems();\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAAjC;AAEA;;AACA;;AACA;;AACA;;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,sBAAN,SAAqCJ,iBAArC,CAAuD;EACvE;AACD;AACA;AACA;AACA;AACA;EACCK,WAAW,CAACC,YAAD,EAAeJ,MAAf,EAAuBK,GAAvB,EAA4BC,OAA5B,EAAqC;IAC/C;;IACA,IAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;MACrCA,YAAY,GAAG;QAAEG,IAAI,EAAEH;MAAR,CAAf;IACA,CAFD,MAEO,IAAI,CAACA,YAAL,EAAmB;MACzBA,YAAY,GAAG;QAAEG,IAAI,EAAEC;MAAR,CAAf;IACA;;IACD,KAAKJ,YAAL,GAAoBA,YAApB;IACA;;IACA,KAAKK,UAAL,GAAkBD,SAAlB;IACA,KAAKR,MAAL,GAAcA,MAAd;IACA,KAAKK,GAAL,GAAWA,GAAX;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA;;IACA,KAAKI,MAAL,GAAcF,SAAd;EACA;EAED;AACD;AACA;;;EACc,IAATG,SAAS,GAAG;IACf,OAAO,KAAKP,YAAL,CAAkBG,IAAzB;EACA;EAED;AACD;AACA;AACA;;;EACc,IAATI,SAAS,CAACC,KAAD,EAAQ;IACpB,KAAKR,YAAL,CAAkBG,IAAlB,GAAyBK,KAAzB;EACA;EAED;AACD;AACA;;;EACW,IAANC,MAAM,GAAG;IACZ,MAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;EACA;EAED;AACD;AACA;AACA;AACA;;;EACW,IAAND,MAAM,CAACD,KAAD,EAAQ;IACjB,MAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;EACA;EAED;AACD;AACA;AACA;;;EACCC,UAAU,CAACC,IAAD,EAAO;IAChBA,IAAI,CAACC,MAAL,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKf,YAApB,CAAZ;IACAY,IAAI,CAACC,MAAL,CACE,KAAKR,UAAL,IACA,KAAKA,UAAL,CAAgBI,MAAhB,CACEO,GADF,CACMC,KAAK,IAAI;MACb,OAAOA,KAAK,CAACC,EAAN,KAAa,IAAb,GAAoBD,KAAK,CAACC,EAA1B,GAA+B,EAAtC;IACA,CAHF,EAIEC,IAJF,CAIO,GAJP,CADD,IAMC,EAPF;IASA,MAAMR,UAAN,CAAiBC,IAAjB;EACA;EAED;AACD;AACA;;;EACCQ,UAAU,GAAG;IACZ,KAAKf,UAAL,GAAkBD,SAAlB;IACA,MAAMgB,UAAN;EACA;EAED;AACD;AACA;;;EACCC,MAAM,GAAG;IACR,KAAKhB,UAAL,GAAkBD,SAAlB;IACA,MAAMiB,MAAN;EACA;EAED;AACD;AACA;;;EACCC,SAAS,GAAG;IACX,MAAMA,SAAN;EACA;;AA9FsE,CAAxE"},"metadata":{},"sourceType":"script"}