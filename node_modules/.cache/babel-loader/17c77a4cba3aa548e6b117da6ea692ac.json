{"ast":null,"code":"'use strict';\n\nconst errCode = require('err-code');\n/**\n * @param {any} input\n */\n\n\nfunction parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n\n\n  let mtime; // { secs, nsecs }\n\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  } // UnixFS TimeSpec\n\n\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  } // process.hrtime()\n\n\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  } // Javascript Date\n\n\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n   // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n     mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n\n  return mtime;\n}\n\nmodule.exports = parseMtime;","map":{"version":3,"names":["errCode","require","parseMtime","input","undefined","mtime","secs","nsecs","Seconds","FractionalNanoseconds","Array","isArray","Date","ms","getTime","Math","floor","Object","prototype","hasOwnProperty","call","Error","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/lib/parse-mtime.js"],"sourcesContent":["'use strict'\n\nconst errCode = require('err-code')\n\n/**\n * @param {any} input\n */\nfunction parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nmodule.exports = parseMtime\n"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;AAEA;AACA;AACA;;;AACA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;EAC1B,IAAIA,KAAK,IAAI,IAAb,EAAmB;IACjB,OAAOC,SAAP;EACD;EAED;;;EACA,IAAIC,KAAJ,CAN0B,CAQ1B;;EACA,IAAIF,KAAK,CAACG,IAAN,IAAc,IAAlB,EAAwB;IACtBD,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAACG,IADN;MAENC,KAAK,EAAEJ,KAAK,CAACI;IAFP,CAAR;EAID,CAdyB,CAgB1B;;;EACA,IAAIJ,KAAK,CAACK,OAAN,IAAiB,IAArB,EAA2B;IACzBH,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAACK,OADN;MAEND,KAAK,EAAEJ,KAAK,CAACM;IAFP,CAAR;EAID,CAtByB,CAwB1B;;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcR,KAAd,CAAJ,EAA0B;IACxBE,KAAK,GAAG;MACNC,IAAI,EAAEH,KAAK,CAAC,CAAD,CADL;MAENI,KAAK,EAAEJ,KAAK,CAAC,CAAD;IAFN,CAAR;EAID,CA9ByB,CAgC1B;;;EACA,IAAIA,KAAK,YAAYS,IAArB,EAA2B;IACzB,MAAMC,EAAE,GAAGV,KAAK,CAACW,OAAN,EAAX;IACA,MAAMR,IAAI,GAAGS,IAAI,CAACC,KAAL,CAAWH,EAAE,GAAG,IAAhB,CAAb;IAEAR,KAAK,GAAG;MACNC,IAAI,EAAEA,IADA;MAENC,KAAK,EAAE,CAACM,EAAE,GAAIP,IAAI,GAAG,IAAd,IAAuB;IAFxB,CAAR;EAID;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAIE,IAAI,CAACW,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCf,KAArC,EAA4C,MAA5C,CAAL,EAA0D;IACxD,OAAOD,SAAP;EACD;;EAED,IAAIC,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAACE,KAAN,IAAe,IAAhC,KAAyCF,KAAK,CAACE,KAAN,GAAc,CAAd,IAAmBF,KAAK,CAACE,KAAN,GAAc,SAA1E,CAAJ,EAA0F;IACxF,MAAMP,OAAO,CAAC,IAAIqB,KAAJ,CAAU,oDAAV,CAAD,EAAkE,yBAAlE,CAAb;EACD;;EAED,OAAOhB,KAAP;AACD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBrB,UAAjB"},"metadata":{},"sourceType":"script"}