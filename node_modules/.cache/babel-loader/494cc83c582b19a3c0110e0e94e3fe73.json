{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst LogType = Object.freeze({\n  error:\n  /** @type {\"error\"} */\n  \"error\",\n  // message, c style arguments\n  warn:\n  /** @type {\"warn\"} */\n  \"warn\",\n  // message, c style arguments\n  info:\n  /** @type {\"info\"} */\n  \"info\",\n  // message, c style arguments\n  log:\n  /** @type {\"log\"} */\n  \"log\",\n  // message, c style arguments\n  debug:\n  /** @type {\"debug\"} */\n  \"debug\",\n  // message, c style arguments\n  trace:\n  /** @type {\"trace\"} */\n  \"trace\",\n  // no arguments\n  group:\n  /** @type {\"group\"} */\n  \"group\",\n  // [label]\n  groupCollapsed:\n  /** @type {\"groupCollapsed\"} */\n  \"groupCollapsed\",\n  // [label]\n  groupEnd:\n  /** @type {\"groupEnd\"} */\n  \"groupEnd\",\n  // [label]\n  profile:\n  /** @type {\"profile\"} */\n  \"profile\",\n  // [profileName]\n  profileEnd:\n  /** @type {\"profileEnd\"} */\n  \"profileEnd\",\n  // [profileName]\n  time:\n  /** @type {\"time\"} */\n  \"time\",\n  // name, time as [seconds, nanoseconds]\n  clear:\n  /** @type {\"clear\"} */\n  \"clear\",\n  // no arguments\n  status:\n  /** @type {\"status\"} */\n  \"status\" // message, arguments\n\n});\nexports.LogType = LogType;\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   */\n  constructor(log) {\n    this[LOG_SYMBOL] = log;\n  }\n\n  error() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this[LOG_SYMBOL](LogType.error, args);\n  }\n\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this[LOG_SYMBOL](LogType.warn, args);\n  }\n\n  info() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this[LOG_SYMBOL](LogType.info, args);\n  }\n\n  log() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this[LOG_SYMBOL](LogType.log, args);\n  }\n\n  debug() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this[LOG_SYMBOL](LogType.debug, args);\n  }\n\n  assert(assertion) {\n    if (!assertion) {\n      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n        args[_key6 - 1] = arguments[_key6];\n      }\n\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }\n\n  trace() {\n    this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n  }\n\n  clear() {\n    this[LOG_SYMBOL](LogType.clear);\n  }\n\n  status() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this[LOG_SYMBOL](LogType.status, args);\n  }\n\n  group() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this[LOG_SYMBOL](LogType.group, args);\n  }\n\n  groupCollapsed() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this[LOG_SYMBOL](LogType.groupCollapsed, args);\n  }\n\n  groupEnd() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this[LOG_SYMBOL](LogType.groupEnd, args);\n  }\n\n  profile(label) {\n    this[LOG_SYMBOL](LogType.profile, [label]);\n  }\n\n  profileEnd(label) {\n    this[LOG_SYMBOL](LogType.profileEnd, [label]);\n  }\n\n  time(label) {\n    this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n    this[TIMERS_SYMBOL].set(label, process.hrtime());\n  }\n\n  timeLog(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  timeEnd(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n    }\n\n    const time = process.hrtime(prev);\n    this[TIMERS_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n}\n\nexports.Logger = WebpackLogger;","map":{"version":3,"names":["LogType","Object","freeze","error","warn","info","log","debug","trace","group","groupCollapsed","groupEnd","profile","profileEnd","time","clear","status","exports","LOG_SYMBOL","Symbol","TIMERS_SYMBOL","WebpackLogger","constructor","args","assert","assertion","label","Map","set","process","hrtime","timeLog","prev","get","Error","timeEnd","delete","Logger"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/logging/Logger.js"],"sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n\terror: /** @type {\"error\"} */ (\"error\"), // message, c style arguments\n\twarn: /** @type {\"warn\"} */ (\"warn\"), // message, c style arguments\n\tinfo: /** @type {\"info\"} */ (\"info\"), // message, c style arguments\n\tlog: /** @type {\"log\"} */ (\"log\"), // message, c style arguments\n\tdebug: /** @type {\"debug\"} */ (\"debug\"), // message, c style arguments\n\n\ttrace: /** @type {\"trace\"} */ (\"trace\"), // no arguments\n\n\tgroup: /** @type {\"group\"} */ (\"group\"), // [label]\n\tgroupCollapsed: /** @type {\"groupCollapsed\"} */ (\"groupCollapsed\"), // [label]\n\tgroupEnd: /** @type {\"groupEnd\"} */ (\"groupEnd\"), // [label]\n\n\tprofile: /** @type {\"profile\"} */ (\"profile\"), // [profileName]\n\tprofileEnd: /** @type {\"profileEnd\"} */ (\"profileEnd\"), // [profileName]\n\n\ttime: /** @type {\"time\"} */ (\"time\"), // name, time as [seconds, nanoseconds]\n\n\tclear: /** @type {\"clear\"} */ (\"clear\"), // no arguments\n\tstatus: /** @type {\"status\"} */ (\"status\") // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogTypeEnum, any[]=): void} log log function\n\t */\n\tconstructor(log) {\n\t\tthis[LOG_SYMBOL] = log;\n\t}\n\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\tstatus(...args) {\n\t\tthis[LOG_SYMBOL](LogType.status, args);\n\t}\n\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd, args);\n\t}\n\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\ttime(label) {\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nexports.Logger = WebpackLogger;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}