{"ast":null,"code":"\"use strict\";\n\nmodule.exports = Reader;\n\nvar util = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits = util.LongBits,\n    utf8 = util.utf8;\n/* istanbul ignore next */\n\nfunction indexOutOfRange(reader, writeLength) {\n  return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\n\n\nfunction Reader(buffer) {\n  /**\n   * Read buffer.\n   * @type {Uint8Array}\n   */\n  this.buf = buffer;\n  /**\n   * Read buffer position.\n   * @type {number}\n   */\n\n  this.pos = 0;\n  /**\n   * Read buffer length.\n   * @type {number}\n   */\n\n  this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\" ? function create_typed_array(buffer) {\n  if (buffer instanceof Uint8Array || Array.isArray(buffer)) return new Reader(buffer);\n  throw Error(\"illegal buffer\");\n}\n/* istanbul ignore next */\n: function create_array(buffer) {\n  if (Array.isArray(buffer)) return new Reader(buffer);\n  throw Error(\"illegal buffer\");\n};\n\nvar create = function create() {\n  return util.Buffer ? function create_buffer_setup(buffer) {\n    return (Reader.create = function create_buffer(buffer) {\n      return util.Buffer.isBuffer(buffer) ? new BufferReader(buffer)\n      /* istanbul ignore next */\n      : create_array(buffer);\n    })(buffer);\n  }\n  /* istanbul ignore next */\n  : create_array;\n};\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\n\n\nReader.create = create();\nReader.prototype._slice = util.Array.prototype.subarray ||\n/* istanbul ignore next */\nutil.Array.prototype.slice;\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\n\nReader.prototype.uint32 = function read_uint32_setup() {\n  var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n\n  return function read_uint32() {\n    value = (this.buf[this.pos] & 127) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 7) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 14) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 127) << 21) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    value = (value | (this.buf[this.pos] & 15) << 28) >>> 0;\n    if (this.buf[this.pos++] < 128) return value;\n    /* istanbul ignore if */\n\n    if ((this.pos += 5) > this.len) {\n      this.pos = this.len;\n      throw indexOutOfRange(this, 10);\n    }\n\n    return value;\n  };\n}();\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\n\n\nReader.prototype.int32 = function read_int32() {\n  return this.uint32() | 0;\n};\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\n\n\nReader.prototype.sint32 = function read_sint32() {\n  var value = this.uint32();\n  return value >>> 1 ^ -(value & 1) | 0;\n};\n/* eslint-disable no-invalid-this */\n\n\nfunction readLongVarint() {\n  // tends to deopt with local vars for octet etc.\n  var bits = new LongBits(0, 0);\n  var i = 0;\n\n  if (this.len - this.pos > 4) {\n    // fast route (lo)\n    for (; i < 4; ++i) {\n      // 1st..4th\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    } // 5th\n\n\n    bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n    bits.hi = (bits.hi | (this.buf[this.pos] & 127) >> 4) >>> 0;\n    if (this.buf[this.pos++] < 128) return bits;\n    i = 0;\n  } else {\n    for (; i < 3; ++i) {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this); // 1st..3th\n\n      bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    } // 4th\n\n\n    bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n    return bits;\n  }\n\n  if (this.len - this.pos > 4) {\n    // fast route (hi)\n    for (; i < 5; ++i) {\n      // 6th..10th\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n  } else {\n    for (; i < 5; ++i) {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this); // 6th..10th\n\n      bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n      if (this.buf[this.pos++] < 128) return bits;\n    }\n  }\n  /* istanbul ignore next */\n\n\n  throw Error(\"invalid varint encoding\");\n}\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\n\n\nReader.prototype.bool = function read_bool() {\n  return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) {\n  // note that this uses `end`, not `pos`\n  return (buf[end - 4] | buf[end - 3] << 8 | buf[end - 2] << 16 | buf[end - 1] << 24) >>> 0;\n}\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\n\n\nReader.prototype.fixed32 = function read_fixed32() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return readFixed32_end(this.buf, this.pos += 4);\n};\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\n\n\nReader.prototype.sfixed32 = function read_sfixed32() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n/* eslint-disable no-invalid-this */\n\n\nfunction\n  /* this: Reader */\nreadFixed64() {\n  /* istanbul ignore if */\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);\n  return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\n\n\nReader.prototype.float = function read_float() {\n  /* istanbul ignore if */\n  if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);\n  var value = util.float.readFloatLE(this.buf, this.pos);\n  this.pos += 4;\n  return value;\n};\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\n\n\nReader.prototype.double = function read_double() {\n  /* istanbul ignore if */\n  if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);\n  var value = util.float.readDoubleLE(this.buf, this.pos);\n  this.pos += 8;\n  return value;\n};\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\n\n\nReader.prototype.bytes = function read_bytes() {\n  var length = this.uint32(),\n      start = this.pos,\n      end = this.pos + length;\n  /* istanbul ignore if */\n\n  if (end > this.len) throw indexOutOfRange(this, length);\n  this.pos += length;\n  if (Array.isArray(this.buf)) // plain array\n    return this.buf.slice(start, end);\n  return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n  ? new this.buf.constructor(0) : this._slice.call(this.buf, start, end);\n};\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\n\n\nReader.prototype.string = function read_string() {\n  var bytes = this.bytes();\n  return utf8.read(bytes, 0, bytes.length);\n};\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\n\n\nReader.prototype.skip = function skip(length) {\n  if (typeof length === \"number\") {\n    /* istanbul ignore if */\n    if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n    this.pos += length;\n  } else {\n    do {\n      /* istanbul ignore if */\n      if (this.pos >= this.len) throw indexOutOfRange(this);\n    } while (this.buf[this.pos++] & 128);\n  }\n\n  return this;\n};\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\n\n\nReader.prototype.skipType = function (wireType) {\n  switch (wireType) {\n    case 0:\n      this.skip();\n      break;\n\n    case 1:\n      this.skip(8);\n      break;\n\n    case 2:\n      this.skip(this.uint32());\n      break;\n\n    case 3:\n      while ((wireType = this.uint32() & 7) !== 4) {\n        this.skipType(wireType);\n      }\n\n      break;\n\n    case 5:\n      this.skip(4);\n      break;\n\n    /* istanbul ignore next */\n\n    default:\n      throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n  }\n\n  return this;\n};\n\nReader._configure = function (BufferReader_) {\n  BufferReader = BufferReader_;\n  Reader.create = create();\n\n  BufferReader._configure();\n\n  var fn = util.Long ? \"toLong\" :\n  /* istanbul ignore next */\n  \"toNumber\";\n  util.merge(Reader.prototype, {\n    int64: function read_int64() {\n      return readLongVarint.call(this)[fn](false);\n    },\n    uint64: function read_uint64() {\n      return readLongVarint.call(this)[fn](true);\n    },\n    sint64: function read_sint64() {\n      return readLongVarint.call(this).zzDecode()[fn](false);\n    },\n    fixed64: function read_fixed64() {\n      return readFixed64.call(this)[fn](true);\n    },\n    sfixed64: function read_sfixed64() {\n      return readFixed64.call(this)[fn](false);\n    }\n  });\n};","map":{"version":3,"names":["module","exports","Reader","util","require","BufferReader","LongBits","utf8","indexOutOfRange","reader","writeLength","RangeError","pos","len","buffer","buf","length","create_array","Uint8Array","create_typed_array","Array","isArray","Error","create","Buffer","create_buffer_setup","create_buffer","isBuffer","prototype","_slice","subarray","slice","uint32","read_uint32_setup","value","read_uint32","int32","read_int32","sint32","read_sint32","readLongVarint","bits","i","lo","hi","bool","read_bool","readFixed32_end","end","fixed32","read_fixed32","sfixed32","read_sfixed32","readFixed64","float","read_float","readFloatLE","double","read_double","readDoubleLE","bytes","read_bytes","start","constructor","call","string","read_string","read","skip","skipType","wireType","_configure","BufferReader_","fn","Long","merge","int64","read_int64","uint64","read_uint64","sint64","read_sint64","zzDecode","fixed64","read_fixed64","sfixed64","read_sfixed64"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/protobufjs/src/reader.js"],"sourcesContent":["\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}