{"ast":null,"code":"/*!\n * use <https://github.com/jonschlinkert/use>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n'use strict';\n\nmodule.exports = function base(app, options) {\n  if (!isObject(app) && typeof app !== 'function') {\n    throw new TypeError('expected an object or function');\n  }\n\n  var opts = isObject(options) ? options : {};\n  var prop = typeof opts.prop === 'string' ? opts.prop : 'fns';\n\n  if (!Array.isArray(app[prop])) {\n    define(app, prop, []);\n  }\n  /**\n   * Define a plugin function to be passed to use. The only\n   * parameter exposed to the plugin is `app`, the object or function.\n   * passed to `use(app)`. `app` is also exposed as `this` in plugins.\n   *\n   * Additionally, **if a plugin returns a function, the function will\n   * be pushed onto the `fns` array**, allowing the plugin to be\n   * called at a later point by the `run` method.\n   *\n   * ```js\n   * var use = require('use');\n   *\n   * // define a plugin\n   * function foo(app) {\n   *   // do stuff\n   * }\n   *\n   * var app = function(){};\n   * use(app);\n   *\n   * // register plugins\n   * app.use(foo);\n   * app.use(bar);\n   * app.use(baz);\n   * ```\n   * @name .use\n   * @param {Function} `fn` plugin function to call\n   * @api public\n   */\n\n\n  define(app, 'use', use);\n  /**\n   * Run all plugins on `fns`. Any plugin that returns a function\n   * when called by `use` is pushed onto the `fns` array.\n   *\n   * ```js\n   * var config = {};\n   * app.run(config);\n   * ```\n   * @name .run\n   * @param {Object} `value` Object to be modified by plugins.\n   * @return {Object} Returns the object passed to `run`\n   * @api public\n   */\n\n  define(app, 'run', function (val) {\n    if (!isObject(val)) return;\n\n    if (!val.use || !val.run) {\n      define(val, prop, val[prop] || []);\n      define(val, 'use', use);\n    }\n\n    if (!val[prop] || val[prop].indexOf(base) === -1) {\n      val.use(base);\n    }\n\n    var self = this || app;\n    var fns = self[prop];\n    var len = fns.length;\n    var idx = -1;\n\n    while (++idx < len) {\n      val.use(fns[idx]);\n    }\n\n    return val;\n  });\n  /**\n   * Call plugin `fn`. If a function is returned push it into the\n   * `fns` array to be called by the `run` method.\n   */\n\n  function use(type, fn, options) {\n    var offset = 1;\n\n    if (typeof type === 'string' || Array.isArray(type)) {\n      fn = wrap(type, fn);\n      offset++;\n    } else {\n      options = fn;\n      fn = type;\n    }\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('expected a function');\n    }\n\n    var self = this || app;\n    var fns = self[prop];\n    var args = [].slice.call(arguments, offset);\n    args.unshift(self);\n\n    if (typeof opts.hook === 'function') {\n      opts.hook.apply(self, args);\n    }\n\n    var val = fn.apply(self, args);\n\n    if (typeof val === 'function' && fns.indexOf(val) === -1) {\n      fns.push(val);\n    }\n\n    return self;\n  }\n  /**\n   * Wrap a named plugin function so that it's only called on objects of the\n   * given `type`\n   *\n   * @param {String} `type`\n   * @param {Function} `fn` Plugin function\n   * @return {Function}\n   */\n\n\n  function wrap(type, fn) {\n    return function plugin() {\n      return this.type === type ? fn.apply(this, arguments) : plugin;\n    };\n  }\n\n  return app;\n};\n\nfunction isObject(val) {\n  return val && typeof val === 'object' && !Array.isArray(val);\n}\n\nfunction define(obj, key, val) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    writable: true,\n    value: val\n  });\n}","map":{"version":3,"names":["module","exports","base","app","options","isObject","TypeError","opts","prop","Array","isArray","define","use","val","run","indexOf","self","fns","len","length","idx","type","fn","offset","wrap","args","slice","call","arguments","unshift","hook","apply","push","plugin","obj","key","Object","defineProperty","configurable","writable","value"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/use/index.js"],"sourcesContent":["/*!\n * use <https://github.com/jonschlinkert/use>\n *\n * Copyright (c) 2015-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function base(app, options) {\n  if (!isObject(app) && typeof app !== 'function') {\n    throw new TypeError('expected an object or function');\n  }\n\n  var opts = isObject(options) ? options : {};\n  var prop = typeof opts.prop === 'string' ? opts.prop : 'fns';\n  if (!Array.isArray(app[prop])) {\n    define(app, prop, []);\n  }\n\n  /**\n   * Define a plugin function to be passed to use. The only\n   * parameter exposed to the plugin is `app`, the object or function.\n   * passed to `use(app)`. `app` is also exposed as `this` in plugins.\n   *\n   * Additionally, **if a plugin returns a function, the function will\n   * be pushed onto the `fns` array**, allowing the plugin to be\n   * called at a later point by the `run` method.\n   *\n   * ```js\n   * var use = require('use');\n   *\n   * // define a plugin\n   * function foo(app) {\n   *   // do stuff\n   * }\n   *\n   * var app = function(){};\n   * use(app);\n   *\n   * // register plugins\n   * app.use(foo);\n   * app.use(bar);\n   * app.use(baz);\n   * ```\n   * @name .use\n   * @param {Function} `fn` plugin function to call\n   * @api public\n   */\n\n  define(app, 'use', use);\n\n  /**\n   * Run all plugins on `fns`. Any plugin that returns a function\n   * when called by `use` is pushed onto the `fns` array.\n   *\n   * ```js\n   * var config = {};\n   * app.run(config);\n   * ```\n   * @name .run\n   * @param {Object} `value` Object to be modified by plugins.\n   * @return {Object} Returns the object passed to `run`\n   * @api public\n   */\n\n  define(app, 'run', function(val) {\n    if (!isObject(val)) return;\n\n    if (!val.use || !val.run) {\n      define(val, prop, val[prop] || []);\n      define(val, 'use', use);\n    }\n\n    if (!val[prop] || val[prop].indexOf(base) === -1) {\n      val.use(base);\n    }\n\n    var self = this || app;\n    var fns = self[prop];\n    var len = fns.length;\n    var idx = -1;\n\n    while (++idx < len) {\n      val.use(fns[idx]);\n    }\n    return val;\n  });\n\n  /**\n   * Call plugin `fn`. If a function is returned push it into the\n   * `fns` array to be called by the `run` method.\n   */\n\n  function use(type, fn, options) {\n    var offset = 1;\n\n    if (typeof type === 'string' || Array.isArray(type)) {\n      fn = wrap(type, fn);\n      offset++;\n    } else {\n      options = fn;\n      fn = type;\n    }\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('expected a function');\n    }\n\n    var self = this || app;\n    var fns = self[prop];\n\n    var args = [].slice.call(arguments, offset);\n    args.unshift(self);\n\n    if (typeof opts.hook === 'function') {\n      opts.hook.apply(self, args);\n    }\n\n    var val = fn.apply(self, args);\n    if (typeof val === 'function' && fns.indexOf(val) === -1) {\n      fns.push(val);\n    }\n    return self;\n  }\n\n  /**\n   * Wrap a named plugin function so that it's only called on objects of the\n   * given `type`\n   *\n   * @param {String} `type`\n   * @param {Function} `fn` Plugin function\n   * @return {Function}\n   */\n\n  function wrap(type, fn) {\n    return function plugin() {\n      return this.type === type ? fn.apply(this, arguments) : plugin;\n    };\n  }\n\n  return app;\n};\n\nfunction isObject(val) {\n  return val && typeof val === 'object' && !Array.isArray(val);\n}\n\nfunction define(obj, key, val) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    writable: true,\n    value: val\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}