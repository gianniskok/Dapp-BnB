{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async function (key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!key) {\n      throw new Error('key argument is required');\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return data.Value;\n  };\n\n  return get;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","get","key","options","Error","res","post","signal","searchParams","arg","headers","data","json","Value"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/config/get.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,MAAMC,GAAG,GAAG,gBAAOC,GAAP,EAA6B;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;;IACvC,IAAI,CAACD,GAAL,EAAU;MACR,MAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;IACD;;IAED,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,QAAT,EAAmB;MACnCC,MAAM,EAAEJ,OAAO,CAACI,MADmB;MAEnCC,YAAY,EAAEX,iBAAiB,CAAC;QAC9BY,GAAG,EAAEP,GADyB;QAE9B,GAAGC;MAF2B,CAAD,CAFI;MAMnCO,OAAO,EAAEP,OAAO,CAACO;IANkB,CAAnB,CAAlB;IAQA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;IAEA,OAAOD,IAAI,CAACE,KAAZ;EACD,CAhBD;;EAkBA,OAAOZ,GAAP;AACD,CAvByB,CAA1B"},"metadata":{},"sourceType":"script"}