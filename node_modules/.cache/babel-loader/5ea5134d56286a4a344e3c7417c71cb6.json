{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar path = require(\"path\");\n\nfunction WatcherManager() {\n  this.directoryWatchers = {};\n}\n\nWatcherManager.prototype.getDirectoryWatcher = function (directory, options) {\n  var DirectoryWatcher = require(\"./DirectoryWatcher\");\n\n  options = options || {};\n  var key = directory + \" \" + JSON.stringify(options);\n\n  if (!this.directoryWatchers[key]) {\n    this.directoryWatchers[key] = new DirectoryWatcher(directory, options);\n    this.directoryWatchers[key].on(\"closed\", function () {\n      delete this.directoryWatchers[key];\n    }.bind(this));\n  }\n\n  return this.directoryWatchers[key];\n};\n\nWatcherManager.prototype.watchFile = function watchFile(p, options, startTime) {\n  var directory = path.dirname(p);\n  return this.getDirectoryWatcher(directory, options).watch(p, startTime);\n};\n\nWatcherManager.prototype.watchDirectory = function watchDirectory(directory, options, startTime) {\n  return this.getDirectoryWatcher(directory, options).watch(directory, startTime);\n};\n\nmodule.exports = new WatcherManager();","map":{"version":3,"names":["path","require","WatcherManager","directoryWatchers","prototype","getDirectoryWatcher","directory","options","DirectoryWatcher","key","JSON","stringify","on","bind","watchFile","p","startTime","dirname","watch","watchDirectory","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/watchpack/lib/watcherManager.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar path = require(\"path\");\n\nfunction WatcherManager() {\n\tthis.directoryWatchers = {};\n}\n\nWatcherManager.prototype.getDirectoryWatcher = function(directory, options) {\n\tvar DirectoryWatcher = require(\"./DirectoryWatcher\");\n\toptions = options || {};\n\tvar key = directory + \" \" + JSON.stringify(options);\n\tif(!this.directoryWatchers[key]) {\n\t\tthis.directoryWatchers[key] = new DirectoryWatcher(directory, options);\n\t\tthis.directoryWatchers[key].on(\"closed\", function() {\n\t\t\tdelete this.directoryWatchers[key];\n\t\t}.bind(this));\n\t}\n\treturn this.directoryWatchers[key];\n};\n\nWatcherManager.prototype.watchFile = function watchFile(p, options, startTime) {\n\tvar directory = path.dirname(p);\n\treturn this.getDirectoryWatcher(directory, options).watch(p, startTime);\n};\n\nWatcherManager.prototype.watchDirectory = function watchDirectory(directory, options, startTime) {\n\treturn this.getDirectoryWatcher(directory, options).watch(directory, startTime);\n};\n\nmodule.exports = new WatcherManager();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASC,cAAT,GAA0B;EACzB,KAAKC,iBAAL,GAAyB,EAAzB;AACA;;AAEDD,cAAc,CAACE,SAAf,CAAyBC,mBAAzB,GAA+C,UAASC,SAAT,EAAoBC,OAApB,EAA6B;EAC3E,IAAIC,gBAAgB,GAAGP,OAAO,CAAC,oBAAD,CAA9B;;EACAM,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,IAAIE,GAAG,GAAGH,SAAS,GAAG,GAAZ,GAAkBI,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAA5B;;EACA,IAAG,CAAC,KAAKJ,iBAAL,CAAuBM,GAAvB,CAAJ,EAAiC;IAChC,KAAKN,iBAAL,CAAuBM,GAAvB,IAA8B,IAAID,gBAAJ,CAAqBF,SAArB,EAAgCC,OAAhC,CAA9B;IACA,KAAKJ,iBAAL,CAAuBM,GAAvB,EAA4BG,EAA5B,CAA+B,QAA/B,EAAyC,YAAW;MACnD,OAAO,KAAKT,iBAAL,CAAuBM,GAAvB,CAAP;IACA,CAFwC,CAEvCI,IAFuC,CAElC,IAFkC,CAAzC;EAGA;;EACD,OAAO,KAAKV,iBAAL,CAAuBM,GAAvB,CAAP;AACA,CAXD;;AAaAP,cAAc,CAACE,SAAf,CAAyBU,SAAzB,GAAqC,SAASA,SAAT,CAAmBC,CAAnB,EAAsBR,OAAtB,EAA+BS,SAA/B,EAA0C;EAC9E,IAAIV,SAAS,GAAGN,IAAI,CAACiB,OAAL,CAAaF,CAAb,CAAhB;EACA,OAAO,KAAKV,mBAAL,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6CW,KAA7C,CAAmDH,CAAnD,EAAsDC,SAAtD,CAAP;AACA,CAHD;;AAKAd,cAAc,CAACE,SAAf,CAAyBe,cAAzB,GAA0C,SAASA,cAAT,CAAwBb,SAAxB,EAAmCC,OAAnC,EAA4CS,SAA5C,EAAuD;EAChG,OAAO,KAAKX,mBAAL,CAAyBC,SAAzB,EAAoCC,OAApC,EAA6CW,KAA7C,CAAmDZ,SAAnD,EAA8DU,SAA9D,CAAP;AACA,CAFD;;AAIAI,MAAM,CAACC,OAAP,GAAiB,IAAInB,cAAJ,EAAjB"},"metadata":{},"sourceType":"script"}