{"ast":null,"code":"module.exports = globSync;\nglobSync.GlobSync = GlobSync;\n\nvar rp = require('fs.realpath');\n\nvar minimatch = require('minimatch');\n\nvar Minimatch = minimatch.Minimatch;\n\nvar Glob = require('./glob.js').Glob;\n\nvar util = require('util');\n\nvar path = require('path');\n\nvar assert = require('assert');\n\nvar isAbsolute = require('path-is-absolute');\n\nvar common = require('./common.js');\n\nvar setopts = common.setopts;\nvar ownProp = common.ownProp;\nvar childrenIgnored = common.childrenIgnored;\nvar isIgnored = common.isIgnored;\n\nfunction globSync(pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  return new GlobSync(pattern, options).found;\n}\n\nfunction GlobSync(pattern, options) {\n  if (!pattern) throw new Error('must provide pattern');\n  if (typeof options === 'function' || arguments.length === 3) throw new TypeError('callback provided to sync glob\\n' + 'See: https://github.com/isaacs/node-glob/issues/167');\n  if (!(this instanceof GlobSync)) return new GlobSync(pattern, options);\n  setopts(this, pattern, options);\n  if (this.noprocess) return this;\n  var n = this.minimatch.set.length;\n  this.matches = new Array(n);\n\n  for (var i = 0; i < n; i++) {\n    this._process(this.minimatch.set[i], i, false);\n  }\n\n  this._finish();\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync);\n\n  if (this.realpath) {\n    var self = this;\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null);\n\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p);\n          var real = rp.realpathSync(p, self.realpathCache);\n          set[real] = true;\n        } catch (er) {\n          if (er.syscall === 'stat') set[self._makeAbs(p)] = true;else throw er;\n        }\n      }\n    });\n  }\n\n  common.finish(this);\n};\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync); // Get the first [n] parts of pattern that are all strings.\n\n  var n = 0;\n\n  while (typeof pattern[n] === 'string') {\n    n++;\n  } // now n is the index of the first one that is *not* a string.\n  // See if there's anything else\n\n\n  var prefix;\n\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index);\n\n      return;\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null;\n      break;\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/');\n      break;\n  }\n\n  var remain = pattern.slice(n); // get the list of entries.\n\n  var read;\n  if (prefix === null) read = '.';else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix)) prefix = '/' + prefix;\n    read = prefix;\n  } else read = prefix;\n\n  var abs = this._makeAbs(read); //if ignored, skip processing\n\n\n  if (childrenIgnored(this, read)) return;\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n  if (isGlobStar) this._processGlobStar(prefix, read, abs, remain, index, inGlobStar);else this._processReaddir(prefix, read, abs, remain, index, inGlobStar);\n};\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar); // if the abs isn't a dir, then nothing can match!\n\n\n  if (!entries) return; // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n\n  var pn = remain[0];\n  var negate = !!this.minimatch.negate;\n  var rawGlob = pn._glob;\n  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n  var matchedEntries = [];\n\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i];\n\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m;\n\n      if (negate && !prefix) {\n        m = !e.match(pn);\n      } else {\n        m = e.match(pn);\n      }\n\n      if (m) matchedEntries.push(e);\n    }\n  }\n\n  var len = matchedEntries.length; // If there are no matched entries, then nothing matches.\n\n  if (len === 0) return; // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index]) this.matches[index] = Object.create(null);\n\n    for (var i = 0; i < len; i++) {\n      var e = matchedEntries[i];\n\n      if (prefix) {\n        if (prefix.slice(-1) !== '/') e = prefix + '/' + e;else e = prefix + e;\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e);\n      }\n\n      this._emitMatch(index, e);\n    } // This was the last one, and no stats were needed\n\n\n    return;\n  } // now test all matched entries as stand-ins for that part\n  // of the pattern.\n\n\n  remain.shift();\n\n  for (var i = 0; i < len; i++) {\n    var e = matchedEntries[i];\n    var newPattern;\n    if (prefix) newPattern = [prefix, e];else newPattern = [e];\n\n    this._process(newPattern.concat(remain), index, inGlobStar);\n  }\n};\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e)) return;\n\n  var abs = this._makeAbs(e);\n\n  if (this.mark) e = this._mark(e);\n\n  if (this.absolute) {\n    e = abs;\n  }\n\n  if (this.matches[index][e]) return;\n\n  if (this.nodir) {\n    var c = this.cache[abs];\n    if (c === 'DIR' || Array.isArray(c)) return;\n  }\n\n  this.matches[index][e] = true;\n  if (this.stat) this._stat(e);\n};\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow) return this._readdir(abs, false);\n  var entries;\n  var lstat;\n  var stat;\n\n  try {\n    lstat = this.fs.lstatSync(abs);\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null;\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink();\n  this.symlinks[abs] = isSym; // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n\n  if (!isSym && lstat && !lstat.isDirectory()) this.cache[abs] = 'FILE';else entries = this._readdir(abs, false);\n  return entries;\n};\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries;\n  if (inGlobStar && !ownProp(this.symlinks, abs)) return this._readdirInGlobStar(abs);\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (!c || c === 'FILE') return null;\n    if (Array.isArray(c)) return c;\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs));\n  } catch (er) {\n    this._readdirError(abs, er);\n\n    return null;\n  }\n};\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i++) {\n      var e = entries[i];\n      if (abs === '/') e = abs + e;else e = abs + '/' + e;\n      this.cache[e] = true;\n    }\n  }\n\n  this.cache[abs] = entries; // mark and cache dir-ness\n\n  return entries;\n};\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n\n    case 'ENOTDIR':\n      // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f);\n\n      this.cache[abs] = 'FILE';\n\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd);\n        error.path = this.cwd;\n        error.code = er.code;\n        throw error;\n      }\n\n      break;\n\n    case 'ENOENT': // not terribly unusual\n\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false;\n      break;\n\n    default:\n      // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false;\n      if (this.strict) throw er;\n      if (!this.silent) console.error('glob error', er);\n      break;\n  }\n};\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar); // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n\n\n  if (!entries) return; // test without the globstar, and with every child both below\n  // and replacing the globstar.\n\n  var remainWithoutGlobStar = remain.slice(1);\n  var gspref = prefix ? [prefix] : [];\n  var noGlobStar = gspref.concat(remainWithoutGlobStar); // the noGlobStar pattern exits the inGlobStar state\n\n  this._process(noGlobStar, index, false);\n\n  var len = entries.length;\n  var isSym = this.symlinks[abs]; // If it's a symlink, and we're in a globstar, then stop\n\n  if (isSym && inGlobStar) return;\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i];\n    if (e.charAt(0) === '.' && !this.dot) continue; // these two cases enter the inGlobStar state\n\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n\n    this._process(instead, index, true);\n\n    var below = gspref.concat(entries[i], remain);\n\n    this._process(below, index, true);\n  }\n};\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix);\n\n  if (!this.matches[index]) this.matches[index] = Object.create(null); // If it doesn't exist, then just mark the lack of results\n\n  if (!exists) return;\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix);\n\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix);\n    } else {\n      prefix = path.resolve(this.root, prefix);\n      if (trail) prefix += '/';\n    }\n  }\n\n  if (process.platform === 'win32') prefix = prefix.replace(/\\\\/g, '/'); // Mark this as a match\n\n  this._emitMatch(index, prefix);\n}; // Returns either 'DIR', 'FILE', or false\n\n\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f);\n\n  var needDir = f.slice(-1) === '/';\n  if (f.length > this.maxLength) return false;\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs];\n    if (Array.isArray(c)) c = 'DIR'; // It exists, but maybe not how we need it\n\n    if (!needDir || c === 'DIR') return c;\n    if (needDir && c === 'FILE') return false; // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists;\n  var stat = this.statCache[abs];\n\n  if (!stat) {\n    var lstat;\n\n    try {\n      lstat = this.fs.lstatSync(abs);\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false;\n        return false;\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs);\n      } catch (er) {\n        stat = lstat;\n      }\n    } else {\n      stat = lstat;\n    }\n  }\n\n  this.statCache[abs] = stat;\n  var c = true;\n  if (stat) c = stat.isDirectory() ? 'DIR' : 'FILE';\n  this.cache[abs] = this.cache[abs] || c;\n  if (needDir && c === 'FILE') return false;\n  return c;\n};\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p);\n};\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f);\n};","map":{"version":3,"names":["module","exports","globSync","GlobSync","rp","require","minimatch","Minimatch","Glob","util","path","assert","isAbsolute","common","setopts","ownProp","childrenIgnored","isIgnored","pattern","options","arguments","length","TypeError","found","Error","noprocess","n","set","matches","Array","i","_process","_finish","prototype","realpath","self","forEach","matchset","index","Object","create","p","_makeAbs","real","realpathSync","realpathCache","er","syscall","finish","inGlobStar","prefix","_processSimple","join","slice","remain","read","abs","isGlobStar","GLOBSTAR","_processGlobStar","_processReaddir","entries","_readdir","pn","negate","rawGlob","_glob","dotOk","dot","charAt","matchedEntries","e","m","match","push","len","mark","stat","nomount","root","_emitMatch","shift","newPattern","concat","_mark","absolute","nodir","c","cache","isArray","_stat","_readdirInGlobStar","follow","lstat","fs","lstatSync","code","isSym","isSymbolicLink","symlinks","isDirectory","_readdirEntries","readdirSync","_readdirError","f","cwdAbs","error","cwd","strict","silent","console","remainWithoutGlobStar","gspref","noGlobStar","instead","below","exists","trail","test","resolve","process","platform","replace","needDir","maxLength","statCache","statSync","makeAbs"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/glob/sync.js"],"sourcesContent":["module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}