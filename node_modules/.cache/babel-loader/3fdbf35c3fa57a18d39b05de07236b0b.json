{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\n\nconst FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\n\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\n\nconst validateOptions = require(\"schema-utils\");\n\nconst schema = require(\"../schemas/plugins/DllPlugin.json\");\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n\n\nclass DllPlugin {\n  /**\n   * @param {DllPluginOptions} options options object\n   */\n  constructor(options) {\n    validateOptions(schema, options, \"Dll Plugin\");\n    this.options = options;\n  }\n\n  apply(compiler) {\n    compiler.hooks.entryOption.tap(\"DllPlugin\", (context, entry) => {\n      const itemToPlugin = (item, name) => {\n        if (Array.isArray(item)) {\n          return new DllEntryPlugin(context, item, name);\n        }\n\n        throw new Error(\"DllPlugin: supply an Array as entry\");\n      };\n\n      if (typeof entry === \"object\" && !Array.isArray(entry)) {\n        Object.keys(entry).forEach(name => {\n          itemToPlugin(entry[name], name).apply(compiler);\n        });\n      } else {\n        itemToPlugin(entry, \"main\").apply(compiler);\n      }\n\n      return true;\n    });\n    new LibManifestPlugin(this.options).apply(compiler);\n\n    if (!this.options.entryOnly) {\n      new FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n    }\n  }\n\n}\n\nmodule.exports = DllPlugin;","map":{"version":3,"names":["DllEntryPlugin","require","FlagAllModulesAsUsedPlugin","LibManifestPlugin","validateOptions","schema","DllPlugin","constructor","options","apply","compiler","hooks","entryOption","tap","context","entry","itemToPlugin","item","name","Array","isArray","Error","Object","keys","forEach","entryOnly","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/DllPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\nconst FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/DllPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n\nclass DllPlugin {\n\t/**\n\t * @param {DllPluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Dll Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"DllPlugin\", (context, entry) => {\n\t\t\tconst itemToPlugin = (item, name) => {\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\treturn new DllEntryPlugin(context, item, name);\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"DllPlugin: supply an Array as entry\");\n\t\t\t};\n\t\t\tif (typeof entry === \"object\" && !Array.isArray(entry)) {\n\t\t\t\tObject.keys(entry).forEach(name => {\n\t\t\t\t\titemToPlugin(entry[name], name).apply(compiler);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\titemToPlugin(entry, \"main\").apply(compiler);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tnew LibManifestPlugin(this.options).apply(compiler);\n\t\tif (!this.options.entryOnly) {\n\t\t\tnew FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n\t\t}\n\t}\n}\n\nmodule.exports = DllPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA,MAAMC,0BAA0B,GAAGD,OAAO,CAAC,8BAAD,CAA1C;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAD,CAAjC;;AAEA,MAAMG,eAAe,GAAGH,OAAO,CAAC,cAAD,CAA/B;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,mCAAD,CAAtB;AAEA;;;AAEA,MAAMK,SAAN,CAAgB;EACf;AACD;AACA;EACCC,WAAW,CAACC,OAAD,EAAU;IACpBJ,eAAe,CAACC,MAAD,EAASG,OAAT,EAAkB,YAAlB,CAAf;IACA,KAAKA,OAAL,GAAeA,OAAf;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACfA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,WAA/B,EAA4C,CAACC,OAAD,EAAUC,KAAV,KAAoB;MAC/D,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;QACpC,IAAIC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;UACxB,OAAO,IAAIjB,cAAJ,CAAmBc,OAAnB,EAA4BG,IAA5B,EAAkCC,IAAlC,CAAP;QACA;;QACD,MAAM,IAAIG,KAAJ,CAAU,qCAAV,CAAN;MACA,CALD;;MAMA,IAAI,OAAON,KAAP,KAAiB,QAAjB,IAA6B,CAACI,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAlC,EAAwD;QACvDO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,OAAnB,CAA2BN,IAAI,IAAI;UAClCF,YAAY,CAACD,KAAK,CAACG,IAAD,CAAN,EAAcA,IAAd,CAAZ,CAAgCT,KAAhC,CAAsCC,QAAtC;QACA,CAFD;MAGA,CAJD,MAIO;QACNM,YAAY,CAACD,KAAD,EAAQ,MAAR,CAAZ,CAA4BN,KAA5B,CAAkCC,QAAlC;MACA;;MACD,OAAO,IAAP;IACA,CAfD;IAgBA,IAAIP,iBAAJ,CAAsB,KAAKK,OAA3B,EAAoCC,KAApC,CAA0CC,QAA1C;;IACA,IAAI,CAAC,KAAKF,OAAL,CAAaiB,SAAlB,EAA6B;MAC5B,IAAIvB,0BAAJ,CAA+B,WAA/B,EAA4CO,KAA5C,CAAkDC,QAAlD;IACA;EACD;;AA9Bc;;AAiChBgB,MAAM,CAACC,OAAP,GAAiBrB,SAAjB"},"metadata":{},"sourceType":"script"}