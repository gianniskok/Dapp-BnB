{"ast":null,"code":"module.exports = function normalize(path) {\n  var parts = path.split(/(\\\\+|\\/+)/);\n  if (parts.length === 1) return path;\n  var result = [];\n  var absolutePathStart = 0;\n\n  for (var i = 0, sep = false; i < parts.length; i++, sep = !sep) {\n    var part = parts[i];\n\n    if (i === 0 && /^([A-Z]:)?$/i.test(part)) {\n      result.push(part);\n      absolutePathStart = 2;\n    } else if (sep) {\n      result.push(part[0]);\n    } else if (part === \"..\") {\n      switch (result.length) {\n        case 0:\n          // i. e. \"..\" => \"..\"\n          // i. e. \"../a/b/c\" => \"../a/b/c\"\n          result.push(part);\n          break;\n\n        case 2:\n          // i. e. \"a/..\" => \"\"\n          // i. e. \"/..\" => \"/\"\n          // i. e. \"C:\\..\" => \"C:\\\"\n          // i. e. \"a/../b/c\" => \"b/c\"\n          // i. e. \"/../b/c\" => \"/b/c\"\n          // i. e. \"C:\\..\\a\\b\\c\" => \"C:\\a\\b\\c\"\n          i++;\n          sep = !sep;\n          result.length = absolutePathStart;\n          break;\n\n        case 4:\n          // i. e. \"a/b/..\" => \"a\"\n          // i. e. \"/a/..\" => \"/\"\n          // i. e. \"C:\\a\\..\" => \"C:\\\"\n          // i. e. \"/a/../b/c\" => \"/b/c\"\n          if (absolutePathStart === 0) {\n            result.length -= 3;\n          } else {\n            i++;\n            sep = !sep;\n            result.length = 2;\n          }\n\n          break;\n\n        default:\n          // i. e. \"/a/b/..\" => \"/a\"\n          // i. e. \"/a/b/../c\" => \"/a/c\"\n          result.length -= 3;\n          break;\n      }\n    } else if (part === \".\") {\n      switch (result.length) {\n        case 0:\n          // i. e. \".\" => \".\"\n          // i. e. \"./a/b/c\" => \"./a/b/c\"\n          result.push(part);\n          break;\n\n        case 2:\n          // i. e. \"a/.\" => \"a\"\n          // i. e. \"/.\" => \"/\"\n          // i. e. \"C:\\.\" => \"C:\\\"\n          // i. e. \"C:\\.\\a\\b\\c\" => \"C:\\a\\b\\c\"\n          if (absolutePathStart === 0) {\n            result.length--;\n          } else {\n            i++;\n            sep = !sep;\n          }\n\n          break;\n\n        default:\n          // i. e. \"a/b/.\" => \"a/b\"\n          // i. e. \"/a/.\" => \"/\"\n          // i. e. \"C:\\a\\.\" => \"C:\\\"\n          // i. e. \"a/./b/c\" => \"a/b/c\"\n          // i. e. \"/a/./b/c\" => \"/a/b/c\"\n          result.length--;\n          break;\n      }\n    } else if (part) {\n      result.push(part);\n    }\n  }\n\n  if (result.length === 1 && /^[A-Za-z]:$/.test(result)) return result[0] + \"\\\\\";\n  return result.join(\"\");\n};","map":{"version":3,"names":["module","exports","normalize","path","parts","split","length","result","absolutePathStart","i","sep","part","test","push","join"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/memory-fs/lib/normalize.js"],"sourcesContent":["module.exports = function normalize(path) {\r\n\tvar parts = path.split(/(\\\\+|\\/+)/);\r\n\tif(parts.length === 1)\r\n\t\treturn path;\r\n\tvar result = [];\r\n\tvar absolutePathStart = 0;\r\n\tfor(var i = 0, sep = false; i < parts.length; i++, sep = !sep) {\r\n\t\tvar part = parts[i];\r\n\t\tif(i === 0 && /^([A-Z]:)?$/i.test(part)) {\r\n\t\t\tresult.push(part);\r\n\t\t\tabsolutePathStart = 2;\r\n\t\t} else if(sep) {\r\n\t\t\tresult.push(part[0]);\r\n\t\t} else if(part === \"..\") {\r\n\t\t\tswitch(result.length) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// i. e. \"..\" => \"..\"\r\n\t\t\t\t\t// i. e. \"../a/b/c\" => \"../a/b/c\"\r\n\t\t\t\t\tresult.push(part);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t// i. e. \"a/..\" => \"\"\r\n\t\t\t\t\t// i. e. \"/..\" => \"/\"\r\n\t\t\t\t\t// i. e. \"C:\\..\" => \"C:\\\"\r\n\t\t\t\t\t// i. e. \"a/../b/c\" => \"b/c\"\r\n\t\t\t\t\t// i. e. \"/../b/c\" => \"/b/c\"\r\n\t\t\t\t\t// i. e. \"C:\\..\\a\\b\\c\" => \"C:\\a\\b\\c\"\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tsep = !sep;\r\n\t\t\t\t\tresult.length = absolutePathStart;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\t// i. e. \"a/b/..\" => \"a\"\r\n\t\t\t\t\t// i. e. \"/a/..\" => \"/\"\r\n\t\t\t\t\t// i. e. \"C:\\a\\..\" => \"C:\\\"\r\n\t\t\t\t\t// i. e. \"/a/../b/c\" => \"/b/c\"\r\n\t\t\t\t\tif(absolutePathStart === 0) {\r\n\t\t\t\t\t\tresult.length -= 3;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tsep = !sep;\r\n\t\t\t\t\t\tresult.length = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// i. e. \"/a/b/..\" => \"/a\"\r\n\t\t\t\t\t// i. e. \"/a/b/../c\" => \"/a/c\"\r\n\t\t\t\t\tresult.length -= 3;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else if(part === \".\") {\r\n\t\t\tswitch(result.length) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\t// i. e. \".\" => \".\"\r\n\t\t\t\t\t// i. e. \"./a/b/c\" => \"./a/b/c\"\r\n\t\t\t\t\tresult.push(part);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\t// i. e. \"a/.\" => \"a\"\r\n\t\t\t\t\t// i. e. \"/.\" => \"/\"\r\n\t\t\t\t\t// i. e. \"C:\\.\" => \"C:\\\"\r\n\t\t\t\t\t// i. e. \"C:\\.\\a\\b\\c\" => \"C:\\a\\b\\c\"\r\n\t\t\t\t\tif(absolutePathStart === 0) {\r\n\t\t\t\t\t\tresult.length--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tsep = !sep;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// i. e. \"a/b/.\" => \"a/b\"\r\n\t\t\t\t\t// i. e. \"/a/.\" => \"/\"\r\n\t\t\t\t\t// i. e. \"C:\\a\\.\" => \"C:\\\"\r\n\t\t\t\t\t// i. e. \"a/./b/c\" => \"a/b/c\"\r\n\t\t\t\t\t// i. e. \"/a/./b/c\" => \"/a/b/c\"\r\n\t\t\t\t\tresult.length--;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else if(part) {\r\n\t\t\tresult.push(part);\r\n\t\t}\r\n\t}\r\n\tif(result.length === 1 && /^[A-Za-z]:$/.test(result))\r\n\t\treturn result[0] + \"\\\\\";\r\n\treturn result.join(\"\");\r\n};\r\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EACzC,IAAIC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,WAAX,CAAZ;EACA,IAAGD,KAAK,CAACE,MAAN,KAAiB,CAApB,EACC,OAAOH,IAAP;EACD,IAAII,MAAM,GAAG,EAAb;EACA,IAAIC,iBAAiB,GAAG,CAAxB;;EACA,KAAI,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAArB,EAA4BD,CAAC,GAAGL,KAAK,CAACE,MAAtC,EAA8CG,CAAC,IAAIC,GAAG,GAAG,CAACA,GAA1D,EAA+D;IAC9D,IAAIC,IAAI,GAAGP,KAAK,CAACK,CAAD,CAAhB;;IACA,IAAGA,CAAC,KAAK,CAAN,IAAW,eAAeG,IAAf,CAAoBD,IAApB,CAAd,EAAyC;MACxCJ,MAAM,CAACM,IAAP,CAAYF,IAAZ;MACAH,iBAAiB,GAAG,CAApB;IACA,CAHD,MAGO,IAAGE,GAAH,EAAQ;MACdH,MAAM,CAACM,IAAP,CAAYF,IAAI,CAAC,CAAD,CAAhB;IACA,CAFM,MAEA,IAAGA,IAAI,KAAK,IAAZ,EAAkB;MACxB,QAAOJ,MAAM,CAACD,MAAd;QACC,KAAK,CAAL;UACC;UACA;UACAC,MAAM,CAACM,IAAP,CAAYF,IAAZ;UACA;;QACD,KAAK,CAAL;UACC;UACA;UACA;UACA;UACA;UACA;UACAF,CAAC;UACDC,GAAG,GAAG,CAACA,GAAP;UACAH,MAAM,CAACD,MAAP,GAAgBE,iBAAhB;UACA;;QACD,KAAK,CAAL;UACC;UACA;UACA;UACA;UACA,IAAGA,iBAAiB,KAAK,CAAzB,EAA4B;YAC3BD,MAAM,CAACD,MAAP,IAAiB,CAAjB;UACA,CAFD,MAEO;YACNG,CAAC;YACDC,GAAG,GAAG,CAACA,GAAP;YACAH,MAAM,CAACD,MAAP,GAAgB,CAAhB;UACA;;UACD;;QACD;UACC;UACA;UACAC,MAAM,CAACD,MAAP,IAAiB,CAAjB;UACA;MAlCF;IAoCA,CArCM,MAqCA,IAAGK,IAAI,KAAK,GAAZ,EAAiB;MACvB,QAAOJ,MAAM,CAACD,MAAd;QACC,KAAK,CAAL;UACC;UACA;UACAC,MAAM,CAACM,IAAP,CAAYF,IAAZ;UACA;;QACD,KAAK,CAAL;UACC;UACA;UACA;UACA;UACA,IAAGH,iBAAiB,KAAK,CAAzB,EAA4B;YAC3BD,MAAM,CAACD,MAAP;UACA,CAFD,MAEO;YACNG,CAAC;YACDC,GAAG,GAAG,CAACA,GAAP;UACA;;UACD;;QACD;UACC;UACA;UACA;UACA;UACA;UACAH,MAAM,CAACD,MAAP;UACA;MAzBF;IA2BA,CA5BM,MA4BA,IAAGK,IAAH,EAAS;MACfJ,MAAM,CAACM,IAAP,CAAYF,IAAZ;IACA;EACD;;EACD,IAAGJ,MAAM,CAACD,MAAP,KAAkB,CAAlB,IAAuB,cAAcM,IAAd,CAAmBL,MAAnB,CAA1B,EACC,OAAOA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAnB;EACD,OAAOA,MAAM,CAACO,IAAP,CAAY,EAAZ,CAAP;AACA,CArFD"},"metadata":{},"sourceType":"script"}