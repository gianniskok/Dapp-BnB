{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar define = require('define-property');\n/**\n * Text regex\n */\n\n\nvar TEXT_REGEX = '(\\\\[(?=.*\\\\])|\\\\])+';\nvar not = utils.createRegex(TEXT_REGEX);\n/**\n * Brackets parsers\n */\n\nfunction parsers(brackets) {\n  brackets.state = brackets.state || {};\n  brackets.parser.sets.bracket = brackets.parser.sets.bracket || [];\n  brackets.parser.capture('escape', function () {\n    if (this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(/^\\\\(.)/);\n    if (!m) return;\n    return pos({\n      type: 'escape',\n      val: m[0]\n    });\n  })\n  /**\n   * Text parser\n   */\n  .capture('text', function () {\n    if (this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(not);\n    if (!m || !m[0]) return;\n    return pos({\n      type: 'text',\n      val: m[0]\n    });\n  })\n  /**\n   * POSIX character classes: \"[[:alpha:][:digits:]]\"\n   */\n  .capture('posix', function () {\n    var pos = this.position();\n    var m = this.match(/^\\[:(.*?):\\](?=.*\\])/);\n    if (!m) return;\n    var inside = this.isInside('bracket');\n\n    if (inside) {\n      brackets.posix++;\n    }\n\n    return pos({\n      type: 'posix',\n      insideBracket: inside,\n      inner: m[1],\n      val: m[0]\n    });\n  })\n  /**\n   * Bracket (noop)\n   */\n  .capture('bracket', function () {})\n  /**\n   * Open: '['\n   */\n  .capture('bracket.open', function () {\n    var parsed = this.parsed;\n    var pos = this.position();\n    var m = this.match(/^\\[(?=.*\\])/);\n    if (!m) return;\n    var prev = this.prev();\n    var last = utils.last(prev.nodes);\n\n    if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n      last.val = last.val.slice(0, last.val.length - 1);\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    }\n\n    var open = pos({\n      type: 'bracket.open',\n      val: m[0]\n    });\n\n    if (last.type === 'bracket.open' || this.isInside('bracket')) {\n      open.val = '\\\\' + open.val;\n      open.type = 'bracket.inner';\n      open.escaped = true;\n      return open;\n    }\n\n    var node = pos({\n      type: 'bracket',\n      nodes: [open]\n    });\n    define(node, 'parent', prev);\n    define(open, 'parent', node);\n    this.push('bracket', node);\n    prev.nodes.push(node);\n  })\n  /**\n   * Bracket text\n   */\n  .capture('bracket.inner', function () {\n    if (!this.isInside('bracket')) return;\n    var pos = this.position();\n    var m = this.match(not);\n    if (!m || !m[0]) return;\n    var next = this.input.charAt(0);\n    var val = m[0];\n    var node = pos({\n      type: 'bracket.inner',\n      val: val\n    });\n\n    if (val === '\\\\\\\\') {\n      return node;\n    }\n\n    var first = val.charAt(0);\n    var last = val.slice(-1);\n\n    if (first === '!') {\n      val = '^' + val.slice(1);\n    }\n\n    if (last === '\\\\' || val === '^' && next === ']') {\n      val += this.input[0];\n      this.consume(1);\n    }\n\n    node.val = val;\n    return node;\n  })\n  /**\n   * Close: ']'\n   */\n  .capture('bracket.close', function () {\n    var parsed = this.parsed;\n    var pos = this.position();\n    var m = this.match(/^\\]/);\n    if (!m) return;\n    var prev = this.prev();\n    var last = utils.last(prev.nodes);\n\n    if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n      last.val = last.val.slice(0, last.val.length - 1);\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    }\n\n    var node = pos({\n      type: 'bracket.close',\n      rest: this.input,\n      val: m[0]\n    });\n\n    if (last.type === 'bracket.open') {\n      node.type = 'bracket.inner';\n      node.escaped = true;\n      return node;\n    }\n\n    var bracket = this.pop('bracket');\n\n    if (!this.isType(bracket, 'bracket')) {\n      if (this.options.strict) {\n        throw new Error('missing opening \"[\"');\n      }\n\n      node.type = 'bracket.inner';\n      node.escaped = true;\n      return node;\n    }\n\n    bracket.nodes.push(node);\n    define(node, 'parent', bracket);\n  });\n}\n/**\n * Brackets parsers\n */\n\n\nmodule.exports = parsers;\n/**\n * Expose text regex\n */\n\nmodule.exports.TEXT_REGEX = TEXT_REGEX;","map":{"version":3,"names":["utils","require","define","TEXT_REGEX","not","createRegex","parsers","brackets","state","parser","sets","bracket","capture","isInside","pos","position","m","match","type","val","inside","posix","insideBracket","inner","parsed","prev","last","nodes","slice","length","open","escaped","node","push","next","input","charAt","first","consume","rest","pop","isType","options","strict","Error","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/expand-brackets/lib/parsers.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar define = require('define-property');\n\n/**\n * Text regex\n */\n\nvar TEXT_REGEX = '(\\\\[(?=.*\\\\])|\\\\])+';\nvar not = utils.createRegex(TEXT_REGEX);\n\n/**\n * Brackets parsers\n */\n\nfunction parsers(brackets) {\n  brackets.state = brackets.state || {};\n  brackets.parser.sets.bracket = brackets.parser.sets.bracket || [];\n  brackets.parser\n\n    .capture('escape', function() {\n      if (this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(/^\\\\(.)/);\n      if (!m) return;\n\n      return pos({\n        type: 'escape',\n        val: m[0]\n      });\n    })\n\n    /**\n     * Text parser\n     */\n\n    .capture('text', function() {\n      if (this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(not);\n      if (!m || !m[0]) return;\n\n      return pos({\n        type: 'text',\n        val: m[0]\n      });\n    })\n\n    /**\n     * POSIX character classes: \"[[:alpha:][:digits:]]\"\n     */\n\n    .capture('posix', function() {\n      var pos = this.position();\n      var m = this.match(/^\\[:(.*?):\\](?=.*\\])/);\n      if (!m) return;\n\n      var inside = this.isInside('bracket');\n      if (inside) {\n        brackets.posix++;\n      }\n\n      return pos({\n        type: 'posix',\n        insideBracket: inside,\n        inner: m[1],\n        val: m[0]\n      });\n    })\n\n    /**\n     * Bracket (noop)\n     */\n\n    .capture('bracket', function() {})\n\n    /**\n     * Open: '['\n     */\n\n    .capture('bracket.open', function() {\n      var parsed = this.parsed;\n      var pos = this.position();\n      var m = this.match(/^\\[(?=.*\\])/);\n      if (!m) return;\n\n      var prev = this.prev();\n      var last = utils.last(prev.nodes);\n\n      if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n        last.val = last.val.slice(0, last.val.length - 1);\n        return pos({\n          type: 'escape',\n          val: m[0]\n        });\n      }\n\n      var open = pos({\n        type: 'bracket.open',\n        val: m[0]\n      });\n\n      if (last.type === 'bracket.open' || this.isInside('bracket')) {\n        open.val = '\\\\' + open.val;\n        open.type = 'bracket.inner';\n        open.escaped = true;\n        return open;\n      }\n\n      var node = pos({\n        type: 'bracket',\n        nodes: [open]\n      });\n\n      define(node, 'parent', prev);\n      define(open, 'parent', node);\n      this.push('bracket', node);\n      prev.nodes.push(node);\n    })\n\n    /**\n     * Bracket text\n     */\n\n    .capture('bracket.inner', function() {\n      if (!this.isInside('bracket')) return;\n      var pos = this.position();\n      var m = this.match(not);\n      if (!m || !m[0]) return;\n\n      var next = this.input.charAt(0);\n      var val = m[0];\n\n      var node = pos({\n        type: 'bracket.inner',\n        val: val\n      });\n\n      if (val === '\\\\\\\\') {\n        return node;\n      }\n\n      var first = val.charAt(0);\n      var last = val.slice(-1);\n\n      if (first === '!') {\n        val = '^' + val.slice(1);\n      }\n\n      if (last === '\\\\' || (val === '^' && next === ']')) {\n        val += this.input[0];\n        this.consume(1);\n      }\n\n      node.val = val;\n      return node;\n    })\n\n    /**\n     * Close: ']'\n     */\n\n    .capture('bracket.close', function() {\n      var parsed = this.parsed;\n      var pos = this.position();\n      var m = this.match(/^\\]/);\n      if (!m) return;\n\n      var prev = this.prev();\n      var last = utils.last(prev.nodes);\n\n      if (parsed.slice(-1) === '\\\\' && !this.isInside('bracket')) {\n        last.val = last.val.slice(0, last.val.length - 1);\n\n        return pos({\n          type: 'escape',\n          val: m[0]\n        });\n      }\n\n      var node = pos({\n        type: 'bracket.close',\n        rest: this.input,\n        val: m[0]\n      });\n\n      if (last.type === 'bracket.open') {\n        node.type = 'bracket.inner';\n        node.escaped = true;\n        return node;\n      }\n\n      var bracket = this.pop('bracket');\n      if (!this.isType(bracket, 'bracket')) {\n        if (this.options.strict) {\n          throw new Error('missing opening \"[\"');\n        }\n        node.type = 'bracket.inner';\n        node.escaped = true;\n        return node;\n      }\n\n      bracket.nodes.push(node);\n      define(node, 'parent', bracket);\n    });\n}\n\n/**\n * Brackets parsers\n */\n\nmodule.exports = parsers;\n\n/**\n * Expose text regex\n */\n\nmodule.exports.TEXT_REGEX = TEXT_REGEX;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}