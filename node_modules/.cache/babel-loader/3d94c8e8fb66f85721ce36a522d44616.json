{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\n\nconst getInnerRequest = require(\"./getInnerRequest\");\n\nmodule.exports = class ConcordModulesPlugin {\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"ConcordModulesPlugin\", (request, resolveContext, callback) => {\n      const innerRequest = getInnerRequest(resolver, request);\n      if (!innerRequest) return callback();\n      const concordField = DescriptionFileUtils.getField(request.descriptionFileData, \"concord\");\n      if (!concordField) return callback();\n      const data = concord.matchModule(request.context, concordField, innerRequest);\n      if (data === innerRequest) return callback();\n      if (data === undefined) return callback();\n\n      if (data === false) {\n        const ignoreObj = Object.assign({}, request, {\n          path: false\n        });\n        return callback(null, ignoreObj);\n      }\n\n      const obj = Object.assign({}, request, {\n        path: request.descriptionFileRoot,\n        request: data\n      });\n      resolver.doResolve(target, obj, \"aliased from description file \" + request.descriptionFilePath + \" with mapping '\" + innerRequest + \"' to '\" + data + \"'\", resolveContext, (err, result) => {\n        if (err) return callback(err); // Don't allow other aliasing or raw request\n\n        if (result === undefined) return callback(null, null);\n        callback(null, result);\n      });\n    });\n  }\n\n};","map":{"version":3,"names":["concord","require","DescriptionFileUtils","getInnerRequest","module","exports","ConcordModulesPlugin","constructor","source","options","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","innerRequest","concordField","getField","descriptionFileData","data","matchModule","context","undefined","ignoreObj","Object","assign","path","obj","descriptionFileRoot","doResolve","descriptionFilePath","err","result"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/enhanced-resolve/lib/ConcordModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst concord = require(\"./concord\");\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\nmodule.exports = class ConcordModulesPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ConcordModulesPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst concordField = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\t\"concord\"\n\t\t\t\t);\n\t\t\t\tif (!concordField) return callback();\n\t\t\t\tconst data = concord.matchModule(\n\t\t\t\t\trequest.context,\n\t\t\t\t\tconcordField,\n\t\t\t\t\tinnerRequest\n\t\t\t\t);\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\tconst ignoreObj = Object.assign({}, request, {\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t});\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data\n\t\t\t\t});\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAD,CAApC;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,mBAAD,CAA/B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,MAAMC,oBAAN,CAA2B;EAC3CC,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA0B;IACpC,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,MAAL,GAAcA,MAAd;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAT,CAAoB,KAAKH,MAAzB,CAAf;IACAE,QAAQ,CACNE,OADF,CACU,KAAKN,MADf,EAEEO,QAFF,CAEW,sBAFX,EAEmC,CAACC,OAAD,EAAUC,cAAV,EAA0BC,QAA1B,KAAuC;MACxE,MAAMC,YAAY,GAAGhB,eAAe,CAACS,QAAD,EAAWI,OAAX,CAApC;MACA,IAAI,CAACG,YAAL,EAAmB,OAAOD,QAAQ,EAAf;MACnB,MAAME,YAAY,GAAGlB,oBAAoB,CAACmB,QAArB,CACpBL,OAAO,CAACM,mBADY,EAEpB,SAFoB,CAArB;MAIA,IAAI,CAACF,YAAL,EAAmB,OAAOF,QAAQ,EAAf;MACnB,MAAMK,IAAI,GAAGvB,OAAO,CAACwB,WAAR,CACZR,OAAO,CAACS,OADI,EAEZL,YAFY,EAGZD,YAHY,CAAb;MAKA,IAAII,IAAI,KAAKJ,YAAb,EAA2B,OAAOD,QAAQ,EAAf;MAC3B,IAAIK,IAAI,KAAKG,SAAb,EAAwB,OAAOR,QAAQ,EAAf;;MACxB,IAAIK,IAAI,KAAK,KAAb,EAAoB;QACnB,MAAMI,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,OAAlB,EAA2B;UAC5Cc,IAAI,EAAE;QADsC,CAA3B,CAAlB;QAGA,OAAOZ,QAAQ,CAAC,IAAD,EAAOS,SAAP,CAAf;MACA;;MACD,MAAMI,GAAG,GAAGH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,OAAlB,EAA2B;QACtCc,IAAI,EAAEd,OAAO,CAACgB,mBADwB;QAEtChB,OAAO,EAAEO;MAF6B,CAA3B,CAAZ;MAIAX,QAAQ,CAACqB,SAAT,CACCvB,MADD,EAECqB,GAFD,EAGC,mCACCf,OAAO,CAACkB,mBADT,GAEC,iBAFD,GAGCf,YAHD,GAIC,QAJD,GAKCI,IALD,GAMC,GATF,EAUCN,cAVD,EAWC,CAACkB,GAAD,EAAMC,MAAN,KAAiB;QAChB,IAAID,GAAJ,EAAS,OAAOjB,QAAQ,CAACiB,GAAD,CAAf,CADO,CAGhB;;QACA,IAAIC,MAAM,KAAKV,SAAf,EAA0B,OAAOR,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAf;QAC1BA,QAAQ,CAAC,IAAD,EAAOkB,MAAP,CAAR;MACA,CAjBF;IAmBA,CA9CF;EA+CA;;AAxD0C,CAA5C"},"metadata":{},"sourceType":"script"}