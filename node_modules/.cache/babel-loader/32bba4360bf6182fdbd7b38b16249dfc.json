{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n} // TODO(sven): add flow in here\n\n\nimport { isSignature, isNumberLiteral } from \"@webassemblyjs/ast\";\nexport function moduleContextFromModuleAST(m) {\n  var moduleContext = new ModuleContext();\n\n  if (!(m.type === \"Module\")) {\n    throw new Error('m.type === \"Module\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  m.fields.forEach(function (field) {\n    switch (field.type) {\n      case \"Start\":\n        {\n          moduleContext.setStart(field.index);\n          break;\n        }\n\n      case \"TypeInstruction\":\n        {\n          moduleContext.addType(field);\n          break;\n        }\n\n      case \"Func\":\n        {\n          moduleContext.addFunction(field);\n          break;\n        }\n\n      case \"Global\":\n        {\n          moduleContext.defineGlobal(field);\n          break;\n        }\n\n      case \"ModuleImport\":\n        {\n          switch (field.descr.type) {\n            case \"GlobalType\":\n              {\n                moduleContext.importGlobal(field.descr.valtype, field.descr.mutability);\n                break;\n              }\n\n            case \"Memory\":\n              {\n                moduleContext.addMemory(field.descr.limits.min, field.descr.limits.max);\n                break;\n              }\n\n            case \"FuncImportDescr\":\n              {\n                moduleContext.importFunction(field.descr);\n                break;\n              }\n\n            case \"Table\":\n              {\n                // FIXME(sven): not implemented yet\n                break;\n              }\n\n            default:\n              throw new Error(\"Unsupported ModuleImport of type \" + JSON.stringify(field.descr.type));\n          }\n\n          break;\n        }\n\n      case \"Memory\":\n        {\n          moduleContext.addMemory(field.limits.min, field.limits.max);\n          break;\n        }\n    }\n  });\n  return moduleContext;\n}\n/**\n * Module context for type checking\n */\n\nexport var ModuleContext = /*#__PURE__*/function () {\n  function ModuleContext() {\n    _classCallCheck(this, ModuleContext);\n\n    this.funcs = [];\n    this.funcsOffsetByIdentifier = [];\n    this.types = [];\n    this.globals = [];\n    this.globalsOffsetByIdentifier = [];\n    this.mems = []; // Current stack frame\n\n    this.locals = [];\n    this.labels = [];\n    this.return = [];\n    this.debugName = \"unknown\";\n    this.start = null;\n  }\n  /**\n   * Set start segment\n   */\n\n\n  _createClass(ModuleContext, [{\n    key: \"setStart\",\n    value: function setStart(index) {\n      this.start = index.value;\n    }\n    /**\n     * Get start function\n     */\n\n  }, {\n    key: \"getStart\",\n    value: function getStart() {\n      return this.start;\n    }\n    /**\n     * Reset the active stack frame\n     */\n\n  }, {\n    key: \"newContext\",\n    value: function newContext(debugName, expectedResult) {\n      this.locals = [];\n      this.labels = [expectedResult];\n      this.return = expectedResult;\n      this.debugName = debugName;\n    }\n    /**\n     * Functions\n     */\n\n  }, {\n    key: \"addFunction\",\n    value: function addFunction(func\n    /*: Func*/\n    ) {\n      // eslint-disable-next-line prefer-const\n      var _ref = func.signature || {},\n          _ref$params = _ref.params,\n          args = _ref$params === void 0 ? [] : _ref$params,\n          _ref$results = _ref.results,\n          result = _ref$results === void 0 ? [] : _ref$results;\n\n      args = args.map(function (arg) {\n        return arg.valtype;\n      });\n      this.funcs.push({\n        args: args,\n        result: result\n      });\n\n      if (typeof func.name !== \"undefined\") {\n        this.funcsOffsetByIdentifier[func.name.value] = this.funcs.length - 1;\n      }\n    }\n  }, {\n    key: \"importFunction\",\n    value: function importFunction(funcimport) {\n      if (isSignature(funcimport.signature)) {\n        // eslint-disable-next-line prefer-const\n        var _funcimport$signature = funcimport.signature,\n            args = _funcimport$signature.params,\n            result = _funcimport$signature.results;\n        args = args.map(function (arg) {\n          return arg.valtype;\n        });\n        this.funcs.push({\n          args: args,\n          result: result\n        });\n      } else {\n        if (!isNumberLiteral(funcimport.signature)) {\n          throw new Error('isNumberLiteral(funcimport.signature)' + \" error: \" + (undefined || \"unknown\"));\n        }\n\n        var typeId = funcimport.signature.value;\n\n        if (!this.hasType(typeId)) {\n          throw new Error('this.hasType(typeId)' + \" error: \" + (undefined || \"unknown\"));\n        }\n\n        var signature = this.getType(typeId);\n        this.funcs.push({\n          args: signature.params.map(function (arg) {\n            return arg.valtype;\n          }),\n          result: signature.results\n        });\n      }\n\n      if (typeof funcimport.id !== \"undefined\") {\n        // imports are first, we can assume their index in the array\n        this.funcsOffsetByIdentifier[funcimport.id.value] = this.funcs.length - 1;\n      }\n    }\n  }, {\n    key: \"hasFunction\",\n    value: function hasFunction(index) {\n      return typeof this.getFunction(index) !== \"undefined\";\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      if (typeof index !== \"number\") {\n        throw new Error(\"getFunction only supported for number index\");\n      }\n\n      return this.funcs[index];\n    }\n  }, {\n    key: \"getFunctionOffsetByIdentifier\",\n    value: function getFunctionOffsetByIdentifier(name) {\n      if (!(typeof name === \"string\")) {\n        throw new Error('typeof name === \"string\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      return this.funcsOffsetByIdentifier[name];\n    }\n    /**\n     * Labels\n     */\n\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(result) {\n      this.labels.unshift(result);\n    }\n  }, {\n    key: \"hasLabel\",\n    value: function hasLabel(index) {\n      return this.labels.length > index && index >= 0;\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(index) {\n      return this.labels[index];\n    }\n  }, {\n    key: \"popLabel\",\n    value: function popLabel() {\n      this.labels.shift();\n    }\n    /**\n     * Locals\n     */\n\n  }, {\n    key: \"hasLocal\",\n    value: function hasLocal(index) {\n      return typeof this.getLocal(index) !== \"undefined\";\n    }\n  }, {\n    key: \"getLocal\",\n    value: function getLocal(index) {\n      return this.locals[index];\n    }\n  }, {\n    key: \"addLocal\",\n    value: function addLocal(type) {\n      this.locals.push(type);\n    }\n    /**\n     * Types\n     */\n\n  }, {\n    key: \"addType\",\n    value: function addType(type) {\n      if (!(type.functype.type === \"Signature\")) {\n        throw new Error('type.functype.type === \"Signature\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      this.types.push(type.functype);\n    }\n  }, {\n    key: \"hasType\",\n    value: function hasType(index) {\n      return this.types[index] !== undefined;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType(index) {\n      return this.types[index];\n    }\n    /**\n     * Globals\n     */\n\n  }, {\n    key: \"hasGlobal\",\n    value: function hasGlobal(index) {\n      return this.globals.length > index && index >= 0;\n    }\n  }, {\n    key: \"getGlobal\",\n    value: function getGlobal(index) {\n      return this.globals[index].type;\n    }\n  }, {\n    key: \"getGlobalOffsetByIdentifier\",\n    value: function getGlobalOffsetByIdentifier(name) {\n      if (!(typeof name === \"string\")) {\n        throw new Error('typeof name === \"string\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      return this.globalsOffsetByIdentifier[name];\n    }\n  }, {\n    key: \"defineGlobal\",\n    value: function defineGlobal(global\n    /*: Global*/\n    ) {\n      var type = global.globalType.valtype;\n      var mutability = global.globalType.mutability;\n      this.globals.push({\n        type: type,\n        mutability: mutability\n      });\n\n      if (typeof global.name !== \"undefined\") {\n        this.globalsOffsetByIdentifier[global.name.value] = this.globals.length - 1;\n      }\n    }\n  }, {\n    key: \"importGlobal\",\n    value: function importGlobal(type, mutability) {\n      this.globals.push({\n        type: type,\n        mutability: mutability\n      });\n    }\n  }, {\n    key: \"isMutableGlobal\",\n    value: function isMutableGlobal(index) {\n      return this.globals[index].mutability === \"var\";\n    }\n  }, {\n    key: \"isImmutableGlobal\",\n    value: function isImmutableGlobal(index) {\n      return this.globals[index].mutability === \"const\";\n    }\n    /**\n     * Memories\n     */\n\n  }, {\n    key: \"hasMemory\",\n    value: function hasMemory(index) {\n      return this.mems.length > index && index >= 0;\n    }\n  }, {\n    key: \"addMemory\",\n    value: function addMemory(min, max) {\n      this.mems.push({\n        min: min,\n        max: max\n      });\n    }\n  }, {\n    key: \"getMemory\",\n    value: function getMemory(index) {\n      return this.mems[index];\n    }\n  }]);\n\n  return ModuleContext;\n}();","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isSignature","isNumberLiteral","moduleContextFromModuleAST","m","moduleContext","ModuleContext","type","Error","undefined","fields","forEach","field","setStart","index","addType","addFunction","defineGlobal","descr","importGlobal","valtype","mutability","addMemory","limits","min","max","importFunction","JSON","stringify","funcs","funcsOffsetByIdentifier","types","globals","globalsOffsetByIdentifier","mems","locals","labels","return","debugName","start","value","getStart","newContext","expectedResult","func","_ref","signature","_ref$params","params","args","_ref$results","results","result","map","arg","push","name","funcimport","_funcimport$signature","typeId","hasType","getType","id","hasFunction","getFunction","getFunctionOffsetByIdentifier","addLabel","unshift","hasLabel","getLabel","popLabel","shift","hasLocal","getLocal","addLocal","functype","hasGlobal","getGlobal","getGlobalOffsetByIdentifier","global","globalType","isMutableGlobal","isImmutableGlobal","hasMemory","getMemory"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/@webassemblyjs/helper-module-context/esm/index.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// TODO(sven): add flow in here\nimport { isSignature, isNumberLiteral } from \"@webassemblyjs/ast\";\nexport function moduleContextFromModuleAST(m) {\n  var moduleContext = new ModuleContext();\n\n  if (!(m.type === \"Module\")) {\n    throw new Error('m.type === \"Module\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  m.fields.forEach(function (field) {\n    switch (field.type) {\n      case \"Start\":\n        {\n          moduleContext.setStart(field.index);\n          break;\n        }\n\n      case \"TypeInstruction\":\n        {\n          moduleContext.addType(field);\n          break;\n        }\n\n      case \"Func\":\n        {\n          moduleContext.addFunction(field);\n          break;\n        }\n\n      case \"Global\":\n        {\n          moduleContext.defineGlobal(field);\n          break;\n        }\n\n      case \"ModuleImport\":\n        {\n          switch (field.descr.type) {\n            case \"GlobalType\":\n              {\n                moduleContext.importGlobal(field.descr.valtype, field.descr.mutability);\n                break;\n              }\n\n            case \"Memory\":\n              {\n                moduleContext.addMemory(field.descr.limits.min, field.descr.limits.max);\n                break;\n              }\n\n            case \"FuncImportDescr\":\n              {\n                moduleContext.importFunction(field.descr);\n                break;\n              }\n\n            case \"Table\":\n              {\n                // FIXME(sven): not implemented yet\n                break;\n              }\n\n            default:\n              throw new Error(\"Unsupported ModuleImport of type \" + JSON.stringify(field.descr.type));\n          }\n\n          break;\n        }\n\n      case \"Memory\":\n        {\n          moduleContext.addMemory(field.limits.min, field.limits.max);\n          break;\n        }\n    }\n  });\n  return moduleContext;\n}\n/**\n * Module context for type checking\n */\n\nexport var ModuleContext =\n/*#__PURE__*/\nfunction () {\n  function ModuleContext() {\n    _classCallCheck(this, ModuleContext);\n\n    this.funcs = [];\n    this.funcsOffsetByIdentifier = [];\n    this.types = [];\n    this.globals = [];\n    this.globalsOffsetByIdentifier = [];\n    this.mems = []; // Current stack frame\n\n    this.locals = [];\n    this.labels = [];\n    this.return = [];\n    this.debugName = \"unknown\";\n    this.start = null;\n  }\n  /**\n   * Set start segment\n   */\n\n\n  _createClass(ModuleContext, [{\n    key: \"setStart\",\n    value: function setStart(index) {\n      this.start = index.value;\n    }\n    /**\n     * Get start function\n     */\n\n  }, {\n    key: \"getStart\",\n    value: function getStart() {\n      return this.start;\n    }\n    /**\n     * Reset the active stack frame\n     */\n\n  }, {\n    key: \"newContext\",\n    value: function newContext(debugName, expectedResult) {\n      this.locals = [];\n      this.labels = [expectedResult];\n      this.return = expectedResult;\n      this.debugName = debugName;\n    }\n    /**\n     * Functions\n     */\n\n  }, {\n    key: \"addFunction\",\n    value: function addFunction(func\n    /*: Func*/\n    ) {\n      // eslint-disable-next-line prefer-const\n      var _ref = func.signature || {},\n          _ref$params = _ref.params,\n          args = _ref$params === void 0 ? [] : _ref$params,\n          _ref$results = _ref.results,\n          result = _ref$results === void 0 ? [] : _ref$results;\n\n      args = args.map(function (arg) {\n        return arg.valtype;\n      });\n      this.funcs.push({\n        args: args,\n        result: result\n      });\n\n      if (typeof func.name !== \"undefined\") {\n        this.funcsOffsetByIdentifier[func.name.value] = this.funcs.length - 1;\n      }\n    }\n  }, {\n    key: \"importFunction\",\n    value: function importFunction(funcimport) {\n      if (isSignature(funcimport.signature)) {\n        // eslint-disable-next-line prefer-const\n        var _funcimport$signature = funcimport.signature,\n            args = _funcimport$signature.params,\n            result = _funcimport$signature.results;\n        args = args.map(function (arg) {\n          return arg.valtype;\n        });\n        this.funcs.push({\n          args: args,\n          result: result\n        });\n      } else {\n        if (!isNumberLiteral(funcimport.signature)) {\n          throw new Error('isNumberLiteral(funcimport.signature)' + \" error: \" + (undefined || \"unknown\"));\n        }\n\n        var typeId = funcimport.signature.value;\n\n        if (!this.hasType(typeId)) {\n          throw new Error('this.hasType(typeId)' + \" error: \" + (undefined || \"unknown\"));\n        }\n\n        var signature = this.getType(typeId);\n        this.funcs.push({\n          args: signature.params.map(function (arg) {\n            return arg.valtype;\n          }),\n          result: signature.results\n        });\n      }\n\n      if (typeof funcimport.id !== \"undefined\") {\n        // imports are first, we can assume their index in the array\n        this.funcsOffsetByIdentifier[funcimport.id.value] = this.funcs.length - 1;\n      }\n    }\n  }, {\n    key: \"hasFunction\",\n    value: function hasFunction(index) {\n      return typeof this.getFunction(index) !== \"undefined\";\n    }\n  }, {\n    key: \"getFunction\",\n    value: function getFunction(index) {\n      if (typeof index !== \"number\") {\n        throw new Error(\"getFunction only supported for number index\");\n      }\n\n      return this.funcs[index];\n    }\n  }, {\n    key: \"getFunctionOffsetByIdentifier\",\n    value: function getFunctionOffsetByIdentifier(name) {\n      if (!(typeof name === \"string\")) {\n        throw new Error('typeof name === \"string\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      return this.funcsOffsetByIdentifier[name];\n    }\n    /**\n     * Labels\n     */\n\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(result) {\n      this.labels.unshift(result);\n    }\n  }, {\n    key: \"hasLabel\",\n    value: function hasLabel(index) {\n      return this.labels.length > index && index >= 0;\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(index) {\n      return this.labels[index];\n    }\n  }, {\n    key: \"popLabel\",\n    value: function popLabel() {\n      this.labels.shift();\n    }\n    /**\n     * Locals\n     */\n\n  }, {\n    key: \"hasLocal\",\n    value: function hasLocal(index) {\n      return typeof this.getLocal(index) !== \"undefined\";\n    }\n  }, {\n    key: \"getLocal\",\n    value: function getLocal(index) {\n      return this.locals[index];\n    }\n  }, {\n    key: \"addLocal\",\n    value: function addLocal(type) {\n      this.locals.push(type);\n    }\n    /**\n     * Types\n     */\n\n  }, {\n    key: \"addType\",\n    value: function addType(type) {\n      if (!(type.functype.type === \"Signature\")) {\n        throw new Error('type.functype.type === \"Signature\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      this.types.push(type.functype);\n    }\n  }, {\n    key: \"hasType\",\n    value: function hasType(index) {\n      return this.types[index] !== undefined;\n    }\n  }, {\n    key: \"getType\",\n    value: function getType(index) {\n      return this.types[index];\n    }\n    /**\n     * Globals\n     */\n\n  }, {\n    key: \"hasGlobal\",\n    value: function hasGlobal(index) {\n      return this.globals.length > index && index >= 0;\n    }\n  }, {\n    key: \"getGlobal\",\n    value: function getGlobal(index) {\n      return this.globals[index].type;\n    }\n  }, {\n    key: \"getGlobalOffsetByIdentifier\",\n    value: function getGlobalOffsetByIdentifier(name) {\n      if (!(typeof name === \"string\")) {\n        throw new Error('typeof name === \"string\"' + \" error: \" + (undefined || \"unknown\"));\n      }\n\n      return this.globalsOffsetByIdentifier[name];\n    }\n  }, {\n    key: \"defineGlobal\",\n    value: function defineGlobal(global\n    /*: Global*/\n    ) {\n      var type = global.globalType.valtype;\n      var mutability = global.globalType.mutability;\n      this.globals.push({\n        type: type,\n        mutability: mutability\n      });\n\n      if (typeof global.name !== \"undefined\") {\n        this.globalsOffsetByIdentifier[global.name.value] = this.globals.length - 1;\n      }\n    }\n  }, {\n    key: \"importGlobal\",\n    value: function importGlobal(type, mutability) {\n      this.globals.push({\n        type: type,\n        mutability: mutability\n      });\n    }\n  }, {\n    key: \"isMutableGlobal\",\n    value: function isMutableGlobal(index) {\n      return this.globals[index].mutability === \"var\";\n    }\n  }, {\n    key: \"isImmutableGlobal\",\n    value: function isImmutableGlobal(index) {\n      return this.globals[index].mutability === \"const\";\n    }\n    /**\n     * Memories\n     */\n\n  }, {\n    key: \"hasMemory\",\n    value: function hasMemory(index) {\n      return this.mems.length > index && index >= 0;\n    }\n  }, {\n    key: \"addMemory\",\n    value: function addMemory(min, max) {\n      this.mems.push({\n        min: min,\n        max: max\n      });\n    }\n  }, {\n    key: \"getMemory\",\n    value: function getMemory(index) {\n      return this.mems[index];\n    }\n  }]);\n\n  return ModuleContext;\n}();"],"mappings":"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"},"metadata":{},"sourceType":"module"}