{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('lottie-web'), require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'lottie-web', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"lottie-react\"] = {}, global.Lottie, global.React));\n})(this, function (exports, lottie, React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n\n  var lottie__default = /*#__PURE__*/_interopDefaultLegacy(lottie);\n\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n\n    return target;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n\n    var key, i;\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n        target[key] = source[key];\n      }\n    }\n\n    return target;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n\n    var _s, _e;\n\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var _excluded$1 = [\"animationData\", \"loop\", \"autoplay\", \"initialSegment\", \"onComplete\", \"onLoopComplete\", \"onEnterFrame\", \"onSegmentStart\", \"onConfigReady\", \"onDataReady\", \"onDataFailed\", \"onLoadedImages\", \"onDOMLoaded\", \"onDestroy\", \"lottieRef\", \"renderer\", \"name\", \"assetsPath\", \"rendererSettings\"];\n\n  var useLottie = function useLottie(props, style) {\n    var animationData = props.animationData,\n        loop = props.loop,\n        autoplay = props.autoplay,\n        initialSegment = props.initialSegment,\n        onComplete = props.onComplete,\n        onLoopComplete = props.onLoopComplete,\n        onEnterFrame = props.onEnterFrame,\n        onSegmentStart = props.onSegmentStart,\n        onConfigReady = props.onConfigReady,\n        onDataReady = props.onDataReady,\n        onDataFailed = props.onDataFailed,\n        onLoadedImages = props.onLoadedImages,\n        onDOMLoaded = props.onDOMLoaded,\n        onDestroy = props.onDestroy;\n    props.lottieRef;\n    props.renderer;\n    props.name;\n    props.assetsPath;\n    props.rendererSettings;\n\n    var rest = _objectWithoutProperties(props, _excluded$1);\n\n    var _useState = React.useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        animationLoaded = _useState2[0],\n        setAnimationLoaded = _useState2[1];\n\n    var animationInstanceRef = React.useRef();\n    var animationContainer = React.useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n\n    /**\n     * Play\n     */\n\n    var play = function play() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n\n\n    var stop = function stop() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n\n\n    var pause = function pause() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n\n\n    var setSpeed = function setSpeed(speed) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n\n\n    var goToAndPlay = function goToAndPlay(value, isFrame) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n\n\n    var goToAndStop = function goToAndStop(value, isFrame) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n\n\n    var setDirection = function setDirection(direction) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n\n\n    var playSegments = function playSegments(segments, forceFlag) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n\n\n    var setSubframe = function setSubframe(useSubFrames) {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n\n\n    var getDuration = function getDuration(inFrames) {\n      var _a;\n\n      return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames);\n    };\n    /**\n     * Destroy animation\n     */\n\n\n    var destroy = function destroy() {\n      var _a;\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy(); // Removing the reference to the animation so separate cleanups are skipped.\n      // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n\n      animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n\n\n    var loadAnimation = function loadAnimation() {\n      var forcedConfigs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _a; // Return if the container ref is null\n\n\n      if (!animationContainer.current) {\n        return;\n      } // Destroy any previous instance\n\n\n      (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy(); // Build the animation configuration\n\n      var config = _objectSpread2(_objectSpread2(_objectSpread2({}, props), forcedConfigs), {}, {\n        container: animationContainer.current\n      }); // Save the animation instance\n\n\n      animationInstanceRef.current = lottie__default[\"default\"].loadAnimation(config);\n      setAnimationLoaded(!!animationInstanceRef.current); // Return a function that will clean up\n\n      return function () {\n        var _a;\n\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        animationInstanceRef.current = undefined;\n      };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n\n\n    React.useEffect(function () {\n      var onUnmount = loadAnimation(); // Clean up on unmount\n\n      return function () {\n        return onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n      }; // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]); // Update the autoplay state\n\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      }\n\n      animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]); // Update the initial segment state\n\n    React.useEffect(function () {\n      if (!animationInstanceRef.current) {\n        return;\n      } // When null should reset to default animation length\n\n\n      if (!initialSegment) {\n        animationInstanceRef.current.resetSegments(true);\n        return;\n      } // If it's not a valid segment, do nothing\n\n\n      if (!Array.isArray(initialSegment) || !initialSegment.length) {\n        return;\n      } // If the current position it's not in the new segment\n      // set the current position to start\n\n\n      if (animationInstanceRef.current.currentRawFrame < initialSegment[0] || animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n        animationInstanceRef.current.currentRawFrame = initialSegment[0];\n      } // Update the segment\n\n\n      animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n\n    /**\n     * Reinitialize listener on change\n     */\n\n    React.useEffect(function () {\n      var partialListeners = [{\n        name: \"complete\",\n        handler: onComplete\n      }, {\n        name: \"loopComplete\",\n        handler: onLoopComplete\n      }, {\n        name: \"enterFrame\",\n        handler: onEnterFrame\n      }, {\n        name: \"segmentStart\",\n        handler: onSegmentStart\n      }, {\n        name: \"config_ready\",\n        handler: onConfigReady\n      }, {\n        name: \"data_ready\",\n        handler: onDataReady\n      }, {\n        name: \"data_failed\",\n        handler: onDataFailed\n      }, {\n        name: \"loaded_images\",\n        handler: onLoadedImages\n      }, {\n        name: \"DOMLoaded\",\n        handler: onDOMLoaded\n      }, {\n        name: \"destroy\",\n        handler: onDestroy\n      }];\n      var listeners = partialListeners.filter(function (listener) {\n        return listener.handler != null;\n      });\n\n      if (!listeners.length) {\n        return;\n      }\n\n      var deregisterList = listeners.map(\n      /**\n       * Handle the process of adding an event listener\n       * @param {Listener} listener\n       * @return {Function} Function that deregister the listener\n       */\n      function (listener) {\n        var _a;\n\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler); // Return a function to deregister this listener\n\n        return function () {\n          var _a;\n\n          (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n        };\n      }); // Deregister listeners on unmount\n\n      return function () {\n        deregisterList.forEach(function (deregister) {\n          return deregister();\n        });\n      };\n    }, [onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy]);\n    /**\n     * Build the animation view\n     */\n\n    var View = /*#__PURE__*/React__default[\"default\"].createElement(\"div\", _objectSpread2({\n      style: style,\n      ref: animationContainer\n    }, rest));\n    return {\n      View: View,\n      play: play,\n      stop: stop,\n      pause: pause,\n      setSpeed: setSpeed,\n      goToAndStop: goToAndStop,\n      goToAndPlay: goToAndPlay,\n      setDirection: setDirection,\n      playSegments: playSegments,\n      setSubframe: setSubframe,\n      getDuration: getDuration,\n      destroy: destroy,\n      animationContainerRef: animationContainer,\n      animationLoaded: animationLoaded,\n      animationItem: animationInstanceRef.current\n    };\n  };\n\n  function getContainerVisibility(container) {\n    var _container$getBoundin = container.getBoundingClientRect(),\n        top = _container$getBoundin.top,\n        height = _container$getBoundin.height;\n\n    var current = window.innerHeight - top;\n    var max = window.innerHeight + height;\n    return current / max;\n  }\n\n  function getContainerCursorPosition(container, cursorX, cursorY) {\n    var _container$getBoundin2 = container.getBoundingClientRect(),\n        top = _container$getBoundin2.top,\n        left = _container$getBoundin2.left,\n        width = _container$getBoundin2.width,\n        height = _container$getBoundin2.height;\n\n    var x = (cursorX - left) / width;\n    var y = (cursorY - top) / height;\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  var useInitInteractivity = function useInitInteractivity(_ref) {\n    var wrapperRef = _ref.wrapperRef,\n        animationItem = _ref.animationItem,\n        mode = _ref.mode,\n        actions = _ref.actions;\n    React.useEffect(function () {\n      var wrapper = wrapperRef.current;\n\n      if (!wrapper || !animationItem || !actions.length) {\n        return;\n      }\n\n      animationItem.stop();\n\n      var scrollModeHandler = function scrollModeHandler() {\n        var assignedSegment = null;\n\n        var scrollHandler = function scrollHandler() {\n          var currentPercent = getContainerVisibility(wrapper); // Find the first action that satisfies the current position conditions\n\n          var action = actions.find(function (_ref2) {\n            var visibility = _ref2.visibility;\n            return visibility && currentPercent >= visibility[0] && currentPercent <= visibility[1];\n          }); // Skip if no matching action was found!\n\n          if (!action) {\n            return;\n          }\n\n          if (action.type === \"seek\" && action.visibility && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var frameToGo = action.frames[0] + Math.ceil((currentPercent - action.visibility[0]) / (action.visibility[1] - action.visibility[0]) * action.frames[1]); //! goToAndStop must be relative to the start of the current segment\n\n            animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n          }\n\n          if (action.type === \"loop\") {\n            // Loop: Loop a given frames\n            if (assignedSegment === null) {\n              // if not playing any segments currently. play those segments and save to state\n              animationItem.playSegments(action.frames, true);\n              assignedSegment = action.frames;\n            } else {\n              // if playing any segments currently.\n              //check if segments in state are equal to the frames selected by action\n              if (assignedSegment !== action.frames) {\n                // if they are not equal. new segments are to be loaded\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              } else if (animationItem.isPaused) {\n                // if they are equal the play method must be called only if lottie is paused\n                animationItem.playSegments(action.frames, true);\n                assignedSegment = action.frames;\n              }\n            }\n          }\n\n          if (action.type === \"play\" && animationItem.isPaused) {\n            // Play: Reset segments and continue playing full animation from current position\n            animationItem.resetSegments(true);\n            animationItem.play();\n          }\n\n          if (action.type === \"stop\") {\n            // Stop: Stop playback\n            animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n          }\n        };\n\n        document.addEventListener(\"scroll\", scrollHandler);\n        return function () {\n          document.removeEventListener(\"scroll\", scrollHandler);\n        };\n      };\n\n      var cursorModeHandler = function cursorModeHandler() {\n        var handleCursor = function handleCursor(_x, _y) {\n          var x = _x;\n          var y = _y; // Resolve cursor position if cursor is inside container\n\n          if (x !== -1 && y !== -1) {\n            // Get container cursor position\n            var pos = getContainerCursorPosition(wrapper, x, y); // Use the resolved position\n\n            x = pos.x;\n            y = pos.y;\n          } // Find the first action that satisfies the current position conditions\n\n\n          var action = actions.find(function (_ref3) {\n            var position = _ref3.position;\n\n            if (position && Array.isArray(position.x) && Array.isArray(position.y)) {\n              return x >= position.x[0] && x <= position.x[1] && y >= position.y[0] && y <= position.y[1];\n            }\n\n            if (position && !Number.isNaN(position.x) && !Number.isNaN(position.y)) {\n              return x === position.x && y === position.y;\n            }\n\n            return false;\n          }); // Skip if no matching action was found!\n\n          if (!action) {\n            return;\n          } // Process action types:\n\n\n          if (action.type === \"seek\" && action.position && Array.isArray(action.position.x) && Array.isArray(action.position.y) && action.frames.length === 2) {\n            // Seek: Go to a frame based on player scroll position action\n            var xPercent = (x - action.position.x[0]) / (action.position.x[1] - action.position.x[0]);\n            var yPercent = (y - action.position.y[0]) / (action.position.y[1] - action.position.y[0]);\n            animationItem.playSegments(action.frames, true);\n            animationItem.goToAndStop(Math.ceil((xPercent + yPercent) / 2 * (action.frames[1] - action.frames[0])), true);\n          }\n\n          if (action.type === \"loop\") {\n            animationItem.playSegments(action.frames, true);\n          }\n\n          if (action.type === \"play\") {\n            // Play: Reset segments and continue playing full animation from current position\n            if (animationItem.isPaused) {\n              animationItem.resetSegments(false);\n            }\n\n            animationItem.playSegments(action.frames);\n          }\n\n          if (action.type === \"stop\") {\n            animationItem.goToAndStop(action.frames[0], true);\n          }\n        };\n\n        var mouseMoveHandler = function mouseMoveHandler(ev) {\n          handleCursor(ev.clientX, ev.clientY);\n        };\n\n        var mouseOutHandler = function mouseOutHandler() {\n          handleCursor(-1, -1);\n        };\n\n        wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n        wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n        return function () {\n          wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n          wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n        };\n      };\n\n      switch (mode) {\n        case \"scroll\":\n          return scrollModeHandler();\n\n        case \"cursor\":\n          return cursorModeHandler();\n      } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    }, [mode, animationItem]);\n  };\n\n  var useLottieInteractivity = function useLottieInteractivity(_ref4) {\n    var actions = _ref4.actions,\n        mode = _ref4.mode,\n        lottieObj = _ref4.lottieObj;\n    var animationItem = lottieObj.animationItem,\n        View = lottieObj.View,\n        animationContainerRef = lottieObj.animationContainerRef;\n    useInitInteractivity({\n      actions: actions,\n      animationItem: animationItem,\n      mode: mode,\n      wrapperRef: animationContainerRef\n    });\n    return View;\n  };\n\n  var _excluded = [\"style\", \"interactivity\"];\n\n  var Lottie = function Lottie(props) {\n    var _a, _b, _c;\n\n    var style = props.style,\n        interactivity = props.interactivity,\n        lottieProps = _objectWithoutProperties(props, _excluded);\n    /**\n     * Initialize the 'useLottie' hook\n     */\n\n\n    var _useLottie = useLottie(lottieProps, style),\n        View = _useLottie.View,\n        play = _useLottie.play,\n        stop = _useLottie.stop,\n        pause = _useLottie.pause,\n        setSpeed = _useLottie.setSpeed,\n        goToAndStop = _useLottie.goToAndStop,\n        goToAndPlay = _useLottie.goToAndPlay,\n        setDirection = _useLottie.setDirection,\n        playSegments = _useLottie.playSegments,\n        setSubframe = _useLottie.setSubframe,\n        getDuration = _useLottie.getDuration,\n        destroy = _useLottie.destroy,\n        animationContainerRef = _useLottie.animationContainerRef,\n        animationLoaded = _useLottie.animationLoaded,\n        animationItem = _useLottie.animationItem;\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n\n\n    React.useEffect(function () {\n      if (props.lottieRef) {\n        props.lottieRef.current = {\n          play: play,\n          stop: stop,\n          pause: pause,\n          setSpeed: setSpeed,\n          goToAndPlay: goToAndPlay,\n          goToAndStop: goToAndStop,\n          setDirection: setDirection,\n          playSegments: playSegments,\n          setSubframe: setSubframe,\n          getDuration: getDuration,\n          destroy: destroy,\n          animationContainerRef: animationContainerRef,\n          animationLoaded: animationLoaded,\n          animationItem: animationItem\n        };\n      } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n      lottieObj: {\n        View: View,\n        play: play,\n        stop: stop,\n        pause: pause,\n        setSpeed: setSpeed,\n        goToAndStop: goToAndStop,\n        goToAndPlay: goToAndPlay,\n        setDirection: setDirection,\n        playSegments: playSegments,\n        setSubframe: setSubframe,\n        getDuration: getDuration,\n        destroy: destroy,\n        animationContainerRef: animationContainerRef,\n        animationLoaded: animationLoaded,\n        animationItem: animationItem\n      },\n      actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n      mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\"\n    });\n  };\n\n  Object.defineProperty(exports, 'LottiePlayer', {\n    enumerable: true,\n    get: function () {\n      return lottie__default[\"default\"];\n    }\n  });\n  exports[\"default\"] = Lottie;\n  exports.useLottie = useLottie;\n  exports.useLottieInteractivity = useLottieInteractivity;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["useLottie","props","style","animationData","loop","autoplay","initialSegment","onComplete","onLoopComplete","onEnterFrame","onSegmentStart","onConfigReady","onDataReady","onDataFailed","onLoadedImages","onDOMLoaded","onDestroy","lottieRef","renderer","name","assetsPath","rendererSettings","rest","useState","animationLoaded","setAnimationLoaded","animationInstanceRef","useRef","animationContainer","play","_a","current","stop","pause","setSpeed","speed","goToAndPlay","value","isFrame","goToAndStop","setDirection","direction","playSegments","segments","forceFlag","setSubframe","useSubFrames","getDuration","inFrames","destroy","undefined","loadAnimation","forcedConfigs","config","container","lottie","useEffect","onUnmount","resetSegments","Array","isArray","length","currentRawFrame","setSegment","partialListeners","handler","listeners","filter","listener","deregisterList","map","addEventListener","removeEventListener","forEach","deregister","View","React","createElement","ref","animationContainerRef","animationItem","getContainerVisibility","getBoundingClientRect","top","height","window","innerHeight","max","getContainerCursorPosition","cursorX","cursorY","left","width","x","y","useInitInteractivity","wrapperRef","mode","actions","wrapper","scrollModeHandler","assignedSegment","scrollHandler","currentPercent","action","find","visibility","type","frames","frameToGo","Math","ceil","firstFrame","isPaused","document","cursorModeHandler","handleCursor","_x","_y","pos","position","Number","isNaN","xPercent","yPercent","mouseMoveHandler","ev","clientX","clientY","mouseOutHandler","useLottieInteractivity","lottieObj","Lottie","_b","_c","interactivity","lottieProps"],"sources":["../compiled/hooks/useLottie.js","../compiled/hooks/useLottieInteractivity.js","../compiled/components/Lottie.js"],"sourcesContent":["import lottie from \"lottie-web\";\nimport React, { useEffect, useRef, useState, } from \"react\";\nconst useLottie = (props, style) => {\n    const { animationData, loop, autoplay, initialSegment, onComplete, onLoopComplete, onEnterFrame, onSegmentStart, onConfigReady, onDataReady, onDataFailed, onLoadedImages, onDOMLoaded, onDestroy, \n    // Specified here to take them out from the 'rest'\n    lottieRef, renderer, name, assetsPath, rendererSettings, \n    // TODO: find a better way to extract the html props to avoid specifying\n    //  all the props that we want to exclude (as you can see above)\n    ...rest } = props;\n    const [animationLoaded, setAnimationLoaded] = useState(false);\n    const animationInstanceRef = useRef();\n    const animationContainer = useRef(null);\n    /*\n          ======================================\n              INTERACTION METHODS\n          ======================================\n       */\n    /**\n     * Play\n     */\n    const play = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.play();\n    };\n    /**\n     * Stop\n     */\n    const stop = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.stop();\n    };\n    /**\n     * Pause\n     */\n    const pause = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.pause();\n    };\n    /**\n     * Set animation speed\n     * @param speed\n     */\n    const setSpeed = (speed) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSpeed(speed);\n    };\n    /**\n     * Got to frame and play\n     * @param value\n     * @param isFrame\n     */\n    const goToAndPlay = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndPlay(value, isFrame);\n    };\n    /**\n     * Got to frame and stop\n     * @param value\n     * @param isFrame\n     */\n    const goToAndStop = (value, isFrame) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.goToAndStop(value, isFrame);\n    };\n    /**\n     * Set animation direction\n     * @param direction\n     */\n    const setDirection = (direction) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setDirection(direction);\n    };\n    /**\n     * Play animation segments\n     * @param segments\n     * @param forceFlag\n     */\n    const playSegments = (segments, forceFlag) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.playSegments(segments, forceFlag);\n    };\n    /**\n     * Set sub frames\n     * @param useSubFrames\n     */\n    const setSubframe = (useSubFrames) => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.setSubframe(useSubFrames);\n    };\n    /**\n     * Get animation duration\n     * @param inFrames\n     */\n    const getDuration = (inFrames) => { var _a; return (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.getDuration(inFrames); };\n    /**\n     * Destroy animation\n     */\n    const destroy = () => {\n        var _a;\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Removing the reference to the animation so separate cleanups are skipped.\n        // Without it the internal `lottie-react` instance throws exceptions as it already cleared itself on destroy.\n        animationInstanceRef.current = undefined;\n    };\n    /*\n          ======================================\n              LOTTIE\n          ======================================\n       */\n    /**\n     * Load a new animation, and if it's the case, destroy the previous one\n     * @param {Object} forcedConfigs\n     */\n    const loadAnimation = (forcedConfigs = {}) => {\n        var _a;\n        // Return if the container ref is null\n        if (!animationContainer.current) {\n            return;\n        }\n        // Destroy any previous instance\n        (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        // Build the animation configuration\n        const config = {\n            ...props,\n            ...forcedConfigs,\n            container: animationContainer.current,\n        };\n        // Save the animation instance\n        animationInstanceRef.current = lottie.loadAnimation(config);\n        setAnimationLoaded(!!animationInstanceRef.current);\n        // Return a function that will clean up\n        return () => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n            animationInstanceRef.current = undefined;\n        };\n    };\n    /**\n     * (Re)Initialize when animation data changed\n     */\n    useEffect(() => {\n        const onUnmount = loadAnimation();\n        // Clean up on unmount\n        return () => onUnmount === null || onUnmount === void 0 ? void 0 : onUnmount();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animationData, loop]);\n    // Update the autoplay state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        animationInstanceRef.current.autoplay = !!autoplay;\n    }, [autoplay]);\n    // Update the initial segment state\n    useEffect(() => {\n        if (!animationInstanceRef.current) {\n            return;\n        }\n        // When null should reset to default animation length\n        if (!initialSegment) {\n            animationInstanceRef.current.resetSegments(true);\n            return;\n        }\n        // If it's not a valid segment, do nothing\n        if (!Array.isArray(initialSegment) || !initialSegment.length) {\n            return;\n        }\n        // If the current position it's not in the new segment\n        // set the current position to start\n        if (animationInstanceRef.current.currentRawFrame < initialSegment[0] ||\n            animationInstanceRef.current.currentRawFrame > initialSegment[1]) {\n            animationInstanceRef.current.currentRawFrame = initialSegment[0];\n        }\n        // Update the segment\n        animationInstanceRef.current.setSegment(initialSegment[0], initialSegment[1]);\n    }, [initialSegment]);\n    /*\n          ======================================\n              EVENTS\n          ======================================\n       */\n    /**\n     * Reinitialize listener on change\n     */\n    useEffect(() => {\n        const partialListeners = [\n            { name: \"complete\", handler: onComplete },\n            { name: \"loopComplete\", handler: onLoopComplete },\n            { name: \"enterFrame\", handler: onEnterFrame },\n            { name: \"segmentStart\", handler: onSegmentStart },\n            { name: \"config_ready\", handler: onConfigReady },\n            { name: \"data_ready\", handler: onDataReady },\n            { name: \"data_failed\", handler: onDataFailed },\n            { name: \"loaded_images\", handler: onLoadedImages },\n            { name: \"DOMLoaded\", handler: onDOMLoaded },\n            { name: \"destroy\", handler: onDestroy },\n        ];\n        const listeners = partialListeners.filter((listener) => listener.handler != null);\n        if (!listeners.length) {\n            return;\n        }\n        const deregisterList = listeners.map(\n        /**\n         * Handle the process of adding an event listener\n         * @param {Listener} listener\n         * @return {Function} Function that deregister the listener\n         */\n        (listener) => {\n            var _a;\n            (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener(listener.name, listener.handler);\n            // Return a function to deregister this listener\n            return () => {\n                var _a;\n                (_a = animationInstanceRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener(listener.name, listener.handler);\n            };\n        });\n        // Deregister listeners on unmount\n        return () => {\n            deregisterList.forEach((deregister) => deregister());\n        };\n    }, [\n        onComplete,\n        onLoopComplete,\n        onEnterFrame,\n        onSegmentStart,\n        onConfigReady,\n        onDataReady,\n        onDataFailed,\n        onLoadedImages,\n        onDOMLoaded,\n        onDestroy,\n    ]);\n    /**\n     * Build the animation view\n     */\n    const View = React.createElement(\"div\", { style: style, ref: animationContainer, ...rest });\n    return {\n        View,\n        play,\n        stop,\n        pause,\n        setSpeed,\n        goToAndStop,\n        goToAndPlay,\n        setDirection,\n        playSegments,\n        setSubframe,\n        getDuration,\n        destroy,\n        animationContainerRef: animationContainer,\n        animationLoaded,\n        animationItem: animationInstanceRef.current,\n    };\n};\nexport default useLottie;\n","import { useEffect } from \"react\";\n// helpers\nexport function getContainerVisibility(container) {\n    const { top, height } = container.getBoundingClientRect();\n    const current = window.innerHeight - top;\n    const max = window.innerHeight + height;\n    return current / max;\n}\nexport function getContainerCursorPosition(container, cursorX, cursorY) {\n    const { top, left, width, height } = container.getBoundingClientRect();\n    const x = (cursorX - left) / width;\n    const y = (cursorY - top) / height;\n    return { x, y };\n}\nexport const useInitInteractivity = ({ wrapperRef, animationItem, mode, actions, }) => {\n    useEffect(() => {\n        const wrapper = wrapperRef.current;\n        if (!wrapper || !animationItem || !actions.length) {\n            return;\n        }\n        animationItem.stop();\n        const scrollModeHandler = () => {\n            let assignedSegment = null;\n            const scrollHandler = () => {\n                const currentPercent = getContainerVisibility(wrapper);\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ visibility }) => visibility &&\n                    currentPercent >= visibility[0] &&\n                    currentPercent <= visibility[1]);\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                if (action.type === \"seek\" &&\n                    action.visibility &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const frameToGo = action.frames[0] +\n                        Math.ceil(((currentPercent - action.visibility[0]) /\n                            (action.visibility[1] - action.visibility[0])) *\n                            action.frames[1]);\n                    //! goToAndStop must be relative to the start of the current segment\n                    animationItem.goToAndStop(frameToGo - animationItem.firstFrame - 1, true);\n                }\n                if (action.type === \"loop\") {\n                    // Loop: Loop a given frames\n                    if (assignedSegment === null) {\n                        // if not playing any segments currently. play those segments and save to state\n                        animationItem.playSegments(action.frames, true);\n                        assignedSegment = action.frames;\n                    }\n                    else {\n                        // if playing any segments currently.\n                        //check if segments in state are equal to the frames selected by action\n                        if (assignedSegment !== action.frames) {\n                            // if they are not equal. new segments are to be loaded\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                        else if (animationItem.isPaused) {\n                            // if they are equal the play method must be called only if lottie is paused\n                            animationItem.playSegments(action.frames, true);\n                            assignedSegment = action.frames;\n                        }\n                    }\n                }\n                if (action.type === \"play\" && animationItem.isPaused) {\n                    // Play: Reset segments and continue playing full animation from current position\n                    animationItem.resetSegments(true);\n                    animationItem.play();\n                }\n                if (action.type === \"stop\") {\n                    // Stop: Stop playback\n                    animationItem.goToAndStop(action.frames[0] - animationItem.firstFrame - 1, true);\n                }\n            };\n            document.addEventListener(\"scroll\", scrollHandler);\n            return () => {\n                document.removeEventListener(\"scroll\", scrollHandler);\n            };\n        };\n        const cursorModeHandler = () => {\n            const handleCursor = (_x, _y) => {\n                let x = _x;\n                let y = _y;\n                // Resolve cursor position if cursor is inside container\n                if (x !== -1 && y !== -1) {\n                    // Get container cursor position\n                    const pos = getContainerCursorPosition(wrapper, x, y);\n                    // Use the resolved position\n                    x = pos.x;\n                    y = pos.y;\n                }\n                // Find the first action that satisfies the current position conditions\n                const action = actions.find(({ position }) => {\n                    if (position &&\n                        Array.isArray(position.x) &&\n                        Array.isArray(position.y)) {\n                        return (x >= position.x[0] &&\n                            x <= position.x[1] &&\n                            y >= position.y[0] &&\n                            y <= position.y[1]);\n                    }\n                    if (position &&\n                        !Number.isNaN(position.x) &&\n                        !Number.isNaN(position.y)) {\n                        return x === position.x && y === position.y;\n                    }\n                    return false;\n                });\n                // Skip if no matching action was found!\n                if (!action) {\n                    return;\n                }\n                // Process action types:\n                if (action.type === \"seek\" &&\n                    action.position &&\n                    Array.isArray(action.position.x) &&\n                    Array.isArray(action.position.y) &&\n                    action.frames.length === 2) {\n                    // Seek: Go to a frame based on player scroll position action\n                    const xPercent = (x - action.position.x[0]) /\n                        (action.position.x[1] - action.position.x[0]);\n                    const yPercent = (y - action.position.y[0]) /\n                        (action.position.y[1] - action.position.y[0]);\n                    animationItem.playSegments(action.frames, true);\n                    animationItem.goToAndStop(Math.ceil(((xPercent + yPercent) / 2) *\n                        (action.frames[1] - action.frames[0])), true);\n                }\n                if (action.type === \"loop\") {\n                    animationItem.playSegments(action.frames, true);\n                }\n                if (action.type === \"play\") {\n                    // Play: Reset segments and continue playing full animation from current position\n                    if (animationItem.isPaused) {\n                        animationItem.resetSegments(false);\n                    }\n                    animationItem.playSegments(action.frames);\n                }\n                if (action.type === \"stop\") {\n                    animationItem.goToAndStop(action.frames[0], true);\n                }\n            };\n            const mouseMoveHandler = (ev) => {\n                handleCursor(ev.clientX, ev.clientY);\n            };\n            const mouseOutHandler = () => {\n                handleCursor(-1, -1);\n            };\n            wrapper.addEventListener(\"mousemove\", mouseMoveHandler);\n            wrapper.addEventListener(\"mouseout\", mouseOutHandler);\n            return () => {\n                wrapper.removeEventListener(\"mousemove\", mouseMoveHandler);\n                wrapper.removeEventListener(\"mouseout\", mouseOutHandler);\n            };\n        };\n        switch (mode) {\n            case \"scroll\":\n                return scrollModeHandler();\n            case \"cursor\":\n                return cursorModeHandler();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode, animationItem]);\n};\nconst useLottieInteractivity = ({ actions, mode, lottieObj, }) => {\n    const { animationItem, View, animationContainerRef } = lottieObj;\n    useInitInteractivity({\n        actions,\n        animationItem,\n        mode,\n        wrapperRef: animationContainerRef,\n    });\n    return View;\n};\nexport default useLottieInteractivity;\n","import { useEffect } from \"react\";\nimport useLottie from \"../hooks/useLottie\";\nimport useLottieInteractivity from \"../hooks/useLottieInteractivity\";\nconst Lottie = (props) => {\n    var _a, _b, _c;\n    const { style, interactivity, ...lottieProps } = props;\n    /**\n     * Initialize the 'useLottie' hook\n     */\n    const { View, play, stop, pause, setSpeed, goToAndStop, goToAndPlay, setDirection, playSegments, setSubframe, getDuration, destroy, animationContainerRef, animationLoaded, animationItem, } = useLottie(lottieProps, style);\n    /**\n     * Make the hook variables/methods available through the provided 'lottieRef'\n     */\n    useEffect(() => {\n        if (props.lottieRef) {\n            props.lottieRef.current = {\n                play,\n                stop,\n                pause,\n                setSpeed,\n                goToAndPlay,\n                goToAndStop,\n                setDirection,\n                playSegments,\n                setSubframe,\n                getDuration,\n                destroy,\n                animationContainerRef,\n                animationLoaded,\n                animationItem,\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [(_a = props.lottieRef) === null || _a === void 0 ? void 0 : _a.current]);\n    return useLottieInteractivity({\n        lottieObj: {\n            View,\n            play,\n            stop,\n            pause,\n            setSpeed,\n            goToAndStop,\n            goToAndPlay,\n            setDirection,\n            playSegments,\n            setSubframe,\n            getDuration,\n            destroy,\n            animationContainerRef,\n            animationLoaded,\n            animationItem,\n        },\n        actions: (_b = interactivity === null || interactivity === void 0 ? void 0 : interactivity.actions) !== null && _b !== void 0 ? _b : [],\n        mode: (_c = interactivity === null || interactivity === void 0 ? void 0 : interactivity.mode) !== null && _c !== void 0 ? _c : \"scroll\",\n    });\n};\nexport default Lottie;\n"]},"metadata":{},"sourceType":"script"}