{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nconst {\n  Multiaddr\n} = require('multiaddr');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    const {\n      Peers\n    } = await res.json();\n    return {\n      Peers: Peers.map((\n      /** @type {string} */\n      ma) => new Multiaddr(ma))\n    };\n  }\n\n  return list;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","Multiaddr","module","exports","api","list","options","res","post","signal","searchParams","headers","Peers","json","map","ma"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/bootstrap/list.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => new Multiaddr(ma)) }\n  }\n\n  return list\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;;AACA,MAAM;EAAEE;AAAF,IAAgBF,OAAO,CAAC,WAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,IAAf,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,gBAAT,EAA2B;MAC3CC,MAAM,EAAEH,OAAO,CAACG,MAD2B;MAE3CC,YAAY,EAAEV,iBAAiB,CAACM,OAAD,CAFY;MAG3CK,OAAO,EAAEL,OAAO,CAACK;IAH0B,CAA3B,CAAlB;IAMA,MAAM;MAAEC;IAAF,IAAY,MAAML,GAAG,CAACM,IAAJ,EAAxB;IAEA,OAAO;MAAED,KAAK,EAAEA,KAAK,CAACE,GAAN,CAAU;MAAC;MAAsBC,EAAvB,KAA8B,IAAId,SAAJ,CAAcc,EAAd,CAAxC;IAAT,CAAP;EACD;;EAED,OAAOV,IAAP;AACD,CAjByB,CAA1B"},"metadata":{},"sourceType":"script"}