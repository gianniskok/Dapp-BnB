{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst sortByIndex = (a, b) => {\n  return a.index - b.index;\n};\n\nconst sortByIndex2 = (a, b) => {\n  return a.index2 - b.index2;\n};\n\nclass ChunkModuleIdRangePlugin {\n  constructor(options) {\n    this.options = options;\n  }\n\n  apply(compiler) {\n    const options = this.options;\n    compiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n      compilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n        const chunk = compilation.chunks.find(chunk => chunk.name === options.name);\n\n        if (!chunk) {\n          throw new Error(`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`);\n        }\n\n        let chunkModules;\n\n        if (options.order) {\n          chunkModules = Array.from(chunk.modulesIterable);\n\n          switch (options.order) {\n            case \"index\":\n              chunkModules.sort(sortByIndex);\n              break;\n\n            case \"index2\":\n              chunkModules.sort(sortByIndex2);\n              break;\n\n            default:\n              throw new Error(\"ChunkModuleIdRangePlugin: unexpected value of order\");\n          }\n        } else {\n          chunkModules = modules.filter(m => {\n            return m.chunksIterable.has(chunk);\n          });\n        }\n\n        let currentId = options.start || 0;\n\n        for (let i = 0; i < chunkModules.length; i++) {\n          const m = chunkModules[i];\n\n          if (m.id === null) {\n            m.id = currentId++;\n          }\n\n          if (options.end && currentId > options.end) break;\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = ChunkModuleIdRangePlugin;","map":{"version":3,"names":["sortByIndex","a","b","index","sortByIndex2","index2","ChunkModuleIdRangePlugin","constructor","options","apply","compiler","hooks","compilation","tap","moduleIds","modules","chunk","chunks","find","name","Error","chunkModules","order","Array","from","modulesIterable","sort","filter","m","chunksIterable","has","currentId","start","i","length","id","end","module","exports"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/webpack/lib/optimize/ChunkModuleIdRangePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst sortByIndex = (a, b) => {\n\treturn a.index - b.index;\n};\n\nconst sortByIndex2 = (a, b) => {\n\treturn a.index2 - b.index2;\n};\n\nclass ChunkModuleIdRangePlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst options = this.options;\n\t\tcompiler.hooks.compilation.tap(\"ChunkModuleIdRangePlugin\", compilation => {\n\t\t\tcompilation.hooks.moduleIds.tap(\"ChunkModuleIdRangePlugin\", modules => {\n\t\t\t\tconst chunk = compilation.chunks.find(\n\t\t\t\t\tchunk => chunk.name === options.name\n\t\t\t\t);\n\t\t\t\tif (!chunk) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`ChunkModuleIdRangePlugin: Chunk with name '${options.name}\"' was not found`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet chunkModules;\n\t\t\t\tif (options.order) {\n\t\t\t\t\tchunkModules = Array.from(chunk.modulesIterable);\n\t\t\t\t\tswitch (options.order) {\n\t\t\t\t\t\tcase \"index\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"index2\":\n\t\t\t\t\t\t\tchunkModules.sort(sortByIndex2);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\"ChunkModuleIdRangePlugin: unexpected value of order\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tchunkModules = modules.filter(m => {\n\t\t\t\t\t\treturn m.chunksIterable.has(chunk);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet currentId = options.start || 0;\n\t\t\t\tfor (let i = 0; i < chunkModules.length; i++) {\n\t\t\t\t\tconst m = chunkModules[i];\n\t\t\t\t\tif (m.id === null) {\n\t\t\t\t\t\tm.id = currentId++;\n\t\t\t\t\t}\n\t\t\t\t\tif (options.end && currentId > options.end) break;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\nmodule.exports = ChunkModuleIdRangePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,WAAW,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EAC7B,OAAOD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAnB;AACA,CAFD;;AAIA,MAAMC,YAAY,GAAG,CAACH,CAAD,EAAIC,CAAJ,KAAU;EAC9B,OAAOD,CAAC,CAACI,MAAF,GAAWH,CAAC,CAACG,MAApB;AACA,CAFD;;AAIA,MAAMC,wBAAN,CAA+B;EAC9BC,WAAW,CAACC,OAAD,EAAU;IACpB,KAAKA,OAAL,GAAeA,OAAf;EACA;;EAEDC,KAAK,CAACC,QAAD,EAAW;IACf,MAAMF,OAAO,GAAG,KAAKA,OAArB;IACAE,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CAA+B,0BAA/B,EAA2DD,WAAW,IAAI;MACzEA,WAAW,CAACD,KAAZ,CAAkBG,SAAlB,CAA4BD,GAA5B,CAAgC,0BAAhC,EAA4DE,OAAO,IAAI;QACtE,MAAMC,KAAK,GAAGJ,WAAW,CAACK,MAAZ,CAAmBC,IAAnB,CACbF,KAAK,IAAIA,KAAK,CAACG,IAAN,KAAeX,OAAO,CAACW,IADnB,CAAd;;QAGA,IAAI,CAACH,KAAL,EAAY;UACX,MAAM,IAAII,KAAJ,CACJ,8CAA6CZ,OAAO,CAACW,IAAK,kBADtD,CAAN;QAGA;;QAED,IAAIE,YAAJ;;QACA,IAAIb,OAAO,CAACc,KAAZ,EAAmB;UAClBD,YAAY,GAAGE,KAAK,CAACC,IAAN,CAAWR,KAAK,CAACS,eAAjB,CAAf;;UACA,QAAQjB,OAAO,CAACc,KAAhB;YACC,KAAK,OAAL;cACCD,YAAY,CAACK,IAAb,CAAkB1B,WAAlB;cACA;;YACD,KAAK,QAAL;cACCqB,YAAY,CAACK,IAAb,CAAkBtB,YAAlB;cACA;;YACD;cACC,MAAM,IAAIgB,KAAJ,CACL,qDADK,CAAN;UARF;QAYA,CAdD,MAcO;UACNC,YAAY,GAAGN,OAAO,CAACY,MAAR,CAAeC,CAAC,IAAI;YAClC,OAAOA,CAAC,CAACC,cAAF,CAAiBC,GAAjB,CAAqBd,KAArB,CAAP;UACA,CAFc,CAAf;QAGA;;QAED,IAAIe,SAAS,GAAGvB,OAAO,CAACwB,KAAR,IAAiB,CAAjC;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,YAAY,CAACa,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;UAC7C,MAAML,CAAC,GAAGP,YAAY,CAACY,CAAD,CAAtB;;UACA,IAAIL,CAAC,CAACO,EAAF,KAAS,IAAb,EAAmB;YAClBP,CAAC,CAACO,EAAF,GAAOJ,SAAS,EAAhB;UACA;;UACD,IAAIvB,OAAO,CAAC4B,GAAR,IAAeL,SAAS,GAAGvB,OAAO,CAAC4B,GAAvC,EAA4C;QAC5C;MACD,CAvCD;IAwCA,CAzCD;EA0CA;;AAjD6B;;AAmD/BC,MAAM,CAACC,OAAP,GAAiBhC,wBAAjB"},"metadata":{},"sourceType":"script"}