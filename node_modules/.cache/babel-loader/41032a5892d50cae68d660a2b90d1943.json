{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function* bw() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: stats => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    });\n    yield* res.ndjson();\n  }\n\n  return bw;\n});","map":{"version":3,"names":["configure","require","toUrlSearchParams","module","exports","api","bw","options","res","post","signal","searchParams","headers","transform","stats","totalIn","BigInt","TotalIn","totalOut","TotalOut","rateIn","parseFloat","RateIn","rateOut","RateOut","ndjson"],"sources":["/Users/iaonniskokkoros/Documents/OG BrokeBoiz/node_modules/ipfs-http-client/src/stats/bw.js"],"sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,gBAAiBC,EAAjB,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,UAAT,EAAqB;MACrCC,MAAM,EAAEH,OAAO,CAACG,MADqB;MAErCC,YAAY,EAAET,iBAAiB,CAACK,OAAD,CAFM;MAGrCK,OAAO,EAAEL,OAAO,CAACK,OAHoB;MAIrCC,SAAS,EAAGC,KAAD,KAAY;QACrBC,OAAO,EAAEC,MAAM,CAACF,KAAK,CAACG,OAAP,CADM;QAErBC,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACK,QAAP,CAFK;QAGrBC,MAAM,EAAEC,UAAU,CAACP,KAAK,CAACQ,MAAP,CAHG;QAIrBC,OAAO,EAAEF,UAAU,CAACP,KAAK,CAACU,OAAP;MAJE,CAAZ;IAJ0B,CAArB,CAAlB;IAYA,OAAQhB,GAAG,CAACiB,MAAJ,EAAR;EACD;;EACD,OAAOnB,EAAP;AACD,CApByB,CAA1B"},"metadata":{},"sourceType":"script"}